{
  "ok": false,
  "vulnerabilities": [
    {
      "id": "SNYK-JS-JSONWEBTOKEN-3180022",
      "title": "Improper Authentication",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:H/A:L",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<9.0.0"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "9.0.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.4,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "jsonwebtoken",
      "references": [
        {
          "url": "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L",
          "cvssV3BaseScore": 7.6,
          "modificationTime": "2023-02-28T01:10:17.504751Z"
        }
      ],
      "description": "## Overview\n[jsonwebtoken](https://github.com/auth0/node-jsonwebtoken) is a JSON Web Token implementation (symmetric and asymmetric)\n\nAffected versions of this package are vulnerable to Improper Authentication such that the lack of algorithm definition in the `jwt.verify()` function can lead to signature validation bypass due to defaulting to the `none` algorithm for signature verification. \r\n\r\n## Exploitability\r\nUsers are affected only if all of the following conditions are true for the `jwt.verify()` function:\r\n\r\n1) A token with no signature is received.\r\n\r\n2) No algorithms are specified.\r\n\r\n3) A falsy (e.g., `null`, `false`, `undefined`) secret or key is passed.\n## Remediation\nUpgrade `jsonwebtoken` to version 9.0.0 or higher.\n## References\n- [GitHub Commit](https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3)\n- [GitHub Release](https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0)\n",
      "epssDetails": {
        "percentile": "0.12836",
        "probability": "0.00046",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-23540"
        ],
        "CWE": [
          "CWE-287"
        ],
        "GHSA": [
          "GHSA-qwph-4952-7xr6"
        ]
      },
      "packageName": "jsonwebtoken",
      "proprietary": false,
      "creationTime": "2022-12-22T09:09:36.072853Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-12-22T03:32:59Z",
      "packageManager": "npm",
      "publicationTime": "2022-12-22T09:13:25.290846Z",
      "modificationTime": "2023-02-28T01:10:17.504751Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "share@lyuboraykov/vscode-share#db1aeeb791f65553291aeb62da4942e0a8479cd9",
        "firebase@3.9.0",
        "jsonwebtoken@7.4.3"
      ],
      "upgradePath": [
        false,
        "firebase@4.5.1"
      ],
      "version": "7.4.3",
      "name": "jsonwebtoken",
      "isUpgradable": true,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-JSONWEBTOKEN-3180024",
      "title": "Improper Restriction of Security Token Assignment",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<9.0.0"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "9.0.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "jsonwebtoken",
      "references": [
        {
          "url": "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 6.3,
          "modificationTime": "2023-02-28T01:10:17.572355Z"
        }
      ],
      "description": "## Overview\n[jsonwebtoken](https://github.com/auth0/node-jsonwebtoken) is a JSON Web Token implementation (symmetric and asymmetric)\n\nAffected versions of this package are vulnerable to Improper Restriction of Security Token Assignment via the `secretOrPublicKey ` argument due to misconfigurations of the key retrieval function `jwt.verify()`. Exploiting this vulnerability might result in incorrect verification of forged tokens when tokens signed with an asymmetric public key could be verified with a symmetric HS256 algorithm.\r\n\r\n**Note:**\r\nThis vulnerability affects your application if it supports the usage of both symmetric and asymmetric keys in `jwt.verify()` implementation with the same key retrieval function.\n## Remediation\nUpgrade `jsonwebtoken` to version 9.0.0 or higher.\n## References\n- [GitHub Commit](https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3)\n- [GitHub Release](https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0)\n",
      "epssDetails": {
        "percentile": "0.18857",
        "probability": "0.00053",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-23541"
        ],
        "CWE": [
          "CWE-1259"
        ],
        "GHSA": [
          "GHSA-hjrf-2m68-5959"
        ]
      },
      "packageName": "jsonwebtoken",
      "proprietary": false,
      "creationTime": "2022-12-22T09:14:27.155728Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-12-22T03:33:19Z",
      "packageManager": "npm",
      "publicationTime": "2022-12-22T09:16:03.621406Z",
      "modificationTime": "2023-02-28T01:10:17.572355Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "share@lyuboraykov/vscode-share#db1aeeb791f65553291aeb62da4942e0a8479cd9",
        "firebase@3.9.0",
        "jsonwebtoken@7.4.3"
      ],
      "upgradePath": [
        false,
        "firebase@4.5.1"
      ],
      "version": "7.4.3",
      "name": "jsonwebtoken",
      "isUpgradable": true,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-JSONWEBTOKEN-3180026",
      "title": "Use of a Broken or Risky Cryptographic Algorithm",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<9.0.0"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "9.0.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.8,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "jsonwebtoken",
      "references": [
        {
          "url": "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",
          "cvssV3BaseScore": 8.1,
          "modificationTime": "2022-12-31T01:11:45.823807Z"
        }
      ],
      "description": "## Overview\n[jsonwebtoken](https://github.com/auth0/node-jsonwebtoken) is a JSON Web Token implementation (symmetric and asymmetric)\n\nAffected versions of this package are vulnerable to Use of a Broken or Risky Cryptographic Algorithm such that the library can be misconfigured to use legacy, insecure key types for signature verification. For example, DSA keys could be used with the RS256 algorithm. \r\n\r\n## Exploitability\r\n\r\nUsers are affected when using an algorithm and a key type _other_ than the combinations mentioned below:\r\n\r\nEC: ES256, ES384, ES512\r\n                  \r\nRSA: RS256, RS384, RS512, PS256, PS384, PS512 \r\n\r\nRSA-PSS: PS256, PS384, PS512                      \r\n\r\nAnd for Elliptic Curve algorithms:\r\n\r\nES256: prime256v1\r\n\r\nES384: secp384r1\r\n\r\nES512:  secp521r1 \r\n\r\n## Workaround \r\n\r\nUsers who are unable to upgrade to the fixed version can use the  `allowInvalidAsymmetricKeyTypes` option  to `true` in the `sign()` and `verify()` functions to continue usage of invalid key type/algorithm combination in 9.0.0 for legacy compatibility.\n## Remediation\nUpgrade `jsonwebtoken` to version 9.0.0 or higher.\n## References\n- [GitHub Commit](https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3)\n- [GitHub Release](https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0)\n",
      "epssDetails": {
        "percentile": "0.16925",
        "probability": "0.00050",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-23539"
        ],
        "CWE": [
          "CWE-327"
        ],
        "GHSA": [
          "GHSA-8cf7-32gw-wr33"
        ]
      },
      "packageName": "jsonwebtoken",
      "proprietary": false,
      "creationTime": "2022-12-22T09:19:03.430735Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-12-22T03:32:22Z",
      "packageManager": "npm",
      "publicationTime": "2022-12-22T10:32:50.173080Z",
      "modificationTime": "2023-01-01T13:30:43.098324Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "share@lyuboraykov/vscode-share#db1aeeb791f65553291aeb62da4942e0a8479cd9",
        "firebase@3.9.0",
        "jsonwebtoken@7.4.3"
      ],
      "upgradePath": [
        false,
        "firebase@4.5.1"
      ],
      "version": "7.4.3",
      "name": "jsonwebtoken",
      "isUpgradable": true,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "npm:hoek:20180212",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L/E:P",
      "credit": [
        "Olivier Arteau (HoLyVieR)"
      ],
      "semver": {
        "vulnerable": [
          "<4.2.1",
          ">=5.0.0 <5.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "4.2.1",
        "5.0.3"
      ],
      "patches": [
        {
          "id": "patch:npm:hoek:20180212:0",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/hoek/20180212/20180212_0_0_hoek_5aed1a8c4a3d55722d1c799f2368857bf418d6df.patch"
          ],
          "version": "<4.2.1 >=4.1.0 || <3.0.4 >=3.0.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.879582Z"
        },
        {
          "id": "patch:npm:hoek:20180212:1",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/hoek/20180212/20180212_0_1_hoek_32ed5c9413321fbc37da5ca81a7cbab693786dee.patch"
          ],
          "version": ">=2.0.0 <3.0.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.880722Z"
        }
      ],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            ">=5.0.0 <5.0.3"
          ],
          "functionId": {
            "filePath": "lib/index.js",
            "className": null,
            "functionName": "exports.merge"
          }
        },
        {
          "version": [
            ">0.0.18 <4.2.1"
          ],
          "functionId": {
            "filePath": "lib/index.js",
            "className": null,
            "functionName": "exports.merge"
          }
        },
        {
          "version": [
            "<0.0.19"
          ],
          "functionId": {
            "filePath": "lib/hoek.js",
            "className": null,
            "functionName": "exports.merge"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "hoek",
      "references": [
        {
          "url": "https://github.com/hapijs/hoek/commit/32ed5c9413321fbc37da5ca81a7cbab693786dee",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/hapijs/hoek/commit/5aed1a8c4a3d55722d1c799f2368857bf418d6df",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/hapijs/hoek/issues/230",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/hapijs/hoek/pull/227",
          "title": "GitHub PR"
        },
        {
          "url": "https://hackerone.com/reports/310439",
          "title": "HackerOne Report"
        },
        {
          "url": "http://npmjs.com/advisories/566",
          "title": "NPM Security Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "low",
          "cvssV3Vector": "CVSS:3.0/AV:L/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 2.9,
          "modificationTime": "2023-03-26T15:11:38.028811Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.8,
          "modificationTime": "2022-01-03T16:28:04.444162Z"
        }
      ],
      "description": "## Overview\n[hoek](https://github.com/hapijs/hoek) is an Utility methods for the hapi ecosystem.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The utilities function allow modification of the `Object` prototype. If an attacker can control part of the structure passed to this function, they could add or modify an existing property.  \r\n\r\n## PoC by Olivier Arteau (HoLyVieR)\r\n```js\r\nvar Hoek = require('hoek');\r\nvar malicious_payload = '{\"__proto__\":{\"oops\":\"It works !\"}}';\r\n\r\nvar a = {};\r\nconsole.log(\"Before : \" + a.oops);\r\nHoek.merge({}, JSON.parse(malicious_payload));\r\nconsole.log(\"After : \" + a.oops);\r\n\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `hoek` to version 4.2.1, 5.0.3 or higher.\n## References\n- [GitHub Commit](https://github.com/hapijs/hoek/commit/32ed5c9413321fbc37da5ca81a7cbab693786dee)\n- [GitHub Commit](https://github.com/hapijs/hoek/commit/5aed1a8c4a3d55722d1c799f2368857bf418d6df)\n- [GitHub Issue](https://github.com/hapijs/hoek/issues/230)\n- [GitHub PR](https://github.com/hapijs/hoek/pull/227)\n- [HackerOne Report](https://hackerone.com/reports/310439)\n- [NPM Security Advisory](http://npmjs.com/advisories/566)\n",
      "epssDetails": {
        "percentile": "0.78957",
        "probability": "0.00782",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2018-3728"
        ],
        "CWE": [
          "CWE-1321"
        ],
        "NSP": [
          "566"
        ],
        "GHSA": [
          "GHSA-jp4x-w63m-7wgm"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-HOEK-12061"
        ]
      },
      "packageName": "hoek",
      "proprietary": false,
      "creationTime": "2018-02-12T22:28:27.612000Z",
      "functions_new": [
        {
          "version": [
            ">=5.0.0 <5.0.3"
          ],
          "functionId": {
            "filePath": "lib/index.js",
            "functionName": "exports.merge"
          }
        },
        {
          "version": [
            ">0.0.18 <4.2.1"
          ],
          "functionId": {
            "filePath": "lib/index.js",
            "functionName": "exports.merge"
          }
        },
        {
          "version": [
            "<0.0.19"
          ],
          "functionId": {
            "filePath": "lib/hoek.js",
            "functionName": "exports.merge"
          }
        }
      ],
      "alternativeIds": [
        "SNYK-JS-HOEK-12061"
      ],
      "disclosureTime": "2018-02-12T22:28:27Z",
      "packageManager": "npm",
      "publicationTime": "2018-02-14T13:22:50Z",
      "modificationTime": "2023-03-26T15:11:38.028811Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "share@lyuboraykov/vscode-share#db1aeeb791f65553291aeb62da4942e0a8479cd9",
        "firebase@3.9.0",
        "jsonwebtoken@7.4.3",
        "joi@6.10.1",
        "hoek@2.16.3"
      ],
      "upgradePath": [
        false,
        "firebase@4.5.1"
      ],
      "version": "2.16.3",
      "name": "hoek",
      "isUpgradable": true,
      "isPatchable": true,
      "isPinnable": false
    },
    {
      "id": "npm:hoek:20180212",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L/E:P",
      "credit": [
        "Olivier Arteau (HoLyVieR)"
      ],
      "semver": {
        "vulnerable": [
          "<4.2.1",
          ">=5.0.0 <5.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "4.2.1",
        "5.0.3"
      ],
      "patches": [
        {
          "id": "patch:npm:hoek:20180212:0",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/hoek/20180212/20180212_0_0_hoek_5aed1a8c4a3d55722d1c799f2368857bf418d6df.patch"
          ],
          "version": "<4.2.1 >=4.1.0 || <3.0.4 >=3.0.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.879582Z"
        },
        {
          "id": "patch:npm:hoek:20180212:1",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/hoek/20180212/20180212_0_1_hoek_32ed5c9413321fbc37da5ca81a7cbab693786dee.patch"
          ],
          "version": ">=2.0.0 <3.0.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.880722Z"
        }
      ],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            ">=5.0.0 <5.0.3"
          ],
          "functionId": {
            "filePath": "lib/index.js",
            "className": null,
            "functionName": "exports.merge"
          }
        },
        {
          "version": [
            ">0.0.18 <4.2.1"
          ],
          "functionId": {
            "filePath": "lib/index.js",
            "className": null,
            "functionName": "exports.merge"
          }
        },
        {
          "version": [
            "<0.0.19"
          ],
          "functionId": {
            "filePath": "lib/hoek.js",
            "className": null,
            "functionName": "exports.merge"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "hoek",
      "references": [
        {
          "url": "https://github.com/hapijs/hoek/commit/32ed5c9413321fbc37da5ca81a7cbab693786dee",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/hapijs/hoek/commit/5aed1a8c4a3d55722d1c799f2368857bf418d6df",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/hapijs/hoek/issues/230",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/hapijs/hoek/pull/227",
          "title": "GitHub PR"
        },
        {
          "url": "https://hackerone.com/reports/310439",
          "title": "HackerOne Report"
        },
        {
          "url": "http://npmjs.com/advisories/566",
          "title": "NPM Security Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "low",
          "cvssV3Vector": "CVSS:3.0/AV:L/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 2.9,
          "modificationTime": "2023-03-26T15:11:38.028811Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.8,
          "modificationTime": "2022-01-03T16:28:04.444162Z"
        }
      ],
      "description": "## Overview\n[hoek](https://github.com/hapijs/hoek) is an Utility methods for the hapi ecosystem.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The utilities function allow modification of the `Object` prototype. If an attacker can control part of the structure passed to this function, they could add or modify an existing property.  \r\n\r\n## PoC by Olivier Arteau (HoLyVieR)\r\n```js\r\nvar Hoek = require('hoek');\r\nvar malicious_payload = '{\"__proto__\":{\"oops\":\"It works !\"}}';\r\n\r\nvar a = {};\r\nconsole.log(\"Before : \" + a.oops);\r\nHoek.merge({}, JSON.parse(malicious_payload));\r\nconsole.log(\"After : \" + a.oops);\r\n\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `hoek` to version 4.2.1, 5.0.3 or higher.\n## References\n- [GitHub Commit](https://github.com/hapijs/hoek/commit/32ed5c9413321fbc37da5ca81a7cbab693786dee)\n- [GitHub Commit](https://github.com/hapijs/hoek/commit/5aed1a8c4a3d55722d1c799f2368857bf418d6df)\n- [GitHub Issue](https://github.com/hapijs/hoek/issues/230)\n- [GitHub PR](https://github.com/hapijs/hoek/pull/227)\n- [HackerOne Report](https://hackerone.com/reports/310439)\n- [NPM Security Advisory](http://npmjs.com/advisories/566)\n",
      "epssDetails": {
        "percentile": "0.78957",
        "probability": "0.00782",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2018-3728"
        ],
        "CWE": [
          "CWE-1321"
        ],
        "NSP": [
          "566"
        ],
        "GHSA": [
          "GHSA-jp4x-w63m-7wgm"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-HOEK-12061"
        ]
      },
      "packageName": "hoek",
      "proprietary": false,
      "creationTime": "2018-02-12T22:28:27.612000Z",
      "functions_new": [
        {
          "version": [
            ">=5.0.0 <5.0.3"
          ],
          "functionId": {
            "filePath": "lib/index.js",
            "functionName": "exports.merge"
          }
        },
        {
          "version": [
            ">0.0.18 <4.2.1"
          ],
          "functionId": {
            "filePath": "lib/index.js",
            "functionName": "exports.merge"
          }
        },
        {
          "version": [
            "<0.0.19"
          ],
          "functionId": {
            "filePath": "lib/hoek.js",
            "functionName": "exports.merge"
          }
        }
      ],
      "alternativeIds": [
        "SNYK-JS-HOEK-12061"
      ],
      "disclosureTime": "2018-02-12T22:28:27Z",
      "packageManager": "npm",
      "publicationTime": "2018-02-14T13:22:50Z",
      "modificationTime": "2023-03-26T15:11:38.028811Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "share@lyuboraykov/vscode-share#db1aeeb791f65553291aeb62da4942e0a8479cd9",
        "firebase@3.9.0",
        "jsonwebtoken@7.4.3",
        "joi@6.10.1",
        "topo@1.1.0",
        "hoek@2.16.3"
      ],
      "upgradePath": [
        false,
        "firebase@4.5.1"
      ],
      "version": "2.16.3",
      "name": "hoek",
      "isUpgradable": true,
      "isPatchable": true,
      "isPinnable": false
    }
  ],
  "numDependencies": 22,
  "severityMap": {
    "critical": 0,
    "high": 0,
    "medium": 5,
    "low": 0
  },
  "org": "bruswei",
  "packageManager": "npm",
  "summary": "5 vulnerable dependency paths",
  "filesystemPolicy": false,
  "filtered": {
    "ignore": [],
    "patch": []
  },
  "uniqueCount": 4,
  "hasUnknownVersions": false,
  "path": "https://github.com/lyuboraykov/vscode-share.git"
}
