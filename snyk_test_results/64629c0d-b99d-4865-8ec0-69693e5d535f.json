{
  "ok": false,
  "vulnerabilities": [
    {
      "id": "SNYK-JS-ADMZIP-1065796",
      "title": "Directory Traversal",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
      "credit": [
        "cthackers"
      ],
      "semver": {
        "vulnerable": [
          "<0.5.2"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "0.5.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.4,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "adm-zip",
      "references": [
        {
          "url": "https://github.com/cthackers/adm-zip/commit/119dcad6599adccc77982feb14a0c7440fa63013",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n[adm-zip](https://www.npmjs.com/package/adm-zip) is a JavaScript implementation for zip data compression for NodeJS.\n\nAffected versions of this package are vulnerable to Directory Traversal. It could extract files outside the target folder.\n\n## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```\n\n## Remediation\nUpgrade `adm-zip` to version 0.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/cthackers/adm-zip/commit/119dcad6599adccc77982feb14a0c7440fa63013)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-22"
        ]
      },
      "packageName": "adm-zip",
      "proprietary": false,
      "creationTime": "2021-01-28T07:59:50.454879Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-01-28T07:59:22Z",
      "packageManager": "npm",
      "publicationTime": "2021-02-15T17:04:18.109270Z",
      "modificationTime": "2021-02-15T17:04:18.111270Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "vscode-backup@DK013/vscdoe-backup#9f2e36e749f591e3ae4b32940fdf37d5d75716b8",
        "adm-zip@0.4.16"
      ],
      "upgradePath": [
        false,
        "adm-zip@0.5.2"
      ],
      "version": "0.4.16",
      "name": "adm-zip",
      "isUpgradable": true,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-JSZIP-1251497",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Dave Holoway"
      ],
      "semver": {
        "vulnerable": [
          "<3.7.0"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.7.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "jszip",
      "references": [
        {
          "url": "https://github.com/Stuk/jszip/commit/22357494f424178cb416cdb7d93b26dd4f824b36",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/Stuk/jszip/issues/762",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/Stuk/jszip/pull/766",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-01-03T16:36:06.078969Z"
        }
      ],
      "description": "## Overview\n[jszip](https://www.npmjs.org/package/jszip) is a Create, read and edit .zip files with JavaScript http://stuartk.com/jszip\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). Crafting a new zip file with filenames set to Object prototype values (e.g `__proto__,` `toString`, etc) results in a returned object with a modified prototype instance.\r\n\r\n### PoC\r\n```\r\nconst jszip = require('jszip');\r\n\r\nasync function loadZip() {\r\n// this is a raw buffer of demo.zip containing 2 empty files:\r\n// - \"file.txt\"\r\n// - \"toString\"\r\nconst demoZip = Buffer.from('UEsDBBQACAAIANS8kVIAAAAAAAAAAAAAAAAIACAAdG9TdHJpbmdVVA0AB3Bje2BmY3tgcGN7YHV4CwABBPUBAAAEFAAAAAMAUEsHCAAAAAACAAAAAAAAAFBLAwQUAAgACADDvJFSAAAAAAAAAAAAAAAACAAgAGZpbGUudHh0VVQNAAdPY3tg4FJ7YE9je2B1eAsAAQT1AQAABBQAAAADAFBLBwgAAAAAAgAAAAAAAABQSwECFAMUAAgACADUvJFSAAAAAAIAAAAAAAAACAAgAAAAAAAAAAAApIEAAAAAdG9TdHJpbmdVVA0AB3Bje2BmY3tgcGN7YHV4CwABBPUBAAAEFAAAAFBLAQIUAxQACAAIAMO8kVIAAAAAAgAAAAAAAAAIACAAAAAAAAAAAACkgVgAAABmaWxlLnR4dFVUDQAHT2N7YOBSe2BPY3tgdXgLAAEE9QEAAAQUAAAAUEsFBgAAAAACAAIArAAAALAAAAAAAA==', 'base64');\r\n\r\nconst zip = await jszip.loadAsync(demoZip);\r\nzip.files.toString(); // this will throw\r\nreturn zip;\r\n}\r\nloadZip();\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `jszip` to version 3.7.0 or higher.\n## References\n- [GitHub Commit](https://github.com/Stuk/jszip/commit/22357494f424178cb416cdb7d93b26dd4f824b36)\n- [GitHub Issue](https://github.com/Stuk/jszip/issues/762)\n- [GitHub PR](https://github.com/Stuk/jszip/pull/766)\n",
      "epssDetails": {
        "percentile": "0.50772",
        "probability": "0.00155",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-23413"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "jszip",
      "proprietary": true,
      "creationTime": "2021-04-18T13:13:34.385552Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-04-18T13:04:52Z",
      "packageManager": "npm",
      "publicationTime": "2021-07-25T14:10:32Z",
      "modificationTime": "2023-02-12T15:43:44.474983Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "vscode-backup@DK013/vscdoe-backup#9f2e36e749f591e3ae4b32940fdf37d5d75716b8",
        "node-zip@1.1.1",
        "jszip@2.5.0"
      ],
      "upgradePath": [
        false,
        false,
        "jszip@3.7.0"
      ],
      "version": "2.5.0",
      "name": "jszip",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-JSZIP-3188562",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:L",
      "credit": [
        "McCaulay Hudson"
      ],
      "semver": {
        "vulnerable": [
          "<2.7.0",
          ">=3.0.0 <3.8.0"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.7.0",
        "3.8.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "jszip",
      "references": [
        {
          "url": "https://stuk.github.io/jszip/CHANGES.html",
          "title": "Changelog"
        },
        {
          "url": "https://github.com/Stuk/jszip/commit/2edab366119c9ee948357c02f1206c28566cdf15",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 7.3,
          "modificationTime": "2023-02-01T14:09:08.597963Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 7.3,
          "modificationTime": "2023-03-04T01:10:15.514255Z"
        }
      ],
      "description": "## Overview\n[jszip](https://www.npmjs.org/package/jszip) is a Create, read and edit .zip files with JavaScript http://stuartk.com/jszip\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip) due to improper sanitization of filenames when files are loaded with the `loadAsync` method.\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nUpgrade `jszip` to version 2.7.0, 3.8.0 or higher.\n## References\n- [Changelog](https://stuk.github.io/jszip/CHANGES.html)\n- [GitHub Commit](https://github.com/Stuk/jszip/commit/2edab366119c9ee948357c02f1206c28566cdf15)\n",
      "epssDetails": {
        "percentile": "0.69716",
        "probability": "0.00395",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-48285"
        ],
        "CWE": [
          "CWE-29"
        ]
      },
      "packageName": "jszip",
      "proprietary": false,
      "creationTime": "2023-01-04T12:22:20.959980Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-01-04T12:08:19Z",
      "packageManager": "npm",
      "publicationTime": "2023-01-04T13:41:05.971929Z",
      "modificationTime": "2023-03-04T01:10:15.514255Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "vscode-backup@DK013/vscdoe-backup#9f2e36e749f591e3ae4b32940fdf37d5d75716b8",
        "node-zip@1.1.1",
        "jszip@2.5.0"
      ],
      "upgradePath": [
        false,
        false,
        "jszip@2.7.0"
      ],
      "version": "2.5.0",
      "name": "jszip",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    }
  ],
  "numDependencies": 38,
  "severityMap": {
    "critical": 0,
    "high": 1,
    "medium": 2,
    "low": 0
  },
  "org": "bruswei",
  "packageManager": "npm",
  "summary": "3 vulnerable dependency paths",
  "filesystemPolicy": false,
  "filtered": {
    "ignore": [],
    "patch": []
  },
  "uniqueCount": 3,
  "hasUnknownVersions": false,
  "path": "https://github.com/DK013/vscdoe-backup.git"
}
