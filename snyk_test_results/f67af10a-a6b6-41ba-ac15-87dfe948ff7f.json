{
  "ok": false,
  "vulnerabilities": [
    {
      "id": "SNYK-JS-ANSIREGEX-1583908",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          ">=2.1.1 <3.0.1",
          ">=4.0.0 <4.1.1",
          ">=5.0.0 <5.0.1",
          ">=6.0.0 <6.0.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.0.1",
        "4.1.1",
        "5.0.1",
        "6.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ansi-regex",
      "references": [
        {
          "url": "https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/pull/37",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-05-18T11:04:40.935720Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-25T16:45:11.225574Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-08T01:10:38.334810Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the sub-patterns` [[\\\\]()#;?]*` and `(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*`.\r\n\r\n\r\n### PoC\r\n```js\r\nimport ansiRegex from 'ansi-regex';\r\n\r\nfor(var i = 1; i <= 50000; i++) {\r\n    var time = Date.now();\r\n    var attack_str = \"\\u001B[\"+\";\".repeat(i*10000);\r\n    ansiRegex().test(attack_str)\r\n    var time_cost = Date.now() - time;\r\n    console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `ansi-regex` to version 3.0.1, 4.1.1, 5.0.1, 6.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9)\n- [GitHub PR](https://github.com/chalk/ansi-regex/pull/37)\n",
      "epssDetails": {
        "percentile": "0.65091",
        "probability": "0.00299",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-3807"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "ansi-regex",
      "proprietary": false,
      "creationTime": "2021-09-09T14:28:31.617043Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-09T14:27:43Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-12T12:52:37Z",
      "modificationTime": "2022-11-08T01:10:38.334810Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "node-sass@5.0.0",
        "chalk@1.1.3",
        "has-ansi@2.0.0",
        "ansi-regex@2.1.1"
      ],
      "upgradePath": [
        false,
        false,
        false,
        "chalk@2.0.0"
      ],
      "version": "2.1.1",
      "name": "ansi-regex",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-ANSIREGEX-1583908",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          ">=2.1.1 <3.0.1",
          ">=4.0.0 <4.1.1",
          ">=5.0.0 <5.0.1",
          ">=6.0.0 <6.0.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.0.1",
        "4.1.1",
        "5.0.1",
        "6.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ansi-regex",
      "references": [
        {
          "url": "https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/pull/37",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-05-18T11:04:40.935720Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-25T16:45:11.225574Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-08T01:10:38.334810Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the sub-patterns` [[\\\\]()#;?]*` and `(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*`.\r\n\r\n\r\n### PoC\r\n```js\r\nimport ansiRegex from 'ansi-regex';\r\n\r\nfor(var i = 1; i <= 50000; i++) {\r\n    var time = Date.now();\r\n    var attack_str = \"\\u001B[\"+\";\".repeat(i*10000);\r\n    ansiRegex().test(attack_str)\r\n    var time_cost = Date.now() - time;\r\n    console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `ansi-regex` to version 3.0.1, 4.1.1, 5.0.1, 6.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9)\n- [GitHub PR](https://github.com/chalk/ansi-regex/pull/37)\n",
      "epssDetails": {
        "percentile": "0.65091",
        "probability": "0.00299",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-3807"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "ansi-regex",
      "proprietary": false,
      "creationTime": "2021-09-09T14:28:31.617043Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-09T14:27:43Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-12T12:52:37Z",
      "modificationTime": "2022-11-08T01:10:38.334810Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "node-sass@5.0.0",
        "chalk@1.1.3",
        "strip-ansi@3.0.1",
        "ansi-regex@2.1.1"
      ],
      "upgradePath": [
        false,
        false,
        false,
        "chalk@2.0.0"
      ],
      "version": "2.1.1",
      "name": "ansi-regex",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-ANSIREGEX-1583908",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          ">=2.1.1 <3.0.1",
          ">=4.0.0 <4.1.1",
          ">=5.0.0 <5.0.1",
          ">=6.0.0 <6.0.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.0.1",
        "4.1.1",
        "5.0.1",
        "6.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ansi-regex",
      "references": [
        {
          "url": "https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/pull/37",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-05-18T11:04:40.935720Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-25T16:45:11.225574Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-08T01:10:38.334810Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the sub-patterns` [[\\\\]()#;?]*` and `(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*`.\r\n\r\n\r\n### PoC\r\n```js\r\nimport ansiRegex from 'ansi-regex';\r\n\r\nfor(var i = 1; i <= 50000; i++) {\r\n    var time = Date.now();\r\n    var attack_str = \"\\u001B[\"+\";\".repeat(i*10000);\r\n    ansiRegex().test(attack_str)\r\n    var time_cost = Date.now() - time;\r\n    console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `ansi-regex` to version 3.0.1, 4.1.1, 5.0.1, 6.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9)\n- [GitHub PR](https://github.com/chalk/ansi-regex/pull/37)\n",
      "epssDetails": {
        "percentile": "0.65091",
        "probability": "0.00299",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-3807"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "ansi-regex",
      "proprietary": false,
      "creationTime": "2021-09-09T14:28:31.617043Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-09T14:27:43Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-12T12:52:37Z",
      "modificationTime": "2022-11-08T01:10:38.334810Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "node-sass@5.0.0",
        "npmlog@4.1.2",
        "gauge@2.7.4",
        "strip-ansi@3.0.1",
        "ansi-regex@2.1.1"
      ],
      "upgradePath": [
        false,
        false,
        "node-sass@7.0.0",
        "npmlog@5.0.0",
        "gauge@3.0.0",
        "strip-ansi@4.0.0",
        "ansi-regex@3.0.1"
      ],
      "version": "2.1.1",
      "name": "ansi-regex",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-ANSIREGEX-1583908",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          ">=2.1.1 <3.0.1",
          ">=4.0.0 <4.1.1",
          ">=5.0.0 <5.0.1",
          ">=6.0.0 <6.0.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.0.1",
        "4.1.1",
        "5.0.1",
        "6.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ansi-regex",
      "references": [
        {
          "url": "https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/pull/37",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-05-18T11:04:40.935720Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-25T16:45:11.225574Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-08T01:10:38.334810Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the sub-patterns` [[\\\\]()#;?]*` and `(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*`.\r\n\r\n\r\n### PoC\r\n```js\r\nimport ansiRegex from 'ansi-regex';\r\n\r\nfor(var i = 1; i <= 50000; i++) {\r\n    var time = Date.now();\r\n    var attack_str = \"\\u001B[\"+\";\".repeat(i*10000);\r\n    ansiRegex().test(attack_str)\r\n    var time_cost = Date.now() - time;\r\n    console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `ansi-regex` to version 3.0.1, 4.1.1, 5.0.1, 6.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9)\n- [GitHub PR](https://github.com/chalk/ansi-regex/pull/37)\n",
      "epssDetails": {
        "percentile": "0.65091",
        "probability": "0.00299",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-3807"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "ansi-regex",
      "proprietary": false,
      "creationTime": "2021-09-09T14:28:31.617043Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-09T14:27:43Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-12T12:52:37Z",
      "modificationTime": "2022-11-08T01:10:38.334810Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "@vue/component-compiler@4.2.4",
        "postcss-modules-sync@1.0.0",
        "postcss@5.2.18",
        "chalk@1.1.3",
        "has-ansi@2.0.0",
        "ansi-regex@2.1.1"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        "postcss@7.0.37"
      ],
      "version": "2.1.1",
      "name": "ansi-regex",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-ANSIREGEX-1583908",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          ">=2.1.1 <3.0.1",
          ">=4.0.0 <4.1.1",
          ">=5.0.0 <5.0.1",
          ">=6.0.0 <6.0.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.0.1",
        "4.1.1",
        "5.0.1",
        "6.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ansi-regex",
      "references": [
        {
          "url": "https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/pull/37",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-05-18T11:04:40.935720Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-25T16:45:11.225574Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-08T01:10:38.334810Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the sub-patterns` [[\\\\]()#;?]*` and `(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*`.\r\n\r\n\r\n### PoC\r\n```js\r\nimport ansiRegex from 'ansi-regex';\r\n\r\nfor(var i = 1; i <= 50000; i++) {\r\n    var time = Date.now();\r\n    var attack_str = \"\\u001B[\"+\";\".repeat(i*10000);\r\n    ansiRegex().test(attack_str)\r\n    var time_cost = Date.now() - time;\r\n    console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `ansi-regex` to version 3.0.1, 4.1.1, 5.0.1, 6.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9)\n- [GitHub PR](https://github.com/chalk/ansi-regex/pull/37)\n",
      "epssDetails": {
        "percentile": "0.65091",
        "probability": "0.00299",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-3807"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "ansi-regex",
      "proprietary": false,
      "creationTime": "2021-09-09T14:28:31.617043Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-09T14:27:43Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-12T12:52:37Z",
      "modificationTime": "2022-11-08T01:10:38.334810Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "@vue/component-compiler@4.2.4",
        "postcss-modules-sync@1.0.0",
        "postcss@5.2.18",
        "chalk@1.1.3",
        "strip-ansi@3.0.1",
        "ansi-regex@2.1.1"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        "postcss@7.0.37"
      ],
      "version": "2.1.1",
      "name": "ansi-regex",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-ANSIREGEX-1583908",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          ">=2.1.1 <3.0.1",
          ">=4.0.0 <4.1.1",
          ">=5.0.0 <5.0.1",
          ">=6.0.0 <6.0.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.0.1",
        "4.1.1",
        "5.0.1",
        "6.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ansi-regex",
      "references": [
        {
          "url": "https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/pull/37",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-05-18T11:04:40.935720Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-25T16:45:11.225574Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-08T01:10:38.334810Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the sub-patterns` [[\\\\]()#;?]*` and `(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*`.\r\n\r\n\r\n### PoC\r\n```js\r\nimport ansiRegex from 'ansi-regex';\r\n\r\nfor(var i = 1; i <= 50000; i++) {\r\n    var time = Date.now();\r\n    var attack_str = \"\\u001B[\"+\";\".repeat(i*10000);\r\n    ansiRegex().test(attack_str)\r\n    var time_cost = Date.now() - time;\r\n    console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `ansi-regex` to version 3.0.1, 4.1.1, 5.0.1, 6.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9)\n- [GitHub PR](https://github.com/chalk/ansi-regex/pull/37)\n",
      "epssDetails": {
        "percentile": "0.65091",
        "probability": "0.00299",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-3807"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "ansi-regex",
      "proprietary": false,
      "creationTime": "2021-09-09T14:28:31.617043Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-09T14:27:43Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-12T12:52:37Z",
      "modificationTime": "2022-11-08T01:10:38.334810Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "node-sass@5.0.0",
        "npmlog@4.1.2",
        "gauge@2.7.4",
        "string-width@1.0.2",
        "strip-ansi@3.0.1",
        "ansi-regex@2.1.1"
      ],
      "upgradePath": [
        false,
        false,
        "node-sass@7.0.0",
        "npmlog@5.0.0",
        "gauge@3.0.0",
        "string-width@2.1.0",
        "strip-ansi@4.0.0",
        "ansi-regex@3.0.1"
      ],
      "version": "2.1.1",
      "name": "ansi-regex",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-ANSIREGEX-1583908",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          ">=2.1.1 <3.0.1",
          ">=4.0.0 <4.1.1",
          ">=5.0.0 <5.0.1",
          ">=6.0.0 <6.0.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.0.1",
        "4.1.1",
        "5.0.1",
        "6.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ansi-regex",
      "references": [
        {
          "url": "https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/pull/37",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-05-18T11:04:40.935720Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-25T16:45:11.225574Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-08T01:10:38.334810Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the sub-patterns` [[\\\\]()#;?]*` and `(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*`.\r\n\r\n\r\n### PoC\r\n```js\r\nimport ansiRegex from 'ansi-regex';\r\n\r\nfor(var i = 1; i <= 50000; i++) {\r\n    var time = Date.now();\r\n    var attack_str = \"\\u001B[\"+\";\".repeat(i*10000);\r\n    ansiRegex().test(attack_str)\r\n    var time_cost = Date.now() - time;\r\n    console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `ansi-regex` to version 3.0.1, 4.1.1, 5.0.1, 6.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9)\n- [GitHub PR](https://github.com/chalk/ansi-regex/pull/37)\n",
      "epssDetails": {
        "percentile": "0.65091",
        "probability": "0.00299",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-3807"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "ansi-regex",
      "proprietary": false,
      "creationTime": "2021-09-09T14:28:31.617043Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-09T14:27:43Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-12T12:52:37Z",
      "modificationTime": "2022-11-08T01:10:38.334810Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "node-sass@5.0.0",
        "node-gyp@7.1.2",
        "npmlog@4.1.2",
        "gauge@2.7.4",
        "strip-ansi@3.0.1",
        "ansi-regex@2.1.1"
      ],
      "upgradePath": [
        false,
        false,
        "node-sass@7.0.1",
        "node-gyp@8.4.1",
        "npmlog@6.0.0",
        "gauge@4.0.0",
        "strip-ansi@6.0.1",
        "ansi-regex@5.0.1"
      ],
      "version": "2.1.1",
      "name": "ansi-regex",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-ANSIREGEX-1583908",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          ">=2.1.1 <3.0.1",
          ">=4.0.0 <4.1.1",
          ">=5.0.0 <5.0.1",
          ">=6.0.0 <6.0.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.0.1",
        "4.1.1",
        "5.0.1",
        "6.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ansi-regex",
      "references": [
        {
          "url": "https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/pull/37",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-05-18T11:04:40.935720Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-25T16:45:11.225574Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-08T01:10:38.334810Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the sub-patterns` [[\\\\]()#;?]*` and `(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*`.\r\n\r\n\r\n### PoC\r\n```js\r\nimport ansiRegex from 'ansi-regex';\r\n\r\nfor(var i = 1; i <= 50000; i++) {\r\n    var time = Date.now();\r\n    var attack_str = \"\\u001B[\"+\";\".repeat(i*10000);\r\n    ansiRegex().test(attack_str)\r\n    var time_cost = Date.now() - time;\r\n    console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `ansi-regex` to version 3.0.1, 4.1.1, 5.0.1, 6.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9)\n- [GitHub PR](https://github.com/chalk/ansi-regex/pull/37)\n",
      "epssDetails": {
        "percentile": "0.65091",
        "probability": "0.00299",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-3807"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "ansi-regex",
      "proprietary": false,
      "creationTime": "2021-09-09T14:28:31.617043Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-09T14:27:43Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-12T12:52:37Z",
      "modificationTime": "2022-11-08T01:10:38.334810Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "node-sass@5.0.0",
        "node-gyp@7.1.2",
        "npmlog@4.1.2",
        "gauge@2.7.4",
        "string-width@1.0.2",
        "strip-ansi@3.0.1",
        "ansi-regex@2.1.1"
      ],
      "upgradePath": [
        false,
        false,
        "node-sass@7.0.1",
        "node-gyp@8.4.1",
        "npmlog@6.0.0",
        "gauge@4.0.0",
        "string-width@4.2.3",
        "strip-ansi@6.0.1",
        "ansi-regex@5.0.1"
      ],
      "version": "2.1.1",
      "name": "ansi-regex",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-CSSWHAT-1298035",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          ">=3.0.0 <5.0.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "5.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "css-what",
      "references": [
        {
          "url": "https://github.com/fb55/css-what/commit/4cdaacfd0d4b6fd00614be030da0dea6c2994655",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/fb55/css-what/pull/503",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/fb55/css-what/releases/tag/v5.0.1",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-26T15:04:37.499935Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-01T01:11:42.589177Z"
        }
      ],
      "description": "## Overview\n[css-what](https://www.npmjs.org/package/css-what) is an a CSS selector parser\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via attribute parsing.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `css-what` to version 5.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/fb55/css-what/commit/4cdaacfd0d4b6fd00614be030da0dea6c2994655)\n- [GitHub PR](https://github.com/fb55/css-what/pull/503)\n- [GitHub Release](https://github.com/fb55/css-what/releases/tag/v5.0.1)\n",
      "epssDetails": {
        "percentile": "0.30310",
        "probability": "0.00074",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-33587"
        ],
        "CWE": [
          "CWE-1333"
        ],
        "GHSA": [
          "GHSA-q8pj-2vqx-8ggc"
        ]
      },
      "packageName": "css-what",
      "proprietary": false,
      "creationTime": "2021-05-30T09:26:40.480408Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-05-30T09:19:01Z",
      "packageManager": "npm",
      "publicationTime": "2021-05-30T13:11:01Z",
      "modificationTime": "2023-05-22T13:36:27.579202Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "svgo@1.3.2",
        "css-select@2.1.0",
        "css-what@3.4.2"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "svgo@2.3.1",
        "css-select@4.1.3",
        "css-what@5.0.1"
      ],
      "version": "3.4.2",
      "name": "css-what",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-CSSWHAT-1298035",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          ">=3.0.0 <5.0.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "5.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "css-what",
      "references": [
        {
          "url": "https://github.com/fb55/css-what/commit/4cdaacfd0d4b6fd00614be030da0dea6c2994655",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/fb55/css-what/pull/503",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/fb55/css-what/releases/tag/v5.0.1",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-26T15:04:37.499935Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-01T01:11:42.589177Z"
        }
      ],
      "description": "## Overview\n[css-what](https://www.npmjs.org/package/css-what) is an a CSS selector parser\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via attribute parsing.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `css-what` to version 5.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/fb55/css-what/commit/4cdaacfd0d4b6fd00614be030da0dea6c2994655)\n- [GitHub PR](https://github.com/fb55/css-what/pull/503)\n- [GitHub Release](https://github.com/fb55/css-what/releases/tag/v5.0.1)\n",
      "epssDetails": {
        "percentile": "0.30310",
        "probability": "0.00074",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-33587"
        ],
        "CWE": [
          "CWE-1333"
        ],
        "GHSA": [
          "GHSA-q8pj-2vqx-8ggc"
        ]
      },
      "packageName": "css-what",
      "proprietary": false,
      "creationTime": "2021-05-30T09:26:40.480408Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-05-30T09:19:01Z",
      "packageManager": "npm",
      "publicationTime": "2021-05-30T13:11:01Z",
      "modificationTime": "2023-05-22T13:36:27.579202Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-svgo@8.0.0",
        "svgo@1.3.2",
        "css-select@2.1.0",
        "css-what@3.4.2"
      ],
      "upgradePath": [
        false,
        false,
        "imagemin-svgo@9.0.0",
        "svgo@2.3.1",
        "css-select@4.1.3",
        "css-what@5.0.1"
      ],
      "version": "3.4.2",
      "name": "css-what",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-CSSWHAT-1298035",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          ">=3.0.0 <5.0.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "5.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "css-what",
      "references": [
        {
          "url": "https://github.com/fb55/css-what/commit/4cdaacfd0d4b6fd00614be030da0dea6c2994655",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/fb55/css-what/pull/503",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/fb55/css-what/releases/tag/v5.0.1",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-26T15:04:37.499935Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-01T01:11:42.589177Z"
        }
      ],
      "description": "## Overview\n[css-what](https://www.npmjs.org/package/css-what) is an a CSS selector parser\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via attribute parsing.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `css-what` to version 5.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/fb55/css-what/commit/4cdaacfd0d4b6fd00614be030da0dea6c2994655)\n- [GitHub PR](https://github.com/fb55/css-what/pull/503)\n- [GitHub Release](https://github.com/fb55/css-what/releases/tag/v5.0.1)\n",
      "epssDetails": {
        "percentile": "0.30310",
        "probability": "0.00074",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-33587"
        ],
        "CWE": [
          "CWE-1333"
        ],
        "GHSA": [
          "GHSA-q8pj-2vqx-8ggc"
        ]
      },
      "packageName": "css-what",
      "proprietary": false,
      "creationTime": "2021-05-30T09:26:40.480408Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-05-30T09:19:01Z",
      "packageManager": "npm",
      "publicationTime": "2021-05-30T13:11:01Z",
      "modificationTime": "2023-05-22T13:36:27.579202Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-svgo@4.0.3",
        "svgo@1.3.2",
        "css-select@2.1.0",
        "css-what@3.4.2"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-svgo@5.0.0",
        "svgo@2.3.1",
        "css-select@4.1.3",
        "css-what@5.0.1"
      ],
      "version": "3.4.2",
      "name": "css-what",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-CSSWHAT-1298035",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          ">=3.0.0 <5.0.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "5.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "css-what",
      "references": [
        {
          "url": "https://github.com/fb55/css-what/commit/4cdaacfd0d4b6fd00614be030da0dea6c2994655",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/fb55/css-what/pull/503",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/fb55/css-what/releases/tag/v5.0.1",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-26T15:04:37.499935Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-01T01:11:42.589177Z"
        }
      ],
      "description": "## Overview\n[css-what](https://www.npmjs.org/package/css-what) is an a CSS selector parser\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via attribute parsing.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `css-what` to version 5.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/fb55/css-what/commit/4cdaacfd0d4b6fd00614be030da0dea6c2994655)\n- [GitHub PR](https://github.com/fb55/css-what/pull/503)\n- [GitHub Release](https://github.com/fb55/css-what/releases/tag/v5.0.1)\n",
      "epssDetails": {
        "percentile": "0.30310",
        "probability": "0.00074",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-33587"
        ],
        "CWE": [
          "CWE-1333"
        ],
        "GHSA": [
          "GHSA-q8pj-2vqx-8ggc"
        ]
      },
      "packageName": "css-what",
      "proprietary": false,
      "creationTime": "2021-05-30T09:26:40.480408Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-05-30T09:19:01Z",
      "packageManager": "npm",
      "publicationTime": "2021-05-30T13:11:01Z",
      "modificationTime": "2023-05-22T13:36:27.579202Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-svgo@4.0.3",
        "svgo@1.3.2",
        "css-select@2.1.0",
        "css-what@3.4.2"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-svgo@5.0.0",
        "svgo@2.3.1",
        "css-select@4.1.3",
        "css-what@5.0.1"
      ],
      "version": "3.4.2",
      "name": "css-what",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-gifsicle@7.0.0",
        "gifsicle@5.3.0",
        "bin-build@3.0.0",
        "decompress@4.2.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-mozjpeg@9.0.0",
        "mozjpeg@7.1.1",
        "bin-build@3.0.0",
        "decompress@4.2.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-pngquant@9.0.2",
        "pngquant-bin@6.0.1",
        "bin-build@3.0.0",
        "decompress@4.2.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-gifsicle@7.0.0",
        "gifsicle@5.3.0",
        "bin-build@3.0.0",
        "decompress@4.2.1",
        "decompress-tarbz2@4.1.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-mozjpeg@9.0.0",
        "mozjpeg@7.1.1",
        "bin-build@3.0.0",
        "decompress@4.2.1",
        "decompress-tarbz2@4.1.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-pngquant@9.0.2",
        "pngquant-bin@6.0.1",
        "bin-build@3.0.0",
        "decompress@4.2.1",
        "decompress-tarbz2@4.1.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-gifsicle@7.0.0",
        "gifsicle@5.3.0",
        "bin-build@3.0.0",
        "decompress@4.2.1",
        "decompress-targz@4.1.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-mozjpeg@9.0.0",
        "mozjpeg@7.1.1",
        "bin-build@3.0.0",
        "decompress@4.2.1",
        "decompress-targz@4.1.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-pngquant@9.0.2",
        "pngquant-bin@6.0.1",
        "bin-build@3.0.0",
        "decompress@4.2.1",
        "decompress-targz@4.1.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-gifsicle@7.0.0",
        "gifsicle@5.3.0",
        "bin-build@3.0.0",
        "download@6.2.5",
        "decompress@4.2.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-mozjpeg@9.0.0",
        "mozjpeg@7.1.1",
        "bin-build@3.0.0",
        "download@6.2.5",
        "decompress@4.2.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-pngquant@9.0.2",
        "pngquant-bin@6.0.1",
        "bin-build@3.0.0",
        "download@6.2.5",
        "decompress@4.2.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-gifsicle@7.0.0",
        "gifsicle@5.3.0",
        "bin-wrapper@4.1.0",
        "download@7.1.0",
        "decompress@4.2.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-mozjpeg@9.0.0",
        "mozjpeg@7.1.1",
        "bin-wrapper@4.1.0",
        "download@7.1.0",
        "decompress@4.2.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-pngquant@9.0.2",
        "pngquant-bin@6.0.1",
        "bin-wrapper@4.1.0",
        "download@7.1.0",
        "decompress@4.2.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-gifsicle@7.0.0",
        "gifsicle@5.3.0",
        "bin-build@3.0.0",
        "download@6.2.5",
        "decompress@4.2.1",
        "decompress-tarbz2@4.1.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-mozjpeg@9.0.0",
        "mozjpeg@7.1.1",
        "bin-build@3.0.0",
        "download@6.2.5",
        "decompress@4.2.1",
        "decompress-tarbz2@4.1.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-pngquant@9.0.2",
        "pngquant-bin@6.0.1",
        "bin-build@3.0.0",
        "download@6.2.5",
        "decompress@4.2.1",
        "decompress-tarbz2@4.1.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-gifsicle@7.0.0",
        "gifsicle@5.3.0",
        "bin-wrapper@4.1.0",
        "download@7.1.0",
        "decompress@4.2.1",
        "decompress-tarbz2@4.1.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-mozjpeg@9.0.0",
        "mozjpeg@7.1.1",
        "bin-wrapper@4.1.0",
        "download@7.1.0",
        "decompress@4.2.1",
        "decompress-tarbz2@4.1.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-pngquant@9.0.2",
        "pngquant-bin@6.0.1",
        "bin-wrapper@4.1.0",
        "download@7.1.0",
        "decompress@4.2.1",
        "decompress-tarbz2@4.1.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-gifsicle@7.0.0",
        "gifsicle@5.3.0",
        "bin-build@3.0.0",
        "download@6.2.5",
        "decompress@4.2.1",
        "decompress-targz@4.1.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-mozjpeg@9.0.0",
        "mozjpeg@7.1.1",
        "bin-build@3.0.0",
        "download@6.2.5",
        "decompress@4.2.1",
        "decompress-targz@4.1.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-pngquant@9.0.2",
        "pngquant-bin@6.0.1",
        "bin-build@3.0.0",
        "download@6.2.5",
        "decompress@4.2.1",
        "decompress-targz@4.1.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-gifsicle@7.0.0",
        "gifsicle@5.3.0",
        "bin-wrapper@4.1.0",
        "download@7.1.0",
        "decompress@4.2.1",
        "decompress-targz@4.1.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-mozjpeg@9.0.0",
        "mozjpeg@7.1.1",
        "bin-wrapper@4.1.0",
        "download@7.1.0",
        "decompress@4.2.1",
        "decompress-targz@4.1.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-DECOMPRESSTAR-559095",
      "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
      "credit": [
        "Oscar Arnflo"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decompress-tar",
      "references": [
        {
          "url": "https://github.com/kevva/decompress/pull/73",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/kevva/decompress/issues/71",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/kevva/decompress-tar/pull/12",
          "title": "GitHub PR decompress-tar"
        },
        {
          "url": "https://www.npmjs.com/advisories/1217",
          "title": "NPM Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T18:04:12.459024Z"
        }
      ],
      "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
      "epssDetails": {
        "percentile": "0.75874",
        "probability": "0.00619",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-12265"
        ],
        "CWE": [
          "CWE-29"
        ],
        "NSP": [
          "1217"
        ],
        "GHSA": [
          "GHSA-qgfr-5hqp-vrw9"
        ]
      },
      "packageName": "decompress-tar",
      "proprietary": false,
      "creationTime": "2020-03-02T11:17:35.161853Z",
      "functions_new": [
        {
          "version": [
            "*"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-15T20:29:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-27T13:28:41Z",
      "modificationTime": "2022-01-03T18:04:12.459024Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-pngquant@9.0.2",
        "pngquant-bin@6.0.1",
        "bin-wrapper@4.1.0",
        "download@7.1.0",
        "decompress@4.2.1",
        "decompress-targz@4.1.1",
        "decompress-tar@4.1.1"
      ],
      "upgradePath": [],
      "version": "4.1.1",
      "name": "decompress-tar",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-GOT-2932019",
      "title": "Open Redirect",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<11.8.5",
          ">=12.0.0 <12.1.0"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "11.8.5",
        "12.1.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.4,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "got",
      "references": [
        {
          "url": "https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0",
          "title": "GitHub Diff"
        },
        {
          "url": "https://github.com/sindresorhus/got/pull/2047",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-06-29T01:11:26.531842Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-11-19T20:57:05.871669Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Open Redirect due to missing verification of requested URLs. It allowed a victim to be redirected to a UNIX socket.\n## Remediation\nUpgrade `got` to version 11.8.5, 12.1.0 or higher.\n## References\n- [GitHub Diff](https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0)\n- [GitHub PR](https://github.com/sindresorhus/got/pull/2047)\n",
      "epssDetails": {
        "percentile": "0.22655",
        "probability": "0.00058",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-33987"
        ],
        "CWE": [
          "CWE-601"
        ]
      },
      "packageName": "got",
      "proprietary": false,
      "creationTime": "2022-06-19T09:23:24.210132Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-06-19T08:33:16Z",
      "packageManager": "npm",
      "publicationTime": "2022-06-19T15:33:44.269688Z",
      "modificationTime": "2022-11-19T20:57:05.871669Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-gifsicle@7.0.0",
        "gifsicle@5.3.0",
        "bin-build@3.0.0",
        "download@6.2.5",
        "got@7.1.0"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        false,
        "got@11.8.5"
      ],
      "version": "7.1.0",
      "name": "got",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-GOT-2932019",
      "title": "Open Redirect",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<11.8.5",
          ">=12.0.0 <12.1.0"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "11.8.5",
        "12.1.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.4,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "got",
      "references": [
        {
          "url": "https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0",
          "title": "GitHub Diff"
        },
        {
          "url": "https://github.com/sindresorhus/got/pull/2047",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-06-29T01:11:26.531842Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-11-19T20:57:05.871669Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Open Redirect due to missing verification of requested URLs. It allowed a victim to be redirected to a UNIX socket.\n## Remediation\nUpgrade `got` to version 11.8.5, 12.1.0 or higher.\n## References\n- [GitHub Diff](https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0)\n- [GitHub PR](https://github.com/sindresorhus/got/pull/2047)\n",
      "epssDetails": {
        "percentile": "0.22655",
        "probability": "0.00058",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-33987"
        ],
        "CWE": [
          "CWE-601"
        ]
      },
      "packageName": "got",
      "proprietary": false,
      "creationTime": "2022-06-19T09:23:24.210132Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-06-19T08:33:16Z",
      "packageManager": "npm",
      "publicationTime": "2022-06-19T15:33:44.269688Z",
      "modificationTime": "2022-11-19T20:57:05.871669Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-mozjpeg@9.0.0",
        "mozjpeg@7.1.1",
        "bin-build@3.0.0",
        "download@6.2.5",
        "got@7.1.0"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        false,
        "got@11.8.5"
      ],
      "version": "7.1.0",
      "name": "got",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-GOT-2932019",
      "title": "Open Redirect",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<11.8.5",
          ">=12.0.0 <12.1.0"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "11.8.5",
        "12.1.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.4,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "got",
      "references": [
        {
          "url": "https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0",
          "title": "GitHub Diff"
        },
        {
          "url": "https://github.com/sindresorhus/got/pull/2047",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-06-29T01:11:26.531842Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-11-19T20:57:05.871669Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Open Redirect due to missing verification of requested URLs. It allowed a victim to be redirected to a UNIX socket.\n## Remediation\nUpgrade `got` to version 11.8.5, 12.1.0 or higher.\n## References\n- [GitHub Diff](https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0)\n- [GitHub PR](https://github.com/sindresorhus/got/pull/2047)\n",
      "epssDetails": {
        "percentile": "0.22655",
        "probability": "0.00058",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-33987"
        ],
        "CWE": [
          "CWE-601"
        ]
      },
      "packageName": "got",
      "proprietary": false,
      "creationTime": "2022-06-19T09:23:24.210132Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-06-19T08:33:16Z",
      "packageManager": "npm",
      "publicationTime": "2022-06-19T15:33:44.269688Z",
      "modificationTime": "2022-11-19T20:57:05.871669Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-pngquant@9.0.2",
        "pngquant-bin@6.0.1",
        "bin-build@3.0.0",
        "download@6.2.5",
        "got@7.1.0"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        false,
        "got@11.8.5"
      ],
      "version": "7.1.0",
      "name": "got",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-GOT-2932019",
      "title": "Open Redirect",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<11.8.5",
          ">=12.0.0 <12.1.0"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "11.8.5",
        "12.1.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.4,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "got",
      "references": [
        {
          "url": "https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0",
          "title": "GitHub Diff"
        },
        {
          "url": "https://github.com/sindresorhus/got/pull/2047",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-06-29T01:11:26.531842Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-11-19T20:57:05.871669Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Open Redirect due to missing verification of requested URLs. It allowed a victim to be redirected to a UNIX socket.\n## Remediation\nUpgrade `got` to version 11.8.5, 12.1.0 or higher.\n## References\n- [GitHub Diff](https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0)\n- [GitHub PR](https://github.com/sindresorhus/got/pull/2047)\n",
      "epssDetails": {
        "percentile": "0.22655",
        "probability": "0.00058",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-33987"
        ],
        "CWE": [
          "CWE-601"
        ]
      },
      "packageName": "got",
      "proprietary": false,
      "creationTime": "2022-06-19T09:23:24.210132Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-06-19T08:33:16Z",
      "packageManager": "npm",
      "publicationTime": "2022-06-19T15:33:44.269688Z",
      "modificationTime": "2022-11-19T20:57:05.871669Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-gifsicle@7.0.0",
        "gifsicle@5.3.0",
        "bin-wrapper@4.1.0",
        "download@7.1.0",
        "got@8.3.2"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        false,
        "got@11.8.5"
      ],
      "version": "8.3.2",
      "name": "got",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-GOT-2932019",
      "title": "Open Redirect",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<11.8.5",
          ">=12.0.0 <12.1.0"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "11.8.5",
        "12.1.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.4,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "got",
      "references": [
        {
          "url": "https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0",
          "title": "GitHub Diff"
        },
        {
          "url": "https://github.com/sindresorhus/got/pull/2047",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-06-29T01:11:26.531842Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-11-19T20:57:05.871669Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Open Redirect due to missing verification of requested URLs. It allowed a victim to be redirected to a UNIX socket.\n## Remediation\nUpgrade `got` to version 11.8.5, 12.1.0 or higher.\n## References\n- [GitHub Diff](https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0)\n- [GitHub PR](https://github.com/sindresorhus/got/pull/2047)\n",
      "epssDetails": {
        "percentile": "0.22655",
        "probability": "0.00058",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-33987"
        ],
        "CWE": [
          "CWE-601"
        ]
      },
      "packageName": "got",
      "proprietary": false,
      "creationTime": "2022-06-19T09:23:24.210132Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-06-19T08:33:16Z",
      "packageManager": "npm",
      "publicationTime": "2022-06-19T15:33:44.269688Z",
      "modificationTime": "2022-11-19T20:57:05.871669Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-mozjpeg@9.0.0",
        "mozjpeg@7.1.1",
        "bin-wrapper@4.1.0",
        "download@7.1.0",
        "got@8.3.2"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        false,
        "got@11.8.5"
      ],
      "version": "8.3.2",
      "name": "got",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-GOT-2932019",
      "title": "Open Redirect",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<11.8.5",
          ">=12.0.0 <12.1.0"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "11.8.5",
        "12.1.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.4,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "got",
      "references": [
        {
          "url": "https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0",
          "title": "GitHub Diff"
        },
        {
          "url": "https://github.com/sindresorhus/got/pull/2047",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-06-29T01:11:26.531842Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-11-19T20:57:05.871669Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Open Redirect due to missing verification of requested URLs. It allowed a victim to be redirected to a UNIX socket.\n## Remediation\nUpgrade `got` to version 11.8.5, 12.1.0 or higher.\n## References\n- [GitHub Diff](https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0)\n- [GitHub PR](https://github.com/sindresorhus/got/pull/2047)\n",
      "epssDetails": {
        "percentile": "0.22655",
        "probability": "0.00058",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-33987"
        ],
        "CWE": [
          "CWE-601"
        ]
      },
      "packageName": "got",
      "proprietary": false,
      "creationTime": "2022-06-19T09:23:24.210132Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-06-19T08:33:16Z",
      "packageManager": "npm",
      "publicationTime": "2022-06-19T15:33:44.269688Z",
      "modificationTime": "2022-11-19T20:57:05.871669Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-pngquant@9.0.2",
        "pngquant-bin@6.0.1",
        "bin-wrapper@4.1.0",
        "download@7.1.0",
        "got@8.3.2"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        false,
        "got@11.8.5"
      ],
      "version": "8.3.2",
      "name": "got",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-HTTPCACHESEMANTICS-3248783",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Carter Snook"
      ],
      "semver": {
        "vulnerable": [
          "<4.1.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "4.1.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "http-cache-semantics",
      "references": [
        {
          "url": "https://github.com/kornelski/http-cache-semantics/commit/560b2d8ef452bbba20ffed69dc155d63ac757b74",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/kornelski/http-cache-semantics/blob/master/index.js%23L83",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-02-14T15:04:04.692447Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-02-24T13:47:37.074225Z"
        },
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-04-18T11:01:42.607159Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library.\r\n\r\n## PoC\r\nSteps to reproduce:\r\n\r\nRun the following script in Node.js after installing the `http-cache-semantics` NPM package:\r\n```\r\nconst CachePolicy = require(\"http-cache-semantics\");\r\n\r\nfor (let i = 0; i <= 5; i++) {\r\n\r\nconst attack = \"a\" + \" \".repeat(i * 7000) +\r\n\"z\";\r\n\r\nconst start = performance.now();\r\nnew CachePolicy({\r\nheaders: {},\r\n}, {\r\nheaders: {\r\n\"cache-control\": attack,\r\n},\r\n\r\n\r\n});\r\nconsole.log(`${attack.length}: ${performance.now() - start}ms`);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `http-cache-semantics` to version 4.1.1 or higher.\n## References\n- [GitHub Commit](https://github.com/kornelski/http-cache-semantics/commit/560b2d8ef452bbba20ffed69dc155d63ac757b74)\n- [Vulnerable Code](https://github.com/kornelski/http-cache-semantics/blob/master/index.js#L83)\n",
      "epssDetails": {
        "percentile": "0.18028",
        "probability": "0.00052",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-25881"
        ],
        "CWE": [
          "CWE-1333"
        ],
        "GHSA": [
          "GHSA-rc47-6667-2j5j",
          "GHSA-8x6c-cv3v-vp6g"
        ]
      },
      "packageName": "http-cache-semantics",
      "proprietary": true,
      "creationTime": "2023-01-26T15:43:26.870465Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-01-26T15:40:19Z",
      "packageManager": "npm",
      "publicationTime": "2023-01-30T14:39:52.807542Z",
      "modificationTime": "2023-04-18T11:01:42.607159Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-gifsicle@7.0.0",
        "gifsicle@5.3.0",
        "bin-wrapper@4.1.0",
        "download@7.1.0",
        "got@8.3.2",
        "cacheable-request@2.1.4",
        "http-cache-semantics@3.8.1"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        false,
        "got@9.0.0",
        "cacheable-request@4.0.1",
        "http-cache-semantics@4.1.1"
      ],
      "version": "3.8.1",
      "name": "http-cache-semantics",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-HTTPCACHESEMANTICS-3248783",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Carter Snook"
      ],
      "semver": {
        "vulnerable": [
          "<4.1.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "4.1.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "http-cache-semantics",
      "references": [
        {
          "url": "https://github.com/kornelski/http-cache-semantics/commit/560b2d8ef452bbba20ffed69dc155d63ac757b74",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/kornelski/http-cache-semantics/blob/master/index.js%23L83",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-02-14T15:04:04.692447Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-02-24T13:47:37.074225Z"
        },
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-04-18T11:01:42.607159Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library.\r\n\r\n## PoC\r\nSteps to reproduce:\r\n\r\nRun the following script in Node.js after installing the `http-cache-semantics` NPM package:\r\n```\r\nconst CachePolicy = require(\"http-cache-semantics\");\r\n\r\nfor (let i = 0; i <= 5; i++) {\r\n\r\nconst attack = \"a\" + \" \".repeat(i * 7000) +\r\n\"z\";\r\n\r\nconst start = performance.now();\r\nnew CachePolicy({\r\nheaders: {},\r\n}, {\r\nheaders: {\r\n\"cache-control\": attack,\r\n},\r\n\r\n\r\n});\r\nconsole.log(`${attack.length}: ${performance.now() - start}ms`);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `http-cache-semantics` to version 4.1.1 or higher.\n## References\n- [GitHub Commit](https://github.com/kornelski/http-cache-semantics/commit/560b2d8ef452bbba20ffed69dc155d63ac757b74)\n- [Vulnerable Code](https://github.com/kornelski/http-cache-semantics/blob/master/index.js#L83)\n",
      "epssDetails": {
        "percentile": "0.18028",
        "probability": "0.00052",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-25881"
        ],
        "CWE": [
          "CWE-1333"
        ],
        "GHSA": [
          "GHSA-rc47-6667-2j5j",
          "GHSA-8x6c-cv3v-vp6g"
        ]
      },
      "packageName": "http-cache-semantics",
      "proprietary": true,
      "creationTime": "2023-01-26T15:43:26.870465Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-01-26T15:40:19Z",
      "packageManager": "npm",
      "publicationTime": "2023-01-30T14:39:52.807542Z",
      "modificationTime": "2023-04-18T11:01:42.607159Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-mozjpeg@9.0.0",
        "mozjpeg@7.1.1",
        "bin-wrapper@4.1.0",
        "download@7.1.0",
        "got@8.3.2",
        "cacheable-request@2.1.4",
        "http-cache-semantics@3.8.1"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        false,
        "got@9.0.0",
        "cacheable-request@4.0.1",
        "http-cache-semantics@4.1.1"
      ],
      "version": "3.8.1",
      "name": "http-cache-semantics",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-HTTPCACHESEMANTICS-3248783",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Carter Snook"
      ],
      "semver": {
        "vulnerable": [
          "<4.1.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "4.1.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "http-cache-semantics",
      "references": [
        {
          "url": "https://github.com/kornelski/http-cache-semantics/commit/560b2d8ef452bbba20ffed69dc155d63ac757b74",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/kornelski/http-cache-semantics/blob/master/index.js%23L83",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-02-14T15:04:04.692447Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-02-24T13:47:37.074225Z"
        },
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-04-18T11:01:42.607159Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library.\r\n\r\n## PoC\r\nSteps to reproduce:\r\n\r\nRun the following script in Node.js after installing the `http-cache-semantics` NPM package:\r\n```\r\nconst CachePolicy = require(\"http-cache-semantics\");\r\n\r\nfor (let i = 0; i <= 5; i++) {\r\n\r\nconst attack = \"a\" + \" \".repeat(i * 7000) +\r\n\"z\";\r\n\r\nconst start = performance.now();\r\nnew CachePolicy({\r\nheaders: {},\r\n}, {\r\nheaders: {\r\n\"cache-control\": attack,\r\n},\r\n\r\n\r\n});\r\nconsole.log(`${attack.length}: ${performance.now() - start}ms`);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `http-cache-semantics` to version 4.1.1 or higher.\n## References\n- [GitHub Commit](https://github.com/kornelski/http-cache-semantics/commit/560b2d8ef452bbba20ffed69dc155d63ac757b74)\n- [Vulnerable Code](https://github.com/kornelski/http-cache-semantics/blob/master/index.js#L83)\n",
      "epssDetails": {
        "percentile": "0.18028",
        "probability": "0.00052",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-25881"
        ],
        "CWE": [
          "CWE-1333"
        ],
        "GHSA": [
          "GHSA-rc47-6667-2j5j",
          "GHSA-8x6c-cv3v-vp6g"
        ]
      },
      "packageName": "http-cache-semantics",
      "proprietary": true,
      "creationTime": "2023-01-26T15:43:26.870465Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-01-26T15:40:19Z",
      "packageManager": "npm",
      "publicationTime": "2023-01-30T14:39:52.807542Z",
      "modificationTime": "2023-04-18T11:01:42.607159Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-pngquant@9.0.2",
        "pngquant-bin@6.0.1",
        "bin-wrapper@4.1.0",
        "download@7.1.0",
        "got@8.3.2",
        "cacheable-request@2.1.4",
        "http-cache-semantics@3.8.1"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        false,
        "got@9.0.0",
        "cacheable-request@4.0.1",
        "http-cache-semantics@4.1.1"
      ],
      "version": "3.8.1",
      "name": "http-cache-semantics",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-JSON5-3182856",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:H/E:P",
      "credit": [
        "jdgregson"
      ],
      "semver": {
        "vulnerable": [
          "<1.0.2",
          ">=2.0.0 <2.2.2"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "1.0.2",
        "2.2.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.4,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "json5",
      "references": [
        {
          "url": "https://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/json5/json5/issues/199",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/json5/json5/issues/295",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/json5/json5/releases/tag/v2.2.2",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.8,
          "modificationTime": "2022-12-31T01:11:44.638307Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.8,
          "modificationTime": "2023-01-03T14:05:18.542408Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Prototype Pollution via the `parse` method , which does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object. This pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype (which is the commonly understood definition of Prototype Pollution). Therefore, the actual impact will depend on how applications utilize the returned object and how they filter unwanted keys.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `json5` to version 1.0.2, 2.2.2 or higher.\n## References\n- [GitHub Commit](https://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972)\n- [GitHub Commit](https://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8)\n- [GitHub Issue](https://github.com/json5/json5/issues/199)\n- [GitHub Issue](https://github.com/json5/json5/issues/295)\n- [GitHub Release](https://github.com/json5/json5/releases/tag/v2.2.2)\n",
      "epssDetails": {
        "percentile": "0.59543",
        "probability": "0.00225",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-46175"
        ],
        "CWE": [
          "CWE-1321"
        ],
        "GHSA": [
          "GHSA-9c47-m6qq-7p4h"
        ]
      },
      "packageName": "json5",
      "proprietary": false,
      "creationTime": "2022-12-25T08:31:27.606959Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-12-25T08:22:39Z",
      "packageManager": "npm",
      "publicationTime": "2022-12-25T08:45:14.773939Z",
      "modificationTime": "2023-01-03T14:05:18.542408Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "@vue/component-compiler@4.2.4",
        "postcss-modules-sync@1.0.0",
        "generic-names@1.0.3",
        "loader-utils@0.2.17",
        "json5@0.5.1"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        "generic-names@2.0.0",
        "loader-utils@1.2.0",
        "json5@1.0.2"
      ],
      "version": "0.5.1",
      "name": "json5",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-LOADERUTILS-3042992",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Supraja9726"
      ],
      "semver": {
        "vulnerable": [
          "<1.4.2",
          ">=2.0.0 <2.0.4",
          ">=3.0.0 <3.2.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "1.4.2",
        "2.0.4",
        "3.2.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "loader-utils",
      "references": [
        {
          "url": "https://github.com/webpack/loader-utils/pull/225/commits/d4d4c0fb9cf1766a02b833ac4ac50b2164c52d73",
          "title": "GItHub Commit"
        },
        {
          "url": "https://github.com/webpack/loader-utils/issues/211",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/webpack/loader-utils/issues/216",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/webpack/loader-utils/pull/225",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js%23L38",
          "title": "Vulnerable Code"
        },
        {
          "url": "https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js%23L83",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-18T01:10:45.715437Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-05-23T13:32:34.604917Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `resourcePath` variable in `interpolateName.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `loader-utils` to version 1.4.2, 2.0.4, 3.2.1 or higher.\n## References\n- [GItHub Commit](https://github.com/webpack/loader-utils/pull/225/commits/d4d4c0fb9cf1766a02b833ac4ac50b2164c52d73)\n- [GitHub Issue](https://github.com/webpack/loader-utils/issues/211)\n- [GitHub Issue](https://github.com/webpack/loader-utils/issues/216)\n- [GitHub PR](https://github.com/webpack/loader-utils/pull/225)\n- [Vulnerable Code](https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L38)\n- [Vulnerable Code](https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L83)\n",
      "epssDetails": {
        "percentile": "0.20646",
        "probability": "0.00055",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-37599"
        ],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "loader-utils",
      "proprietary": false,
      "creationTime": "2022-10-12T09:20:33.887851Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-10-12T09:17:58Z",
      "packageManager": "npm",
      "publicationTime": "2022-11-28T08:04:26.197577Z",
      "modificationTime": "2023-05-23T13:32:34.604917Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "@vue/component-compiler@4.2.4",
        "postcss-modules-sync@1.0.0",
        "generic-names@1.0.3",
        "loader-utils@0.2.17"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        "generic-names@2.0.0",
        "loader-utils@1.4.2"
      ],
      "version": "0.2.17",
      "name": "loader-utils",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-LOADERUTILS-3043105",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "Supraja Baskar"
      ],
      "semver": {
        "vulnerable": [
          "<1.4.1",
          ">=2.0.0 <2.0.3"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "1.4.1",
        "2.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "loader-utils",
      "references": [
        {
          "url": "https://github.com/webpack/loader-utils/commit/a93cf6f4702012030f6b5ee8340d5c95ec1c7d4c",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/webpack/loader-utils/pull/220/commits/a49c061ef272bc0c61cc1d996f83bb0e3b4daa9e",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/webpack/loader-utils/issues/212",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/webpack/loader-utils/issues/218",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/webpack/loader-utils/pull/217",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/webpack/loader-utils/releases/tag/v2.0.3",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/webpack/loader-utils/releases/tag/v1.4.1",
          "title": "GitHub Release Notes"
        },
        {
          "url": "https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js%23L11",
          "title": "Vulnerable Code"
        },
        {
          "url": "https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js%23L47",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-11-18T01:10:43.995023Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "modificationTime": "2022-11-30T15:22:07.815403Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Prototype Pollution in `parseQuery` function via the name variable in `parseQuery.js`. This pollutes the prototype of the object returned by `parseQuery` and not the global Object prototype (which is the commonly understood definition of Prototype Pollution). Therefore, the actual impact will depend on how applications utilize the returned object and how they filter unwanted keys.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `loader-utils` to version 1.4.1, 2.0.3 or higher.\n## References\n- [GitHub Commit](https://github.com/webpack/loader-utils/commit/a93cf6f4702012030f6b5ee8340d5c95ec1c7d4c)\n- [GitHub Commit](https://github.com/webpack/loader-utils/pull/220/commits/a49c061ef272bc0c61cc1d996f83bb0e3b4daa9e)\n- [GitHub Issue](https://github.com/webpack/loader-utils/issues/212)\n- [GitHub Issue](https://github.com/webpack/loader-utils/issues/218)\n- [GitHub PR](https://github.com/webpack/loader-utils/pull/217)\n- [GitHub Release](https://github.com/webpack/loader-utils/releases/tag/v2.0.3)\n- [GitHub Release Notes](https://github.com/webpack/loader-utils/releases/tag/v1.4.1)\n- [Vulnerable Code](https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L11)\n- [Vulnerable Code](https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L47)\n",
      "epssDetails": {
        "percentile": "0.51915",
        "probability": "0.00163",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-37601"
        ],
        "CWE": [
          "CWE-1321"
        ]
      },
      "packageName": "loader-utils",
      "proprietary": false,
      "creationTime": "2022-10-13T08:30:04.315835Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-10-13T08:26:29Z",
      "packageManager": "npm",
      "publicationTime": "2022-11-04T09:08:14.617312Z",
      "modificationTime": "2023-04-25T05:55:42.382546Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "@vue/component-compiler@4.2.4",
        "postcss-modules-sync@1.0.0",
        "generic-names@1.0.3",
        "loader-utils@0.2.17"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        "generic-names@2.0.0",
        "loader-utils@1.4.1"
      ],
      "version": "0.2.17",
      "name": "loader-utils",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-LOADERUTILS-3105943",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Supraja9726"
      ],
      "semver": {
        "vulnerable": [
          "<1.4.2",
          ">=2.0.0 <2.0.4",
          ">=3.0.0 <3.2.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "1.4.2",
        "2.0.4",
        "3.2.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "loader-utils",
      "references": [
        {
          "url": "https://github.com/webpack/loader-utils/commit/d2d752d59629daee38f34b24307221349c490eb1",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/webpack/loader-utils/pull/225/commits/d4d4c0fb9cf1766a02b833ac4ac50b2164c52d73",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/webpack/loader-utils/issues/213",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/webpack/loader-utils/issues/216",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/webpack/loader-utils/pull/224",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/webpack/loader-utils/releases/tag/v1.4.2",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/webpack/loader-utils/releases/tag/v2.0.4",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/webpack/loader-utils/releases/tag/v3.2.1",
          "title": "GitHub Release"
        },
        {
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2140597",
          "title": "RedHat Bugzilla Bug"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-18T01:10:43.768416Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-27T16:06:48.662629Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in `interpolateName` function via the `URL` variable.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `loader-utils` to version 1.4.2, 2.0.4, 3.2.1 or higher.\n## References\n- [GitHub Commit](https://github.com/webpack/loader-utils/commit/d2d752d59629daee38f34b24307221349c490eb1)\n- [GitHub Commit](https://github.com/webpack/loader-utils/pull/225/commits/d4d4c0fb9cf1766a02b833ac4ac50b2164c52d73)\n- [GitHub Issue](https://github.com/webpack/loader-utils/issues/213)\n- [GitHub Issue](https://github.com/webpack/loader-utils/issues/216)\n- [GitHub PR](https://github.com/webpack/loader-utils/pull/224)\n- [GitHub Release](https://github.com/webpack/loader-utils/releases/tag/v1.4.2)\n- [GitHub Release](https://github.com/webpack/loader-utils/releases/tag/v2.0.4)\n- [GitHub Release](https://github.com/webpack/loader-utils/releases/tag/v3.2.1)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=2140597)\n",
      "epssDetails": {
        "percentile": "0.34679",
        "probability": "0.00084",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-37603"
        ],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "loader-utils",
      "proprietary": false,
      "creationTime": "2022-11-07T14:00:13.286735Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-10-06T00:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2022-11-07T16:01:55.116079Z",
      "modificationTime": "2022-11-27T16:06:48.662629Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "@vue/component-compiler@4.2.4",
        "postcss-modules-sync@1.0.0",
        "generic-names@1.0.3",
        "loader-utils@0.2.17"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        "generic-names@2.0.0",
        "loader-utils@1.4.2"
      ],
      "version": "0.2.17",
      "name": "loader-utils",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-NODESASS-1059081",
      "title": "Improper Certificate Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
      "credit": [
        "Lorenzo Stella"
      ],
      "semver": {
        "vulnerable": [
          ">=2.0.0 <7.0.0"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "7.0.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "node-sass",
      "references": [
        {
          "url": "https://github.com/sass/node-sass/pull/3149",
          "title": "GitHub Fix PR"
        },
        {
          "url": "https://github.com/sass/node-sass/pull/3086",
          "title": "GitHub PR (suggested fix)"
        },
        {
          "url": "https://github.com/sass/node-sass/pull/567%23issuecomment-656609236",
          "title": "GitHub PR (vulnerable code)"
        },
        {
          "url": "https://github.com/sass/node-sass/releases",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-03-26T20:30:08.132286Z"
        },
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-01-03T18:05:34.204326Z"
        }
      ],
      "description": "## Overview\n[node-sass](https://npmjs.org/package/node-sass) is a Node.js bindings package for libsass.\n\nAffected versions of this package are vulnerable to Improper Certificate Validation. Certificate validation is disabled by default when requesting binaries, even if the user is not specifying an alternative download path.\n## Remediation\nUpgrade `node-sass` to version 7.0.0 or higher.\n## References\n- [GitHub Fix PR](https://github.com/sass/node-sass/pull/3149)\n- [GitHub PR (suggested fix)](https://github.com/sass/node-sass/pull/3086)\n- [GitHub PR (vulnerable code)](https://github.com/sass/node-sass/pull/567#issuecomment-656609236)\n- [GitHub Release](https://github.com/sass/node-sass/releases)\n",
      "epssDetails": {
        "percentile": "0.29684",
        "probability": "0.00072",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-24025"
        ],
        "CWE": [
          "CWE-295"
        ]
      },
      "packageName": "node-sass",
      "proprietary": false,
      "creationTime": "2021-01-12T08:49:09.354534Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-01-12T08:31:32Z",
      "packageManager": "npm",
      "publicationTime": "2021-01-12T15:00:41Z",
      "modificationTime": "2023-03-26T20:30:08.132286Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "node-sass@5.0.0"
      ],
      "upgradePath": [
        false,
        false,
        "node-sass@7.0.0"
      ],
      "version": "5.0.0",
      "name": "node-sass",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-NODESASS-535498",
      "title": "Out-of-Bounds",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H/E:P/RL:U/RC:R",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "node-sass",
      "references": [
        {
          "url": "https://github.com/sass/libsass/pull/2857",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/sass/libsass/issues/2814",
          "title": "POC: GitHub Issue"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2023-03-01T01:10:22.618311Z"
        }
      ],
      "description": "## Overview\n[node-sass](https://npmjs.org/package/node-sass) is a Node.js bindings package for libsass.\n\nAffected versions of this package are vulnerable to Out-of-Bounds. A heap-based buffer over-read exists in `Sass::Prelexer::parenthese_scope` in `prelexer.hpp`.  `node-sass` is affected by this vulnerability due to its bundled usage of `libsass`.\n## Remediation\nThere is no fixed version for `node-sass`.\n## References\n- [GitHub PR](https://github.com/sass/libsass/pull/2857)\n- [POC: GitHub Issue](https://github.com/sass/libsass/issues/2814)\n",
      "epssDetails": {
        "percentile": "0.57328",
        "probability": "0.00205",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-6283"
        ],
        "CWE": [
          "CWE-119"
        ]
      },
      "packageName": "node-sass",
      "proprietary": false,
      "creationTime": "2019-11-25T10:53:38.997000Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2019-01-14T10:52:45Z",
      "packageManager": "npm",
      "publicationTime": "2019-11-25T10:52:39Z",
      "modificationTime": "2023-03-01T01:10:22.618311Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "node-sass@5.0.0"
      ],
      "upgradePath": [],
      "version": "5.0.0",
      "name": "node-sass",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-NODESASS-535500",
      "title": "NULL Pointer Dereference",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H/E:P/RL:U/RC:U",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 8.8,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "node-sass",
      "references": [
        {
          "url": "https://github.com/sass/libsass/commit/280ffd8c692cc24199b678f38fc796825d7df4a1",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/sass/libsass/commit/c93f0581c6b7794d8c1d5637c5c4dabd591b1d57",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/sass/libsass/issues/2663",
          "title": "POC: GitHub Issue"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.8,
          "modificationTime": "2022-01-03T16:15:45.566161Z"
        }
      ],
      "description": "## Overview\n[node-sass](https://npmjs.org/package/node-sass) is a Node.js bindings package for libsass.\n\nAffected versions of this package are vulnerable to NULL Pointer Dereference in the function `Sass::Functions::selector_append` which could be leveraged by an attacker to cause a denial of service (application crash) or possibly have unspecified other impact.  `node-sass` is affected by this vulnerability due to its bundled usage of `libsass`.\n## Remediation\nThere is no fixed version for `node-sass`.\n## References\n- [GitHub Commit](https://github.com/sass/libsass/commit/280ffd8c692cc24199b678f38fc796825d7df4a1)\n- [GitHub Commit](https://github.com/sass/libsass/commit/c93f0581c6b7794d8c1d5637c5c4dabd591b1d57)\n- [POC: GitHub Issue](https://github.com/sass/libsass/issues/2663)\n",
      "epssDetails": {
        "percentile": "0.61063",
        "probability": "0.00244",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2018-11694"
        ],
        "CWE": [
          "CWE-476"
        ]
      },
      "packageName": "node-sass",
      "proprietary": false,
      "creationTime": "2019-11-25T11:17:34.265000Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2018-06-03T11:48:11Z",
      "packageManager": "npm",
      "publicationTime": "2019-11-25T11:14:52Z",
      "modificationTime": "2022-01-03T16:15:45.566161Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "node-sass@5.0.0"
      ],
      "upgradePath": [],
      "version": "5.0.0",
      "name": "node-sass",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-NODESASS-540958",
      "title": "Out-of-bounds Read",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 4.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "node-sass",
      "references": [
        {
          "url": "https://github.com/sass/libsass/commit/e1c16e09b4a953757a15149deaaf28a3fd81dc97",
          "title": "GitHub Commit"
        },
        {
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-18798",
          "title": "NVD"
        },
        {
          "url": "https://github.com/sass/libsass/issues/2999",
          "title": "POC: Potential Exploit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2022-01-03T17:57:19.464611Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2022-09-01T20:51:24.671503Z"
        }
      ],
      "description": "## Overview\n[node-sass](https://npmjs.org/package/node-sass) is a Node.js bindings package for libsass.\n\nAffected versions of this package are vulnerable to Out-of-bounds Read via `Sass::weaveParents` in `ast_sel_weave.cpp`. Note: `node-sass` is affected by this vulnerability due to its bundled usage of the `libsass` package.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nThere is no fixed version for `node-sass`.\n## References\n- [GitHub Commit](https://github.com/sass/libsass/commit/e1c16e09b4a953757a15149deaaf28a3fd81dc97)\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2019-18798)\n- [POC: Potential Exploit](https://github.com/sass/libsass/issues/2999)\n",
      "epssDetails": {
        "percentile": "0.39277",
        "probability": "0.00096",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-18798"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "node-sass",
      "proprietary": false,
      "creationTime": "2020-01-08T15:54:20.880000Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2019-06-11T00:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-08T00:00:00Z",
      "modificationTime": "2023-05-21T09:08:01.249395Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "node-sass@5.0.0"
      ],
      "upgradePath": [],
      "version": "5.0.0",
      "name": "node-sass",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-NODESASS-540964",
      "title": "Uncontrolled Recursion",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 4.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "node-sass",
      "references": [
        {
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-18797",
          "title": "NVD"
        },
        {
          "url": "https://github.com/sass/libsass/issues/3000",
          "title": "POC: GitHub Issue"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2022-01-03T17:57:36.629204Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2022-09-01T20:51:19.501353Z"
        }
      ],
      "description": "## Overview\n[node-sass](https://npmjs.org/package/node-sass) is a Node.js bindings package for libsass.\n\nAffected versions of this package are vulnerable to Uncontrolled Recursion via `Sass::Eval::operator()(Sass::Binary_Expression*)` in `eval.cpp`. Note: `node-sass` is affected by this vulnerability due to its bundled usage of the `libsass` package.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nThere is no fixed version for `node-sass`.\n## References\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2019-18797)\n- [POC: GitHub Issue](https://github.com/sass/libsass/issues/3000)\n",
      "epssDetails": {
        "percentile": "0.39277",
        "probability": "0.00096",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-18797"
        ],
        "CWE": [
          "CWE-79"
        ]
      },
      "packageName": "node-sass",
      "proprietary": false,
      "creationTime": "2020-01-08T15:54:35.116986Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2019-08-11T00:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-08T00:00:00Z",
      "modificationTime": "2023-05-21T09:13:03.193755Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "node-sass@5.0.0"
      ],
      "upgradePath": [],
      "version": "5.0.0",
      "name": "node-sass",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-NODESASS-540978",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "node-sass",
      "references": [
        {
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-20822",
          "title": "NVD"
        },
        {
          "url": "https://github.com/sass/libsass/issues/2671",
          "title": "POC: GitHub Issue"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-09-01T20:13:02.269474Z"
        },
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2023-03-01T01:10:22.260125Z"
        }
      ],
      "description": "## Overview\n[node-sass](https://npmjs.org/package/node-sass) is a Node.js bindings package for libsass.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). Uncontrolled recursion is possible in `Sass::Complex_Selector::perform` in `ast.hpp` and `Sass::Inspect::operator` in `inspect.cpp`. Note: `node-sass` is affected by this vulnerability due to its bundled usage of the `libsass` package.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nThere is no fixed version for `node-sass`.\n## References\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2018-20822)\n- [POC: GitHub Issue](https://github.com/sass/libsass/issues/2671)\n",
      "epssDetails": {
        "percentile": "0.63919",
        "probability": "0.00280",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2018-20822"
        ],
        "CWE": [
          "CWE-79"
        ]
      },
      "packageName": "node-sass",
      "proprietary": false,
      "creationTime": "2020-01-08T15:55:07.174000Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2018-06-13T00:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-08T00:00:00Z",
      "modificationTime": "2023-05-21T09:07:03.205694Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "node-sass@5.0.0"
      ],
      "upgradePath": [],
      "version": "5.0.0",
      "name": "node-sass",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-NODESASS-540992",
      "title": "NULL Pointer Dereference",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 4.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "node-sass",
      "references": [
        {
          "url": "https://github.com/sass/libsass/commit/e1c16e09b4a953757a15149deaaf28a3fd81dc97",
          "title": "GitHub Commit"
        },
        {
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-18799",
          "title": "NVD"
        },
        {
          "url": "https://github.com/sass/libsass/issues/3001",
          "title": "POC: Potential Exploit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2022-01-03T17:57:19.050498Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2022-11-27T20:21:59.540667Z"
        }
      ],
      "description": "## Overview\n[node-sass](https://npmjs.org/package/node-sass) is a Node.js bindings package for libsass.\n\nAffected versions of this package are vulnerable to NULL Pointer Dereference via `Sass::Parser::parseCompoundSelector`in `parser_selectors.cpp`. Note: `node-sass` is affected by this vulnerability due to its bundled usage of the `libsass` package.\n## Remediation\nThere is no fixed version for `node-sass`.\n## References\n- [GitHub Commit](https://github.com/sass/libsass/commit/e1c16e09b4a953757a15149deaaf28a3fd81dc97)\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2019-18799)\n- [POC: Potential Exploit](https://github.com/sass/libsass/issues/3001)\n",
      "epssDetails": {
        "percentile": "0.38861",
        "probability": "0.00095",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-18799"
        ],
        "CWE": [
          "CWE-79"
        ]
      },
      "packageName": "node-sass",
      "proprietary": false,
      "creationTime": "2020-01-08T15:55:38.727000Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2019-11-08T00:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-08T00:00:00Z",
      "modificationTime": "2023-05-21T09:12:03.121325Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "node-sass@5.0.0"
      ],
      "upgradePath": [],
      "version": "5.0.0",
      "name": "node-sass",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-NODESASS-540998",
      "title": "Out-of-Bounds",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "node-sass",
      "references": [
        {
          "url": "https://github.com/sass/libsass/pull/2857/commits/0f3d3f8df99af422af055c41d778ca9c5c60a0bb",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/sass/libsass/issues/2814",
          "title": "GitHub Issue"
        },
        {
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-6284",
          "title": "NVD"
        },
        {
          "url": "https://github.com/sass/libsass/issues/2816",
          "title": "POC: Potential Exploit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "low",
          "cvssV3Vector": "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 3.3,
          "modificationTime": "2022-09-01T21:12:40.275339Z"
        },
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2023-03-01T01:10:22.737615Z"
        }
      ],
      "description": "## Overview\n[node-sass](https://npmjs.org/package/node-sass) is a Node.js bindings package for libsass.\n\nAffected versions of this package are vulnerable to Out-of-Bounds via `Sass::Prelexer::alternatives` in `prelexer.hpp`. Note: `node-sass` is affected by this vulnerability due to its bundled usage of the `libsass` package.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nThere is no fixed version for `node-sass`.\n## References\n- [GitHub Commit](https://github.com/sass/libsass/pull/2857/commits/0f3d3f8df99af422af055c41d778ca9c5c60a0bb)\n- [GitHub Issue](https://github.com/sass/libsass/issues/2814)\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2019-6284)\n- [POC: Potential Exploit](https://github.com/sass/libsass/issues/2816)\n",
      "epssDetails": {
        "percentile": "0.57328",
        "probability": "0.00205",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-6284"
        ],
        "CWE": [
          "CWE-79"
        ]
      },
      "packageName": "node-sass",
      "proprietary": false,
      "creationTime": "2020-01-08T15:55:53.988000Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2019-04-08T00:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-08T00:00:00Z",
      "modificationTime": "2023-03-01T01:10:22.737615Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "node-sass@5.0.0"
      ],
      "upgradePath": [],
      "version": "5.0.0",
      "name": "node-sass",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-NODESASS-541000",
      "title": "Use After Free",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 8.8,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "node-sass",
      "references": [
        {
          "url": "https://github.com/sass/libsass/commit/b21fb9f84096d9927780b86fa90629a096af358d",
          "title": "GitHub Commit"
        },
        {
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-19827",
          "title": "NVD"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.8,
          "modificationTime": "2022-01-03T16:25:07.549476Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.8,
          "modificationTime": "2022-09-01T20:12:12.206789Z"
        }
      ],
      "description": "## Overview\n[node-sass](https://npmjs.org/package/node-sass) is a Node.js bindings package for libsass.\n\nAffected versions of this package are vulnerable to Use After Free via the `SharedPtr` class in `SharedPtr.cpp` (or `SharedPtr.hpp`) that may cause a denial of service (application crash) or possibly have unspecified other impact. Note: `node-sass` is affected by this vulnerability due to its bundled usage of the `libsass` package.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nThere is no fixed version for `node-sass`.\n## References\n- [GitHub Commit](https://github.com/sass/libsass/commit/b21fb9f84096d9927780b86fa90629a096af358d)\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2018-19827)\n",
      "epssDetails": {
        "percentile": "0.66217",
        "probability": "0.00318",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2018-19827"
        ],
        "CWE": [
          "CWE-416"
        ]
      },
      "packageName": "node-sass",
      "proprietary": false,
      "creationTime": "2020-01-08T15:55:58.595345Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2019-12-03T00:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-08T00:00:00Z",
      "modificationTime": "2023-05-21T09:12:50.292546Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "node-sass@5.0.0"
      ],
      "upgradePath": [],
      "version": "5.0.0",
      "name": "node-sass",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-NODESASS-541002",
      "title": "Out-of-bounds Read",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "node-sass",
      "references": [
        {
          "url": "https://github.com/sass/libsass/commit/2cabd116b95d67dcd9d44fcb936dee03f4fc71b9",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/sass/libsass/pull/2767",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/sass/libsass/issues/2657",
          "title": "POC: GitHub Issue"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2022-01-03T16:25:32.032028Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "low",
          "cvssV3Vector": "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 3.3,
          "modificationTime": "2022-09-01T20:11:03.152976Z"
        }
      ],
      "description": "## Overview\n[node-sass](https://npmjs.org/package/node-sass) is a Node.js bindings package for libsass.\n\nAffected versions of this package are vulnerable to Out-of-bounds Read. The function `handle_error` in `sass_context.cpp` allows attackers to cause a denial-of-service resulting from a heap-based buffer over-read via a crafted sass file. Note: `node-sass` is affected by this vulnerability due to its bundled usage of the `libsass` package.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nThere is no fixed version for `node-sass`.\n## References\n- [GitHub Commit](https://github.com/sass/libsass/commit/2cabd116b95d67dcd9d44fcb936dee03f4fc71b9)\n- [GitHub PR](https://github.com/sass/libsass/pull/2767)\n- [POC: GitHub Issue](https://github.com/sass/libsass/issues/2657)\n",
      "epssDetails": {
        "percentile": "0.65377",
        "probability": "0.00303",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2018-19839"
        ],
        "CWE": [
          "CWE-79"
        ]
      },
      "packageName": "node-sass",
      "proprietary": false,
      "creationTime": "2020-01-08T15:56:03.064000Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2018-11-28T00:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-08T00:00:00Z",
      "modificationTime": "2023-05-21T09:12:40.150596Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "node-sass@5.0.0"
      ],
      "upgradePath": [],
      "version": "5.0.0",
      "name": "node-sass",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-NTHCHECK-1586032",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "2.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "nth-check",
      "references": [
        {
          "url": "https://github.com/fb55/nth-check/commit/9894c1d2010870c351f66c6f6efcf656e26bb726",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/fb55/nth-check/pull/9",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/fb55/nth-check/releases/tag/v2.0.1",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-26T15:01:29.383627Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-07-30T01:10:54.517007Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) when parsing crafted invalid CSS nth-checks, due to the sub-pattern `\\s*(?:([+-]?)\\s*(\\d+))?` in `RE_NTH_ELEMENT` with quantified overlapping adjacency.\n## PoC\n```js\r\nvar nthCheck = require(\"nth-check\")\r\nfor(var i = 1; i <= 50000; i++) {\r\n    var time = Date.now();\r\n    var attack_str = '2n' + ' '.repeat(i*10000)+\"!\";\r\n    try {\r\n        nthCheck.parse(attack_str) \r\n    }\r\n    catch(err) {\r\n        var time_cost = Date.now() - time;\r\n        console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\r\n    }\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `nth-check` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/fb55/nth-check/commit/9894c1d2010870c351f66c6f6efcf656e26bb726)\n- [GitHub PR](https://github.com/fb55/nth-check/pull/9)\n- [GitHub Release](https://github.com/fb55/nth-check/releases/tag/v2.0.1)\n",
      "epssDetails": {
        "percentile": "0.48766",
        "probability": "0.00141",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-3803"
        ],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "nth-check",
      "proprietary": false,
      "creationTime": "2021-09-17T14:35:00.993728Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-17T14:32:39Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-17T15:20:51Z",
      "modificationTime": "2023-03-26T15:01:29.383627Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "svgo@1.3.2",
        "css-select@2.1.0",
        "nth-check@1.0.2"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "svgo@2.3.0",
        "css-select@3.1.2",
        "nth-check@2.0.1"
      ],
      "version": "1.0.2",
      "name": "nth-check",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-NTHCHECK-1586032",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "2.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "nth-check",
      "references": [
        {
          "url": "https://github.com/fb55/nth-check/commit/9894c1d2010870c351f66c6f6efcf656e26bb726",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/fb55/nth-check/pull/9",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/fb55/nth-check/releases/tag/v2.0.1",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-26T15:01:29.383627Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-07-30T01:10:54.517007Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) when parsing crafted invalid CSS nth-checks, due to the sub-pattern `\\s*(?:([+-]?)\\s*(\\d+))?` in `RE_NTH_ELEMENT` with quantified overlapping adjacency.\n## PoC\n```js\r\nvar nthCheck = require(\"nth-check\")\r\nfor(var i = 1; i <= 50000; i++) {\r\n    var time = Date.now();\r\n    var attack_str = '2n' + ' '.repeat(i*10000)+\"!\";\r\n    try {\r\n        nthCheck.parse(attack_str) \r\n    }\r\n    catch(err) {\r\n        var time_cost = Date.now() - time;\r\n        console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\r\n    }\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `nth-check` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/fb55/nth-check/commit/9894c1d2010870c351f66c6f6efcf656e26bb726)\n- [GitHub PR](https://github.com/fb55/nth-check/pull/9)\n- [GitHub Release](https://github.com/fb55/nth-check/releases/tag/v2.0.1)\n",
      "epssDetails": {
        "percentile": "0.48766",
        "probability": "0.00141",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-3803"
        ],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "nth-check",
      "proprietary": false,
      "creationTime": "2021-09-17T14:35:00.993728Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-17T14:32:39Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-17T15:20:51Z",
      "modificationTime": "2023-03-26T15:01:29.383627Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-svgo@8.0.0",
        "svgo@1.3.2",
        "css-select@2.1.0",
        "nth-check@1.0.2"
      ],
      "upgradePath": [
        false,
        false,
        "imagemin-svgo@9.0.0",
        "svgo@2.1.0",
        "css-select@3.1.2",
        "nth-check@2.0.1"
      ],
      "version": "1.0.2",
      "name": "nth-check",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-NTHCHECK-1586032",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "2.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "nth-check",
      "references": [
        {
          "url": "https://github.com/fb55/nth-check/commit/9894c1d2010870c351f66c6f6efcf656e26bb726",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/fb55/nth-check/pull/9",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/fb55/nth-check/releases/tag/v2.0.1",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-26T15:01:29.383627Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-07-30T01:10:54.517007Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) when parsing crafted invalid CSS nth-checks, due to the sub-pattern `\\s*(?:([+-]?)\\s*(\\d+))?` in `RE_NTH_ELEMENT` with quantified overlapping adjacency.\n## PoC\n```js\r\nvar nthCheck = require(\"nth-check\")\r\nfor(var i = 1; i <= 50000; i++) {\r\n    var time = Date.now();\r\n    var attack_str = '2n' + ' '.repeat(i*10000)+\"!\";\r\n    try {\r\n        nthCheck.parse(attack_str) \r\n    }\r\n    catch(err) {\r\n        var time_cost = Date.now() - time;\r\n        console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\r\n    }\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `nth-check` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/fb55/nth-check/commit/9894c1d2010870c351f66c6f6efcf656e26bb726)\n- [GitHub PR](https://github.com/fb55/nth-check/pull/9)\n- [GitHub Release](https://github.com/fb55/nth-check/releases/tag/v2.0.1)\n",
      "epssDetails": {
        "percentile": "0.48766",
        "probability": "0.00141",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-3803"
        ],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "nth-check",
      "proprietary": false,
      "creationTime": "2021-09-17T14:35:00.993728Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-17T14:32:39Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-17T15:20:51Z",
      "modificationTime": "2023-03-26T15:01:29.383627Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-svgo@4.0.3",
        "svgo@1.3.2",
        "css-select@2.1.0",
        "nth-check@1.0.2"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-svgo@5.0.0",
        "svgo@2.3.0",
        "css-select@3.1.2",
        "nth-check@2.0.1"
      ],
      "version": "1.0.2",
      "name": "nth-check",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-NTHCHECK-1586032",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "2.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "nth-check",
      "references": [
        {
          "url": "https://github.com/fb55/nth-check/commit/9894c1d2010870c351f66c6f6efcf656e26bb726",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/fb55/nth-check/pull/9",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/fb55/nth-check/releases/tag/v2.0.1",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-26T15:01:29.383627Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-07-30T01:10:54.517007Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) when parsing crafted invalid CSS nth-checks, due to the sub-pattern `\\s*(?:([+-]?)\\s*(\\d+))?` in `RE_NTH_ELEMENT` with quantified overlapping adjacency.\n## PoC\n```js\r\nvar nthCheck = require(\"nth-check\")\r\nfor(var i = 1; i <= 50000; i++) {\r\n    var time = Date.now();\r\n    var attack_str = '2n' + ' '.repeat(i*10000)+\"!\";\r\n    try {\r\n        nthCheck.parse(attack_str) \r\n    }\r\n    catch(err) {\r\n        var time_cost = Date.now() - time;\r\n        console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\r\n    }\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `nth-check` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/fb55/nth-check/commit/9894c1d2010870c351f66c6f6efcf656e26bb726)\n- [GitHub PR](https://github.com/fb55/nth-check/pull/9)\n- [GitHub Release](https://github.com/fb55/nth-check/releases/tag/v2.0.1)\n",
      "epssDetails": {
        "percentile": "0.48766",
        "probability": "0.00141",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-3803"
        ],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "nth-check",
      "proprietary": false,
      "creationTime": "2021-09-17T14:35:00.993728Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-17T14:32:39Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-17T15:20:51Z",
      "modificationTime": "2023-03-26T15:01:29.383627Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-svgo@4.0.3",
        "svgo@1.3.2",
        "css-select@2.1.0",
        "nth-check@1.0.2"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-svgo@5.0.0",
        "svgo@2.3.0",
        "css-select@3.1.2",
        "nth-check@2.0.1"
      ],
      "version": "1.0.2",
      "name": "nth-check",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-1090595",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          ">=7.0.0 <7.0.36",
          ">=8.0.0 <8.2.10"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "7.0.36",
        "8.2.10"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/b6f3e4d5a8d7504d553267f80384373af3a3dec5",
          "title": "Fix Commit #1"
        },
        {
          "url": "https://github.com/postcss/postcss/commit/8682b1e4e328432ba692bed52326e84439cec9e4",
          "title": "Fix Commit #2"
        },
        {
          "url": "https://github.com/advisories/GHSA-hwj9-h5mp-3pm3",
          "title": "GitHub Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-03-26T15:05:02.514950Z"
        },
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-01-03T16:36:11.275976Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) during source map parsing.\r\n\r\n### PoC\r\n```\r\nvar postcss = require(\"postcss\")\r\nfunction build_attack(n) {\r\n    var ret = \"a{}/*# sourceMappingURL=\"\r\n    for (var i = 0; i < n; i++) {\r\n        ret += \" \"\r\n    }\r\n    return ret + \"!\";\r\n}\r\n\r\n// postcss.parse('a{}/*# sourceMappingURL=a.css.map */')\r\nfor(var i = 1; i <= 500000; i++) {\r\n    if (i % 10000 == 0) {\r\n        var time = Date.now();\r\n        var attack_str = build_attack(i)\r\n        try{\r\n            postcss.parse(attack_str)\r\n            var time_cost = Date.now() - time;\r\n            console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\");\r\n            }\r\n        catch(e){\r\n        var time_cost = Date.now() - time;\r\n        console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\");\r\n        }\r\n    }\r\n}\r\n\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `postcss` to version 7.0.36, 8.2.10 or higher.\n## References\n- [Fix Commit #1](https://github.com/postcss/postcss/commit/b6f3e4d5a8d7504d553267f80384373af3a3dec5)\n- [Fix Commit #2](https://github.com/postcss/postcss/commit/8682b1e4e328432ba692bed52326e84439cec9e4)\n- [GitHub Advisory](https://github.com/advisories/GHSA-hwj9-h5mp-3pm3)\n",
      "epssDetails": {
        "percentile": "0.52957",
        "probability": "0.00170",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-23368"
        ],
        "CWE": [
          "CWE-400"
        ],
        "GHSA": [
          "GHSA-hwj9-h5mp-3pm3"
        ]
      },
      "packageName": "postcss",
      "proprietary": true,
      "creationTime": "2021-04-05T10:34:06.518802Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-04-05T10:32:44Z",
      "packageManager": "npm",
      "publicationTime": "2021-04-12T13:07:14Z",
      "modificationTime": "2023-03-26T15:05:02.514950Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "purgecss@2.3.0",
        "postcss@7.0.32"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "purgecss@4.0.0",
        "postcss@8.2.10"
      ],
      "version": "7.0.32",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-1255640",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          ">=8.0.0 <8.2.13",
          "<7.0.36"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "8.2.13",
        "7.0.36"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/2b1d04c867995e55124e0a165b7c6622c1735956",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-03-26T15:28:27.276953Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-09-20T01:10:54.373275Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via `getAnnotationURL()` and `loadAnnotation()` in `lib/previous-map.js`. The vulnerable regexes are caused mainly by the sub-pattern `\\/\\*\\s*# sourceMappingURL=(.*)`.\r\n\r\n### PoC\r\n```\r\nvar postcss = require(\"postcss\")\r\nfunction build_attack(n) {\r\n    var ret = \"a{}\"\r\n    for (var i = 0; i < n; i++) {\r\n        ret += \"/*# sourceMappingURL=\"\r\n    }\r\n    return ret + \"!\";\r\n}\r\n\r\n// postcss.parse('a{}/*# sourceMappingURL=a.css.map */')\r\nfor(var i = 1; i <= 500000; i++) {\r\n    if (i % 1000 == 0) {\r\n        var time = Date.now();\r\n        var attack_str = build_attack(i)\r\n        try{\r\n            postcss.parse(attack_str)\r\n            var time_cost = Date.now() - time;\r\n            console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\");\r\n            }\r\n        catch(e){\r\n        var time_cost = Date.now() - time;\r\n        console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\");\r\n        }\r\n    }\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `postcss` to version 8.2.13, 7.0.36 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/2b1d04c867995e55124e0a165b7c6622c1735956)\n",
      "epssDetails": {
        "percentile": "0.44823",
        "probability": "0.00119",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-23382"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "postcss",
      "proprietary": true,
      "creationTime": "2021-04-26T15:22:41.908415Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-04-26T15:09:50Z",
      "packageManager": "npm",
      "publicationTime": "2021-04-26T16:18:39Z",
      "modificationTime": "2023-03-26T15:28:27.276953Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "@vue/component-compiler@4.2.4",
        "postcss-modules-sync@1.0.0",
        "postcss@5.2.18"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        "postcss@7.0.36"
      ],
      "version": "5.2.18",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-1255640",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          ">=8.0.0 <8.2.13",
          "<7.0.36"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "8.2.13",
        "7.0.36"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/2b1d04c867995e55124e0a165b7c6622c1735956",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-03-26T15:28:27.276953Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-09-20T01:10:54.373275Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via `getAnnotationURL()` and `loadAnnotation()` in `lib/previous-map.js`. The vulnerable regexes are caused mainly by the sub-pattern `\\/\\*\\s*# sourceMappingURL=(.*)`.\r\n\r\n### PoC\r\n```\r\nvar postcss = require(\"postcss\")\r\nfunction build_attack(n) {\r\n    var ret = \"a{}\"\r\n    for (var i = 0; i < n; i++) {\r\n        ret += \"/*# sourceMappingURL=\"\r\n    }\r\n    return ret + \"!\";\r\n}\r\n\r\n// postcss.parse('a{}/*# sourceMappingURL=a.css.map */')\r\nfor(var i = 1; i <= 500000; i++) {\r\n    if (i % 1000 == 0) {\r\n        var time = Date.now();\r\n        var attack_str = build_attack(i)\r\n        try{\r\n            postcss.parse(attack_str)\r\n            var time_cost = Date.now() - time;\r\n            console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\");\r\n            }\r\n        catch(e){\r\n        var time_cost = Date.now() - time;\r\n        console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\");\r\n        }\r\n    }\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `postcss` to version 8.2.13, 7.0.36 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/2b1d04c867995e55124e0a165b7c6622c1735956)\n",
      "epssDetails": {
        "percentile": "0.44823",
        "probability": "0.00119",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-23382"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "postcss",
      "proprietary": true,
      "creationTime": "2021-04-26T15:22:41.908415Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-04-26T15:09:50Z",
      "packageManager": "npm",
      "publicationTime": "2021-04-26T16:18:39Z",
      "modificationTime": "2023-03-26T15:28:27.276953Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "@vue/component-compiler@4.2.4",
        "postcss-modules-sync@1.0.0",
        "postcss-modules-local-by-default@1.2.0",
        "postcss@6.0.23"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        "postcss-modules-local-by-default@2.0.0",
        "postcss@7.0.36"
      ],
      "version": "6.0.23",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-1255640",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          ">=8.0.0 <8.2.13",
          "<7.0.36"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "8.2.13",
        "7.0.36"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/2b1d04c867995e55124e0a165b7c6622c1735956",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-03-26T15:28:27.276953Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-09-20T01:10:54.373275Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via `getAnnotationURL()` and `loadAnnotation()` in `lib/previous-map.js`. The vulnerable regexes are caused mainly by the sub-pattern `\\/\\*\\s*# sourceMappingURL=(.*)`.\r\n\r\n### PoC\r\n```\r\nvar postcss = require(\"postcss\")\r\nfunction build_attack(n) {\r\n    var ret = \"a{}\"\r\n    for (var i = 0; i < n; i++) {\r\n        ret += \"/*# sourceMappingURL=\"\r\n    }\r\n    return ret + \"!\";\r\n}\r\n\r\n// postcss.parse('a{}/*# sourceMappingURL=a.css.map */')\r\nfor(var i = 1; i <= 500000; i++) {\r\n    if (i % 1000 == 0) {\r\n        var time = Date.now();\r\n        var attack_str = build_attack(i)\r\n        try{\r\n            postcss.parse(attack_str)\r\n            var time_cost = Date.now() - time;\r\n            console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\");\r\n            }\r\n        catch(e){\r\n        var time_cost = Date.now() - time;\r\n        console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\");\r\n        }\r\n    }\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `postcss` to version 8.2.13, 7.0.36 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/2b1d04c867995e55124e0a165b7c6622c1735956)\n",
      "epssDetails": {
        "percentile": "0.44823",
        "probability": "0.00119",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-23382"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "postcss",
      "proprietary": true,
      "creationTime": "2021-04-26T15:22:41.908415Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-04-26T15:09:50Z",
      "packageManager": "npm",
      "publicationTime": "2021-04-26T16:18:39Z",
      "modificationTime": "2023-03-26T15:28:27.276953Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "@vue/component-compiler@4.2.4",
        "postcss-modules-sync@1.0.0",
        "postcss-modules-scope@1.1.0",
        "postcss@6.0.23"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        "postcss-modules-scope@2.0.0",
        "postcss@7.0.36"
      ],
      "version": "6.0.23",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-1255640",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          ">=8.0.0 <8.2.13",
          "<7.0.36"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "8.2.13",
        "7.0.36"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/2b1d04c867995e55124e0a165b7c6622c1735956",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-03-26T15:28:27.276953Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-09-20T01:10:54.373275Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via `getAnnotationURL()` and `loadAnnotation()` in `lib/previous-map.js`. The vulnerable regexes are caused mainly by the sub-pattern `\\/\\*\\s*# sourceMappingURL=(.*)`.\r\n\r\n### PoC\r\n```\r\nvar postcss = require(\"postcss\")\r\nfunction build_attack(n) {\r\n    var ret = \"a{}\"\r\n    for (var i = 0; i < n; i++) {\r\n        ret += \"/*# sourceMappingURL=\"\r\n    }\r\n    return ret + \"!\";\r\n}\r\n\r\n// postcss.parse('a{}/*# sourceMappingURL=a.css.map */')\r\nfor(var i = 1; i <= 500000; i++) {\r\n    if (i % 1000 == 0) {\r\n        var time = Date.now();\r\n        var attack_str = build_attack(i)\r\n        try{\r\n            postcss.parse(attack_str)\r\n            var time_cost = Date.now() - time;\r\n            console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\");\r\n            }\r\n        catch(e){\r\n        var time_cost = Date.now() - time;\r\n        console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\");\r\n        }\r\n    }\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `postcss` to version 8.2.13, 7.0.36 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/2b1d04c867995e55124e0a165b7c6622c1735956)\n",
      "epssDetails": {
        "percentile": "0.44823",
        "probability": "0.00119",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-23382"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "postcss",
      "proprietary": true,
      "creationTime": "2021-04-26T15:22:41.908415Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-04-26T15:09:50Z",
      "packageManager": "npm",
      "publicationTime": "2021-04-26T16:18:39Z",
      "modificationTime": "2023-03-26T15:28:27.276953Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "purgecss@2.3.0",
        "postcss@7.0.32"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "purgecss@4.0.0",
        "postcss@8.2.13"
      ],
      "version": "7.0.32",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@7.0.0",
        "postcss@8.4.31"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-sass@0.4.4",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-sass@0.5.0",
        "postcss@8.4.31"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "@vue/component-compiler@4.2.4",
        "@vue/component-compiler-utils@3.3.0",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        "postcss@8.4.31"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "uncss@0.17.3",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        "postcss@8.4.31"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "autoprefixer@9.8.8",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        false,
        "autoprefixer@10.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "css-blank-pseudo@0.1.4",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@7.0.0",
        "css-blank-pseudo@2.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "css-has-pseudo@0.10.0",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@7.0.0",
        "css-has-pseudo@2.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "css-prefers-color-scheme@3.1.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@7.0.0",
        "css-prefers-color-scheme@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-attribute-case-insensitive@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@7.0.0",
        "postcss-attribute-case-insensitive@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-color-functional-notation@2.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@7.0.0",
        "postcss-color-functional-notation@4.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-color-gray@5.0.0",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        "postcss@8.4.31"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-color-hex-alpha@5.0.3",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        false,
        "postcss-color-hex-alpha@7.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-color-mod-function@3.0.3",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        "postcss@8.4.31"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-color-rebeccapurple@4.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@7.0.0",
        "postcss-color-rebeccapurple@7.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-custom-media@7.0.8",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@7.0.0",
        "postcss-custom-media@8.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-custom-properties@8.0.11",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        false,
        "postcss-custom-properties@11.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-custom-selectors@5.1.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@7.0.0",
        "postcss-custom-selectors@6.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-dir-pseudo-class@5.0.0",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@7.0.0",
        "postcss-dir-pseudo-class@6.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-double-position-gradients@1.0.0",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@7.0.0",
        "postcss-double-position-gradients@3.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-env-function@2.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@8.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-focus-visible@4.0.0",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        false,
        "postcss-focus-visible@6.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-focus-within@3.0.0",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        false,
        "postcss-focus-within@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-font-variant@4.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@7.0.0",
        "postcss-font-variant@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-gap-properties@2.0.0",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@7.0.0",
        "postcss-gap-properties@3.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-image-set-function@3.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@7.0.0",
        "postcss-image-set-function@4.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-initial@3.0.4",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@9.1.4"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-lab-function@2.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@7.0.0",
        "postcss-lab-function@4.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-logical@3.0.0",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@7.0.0",
        "postcss-logical@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-media-minmax@4.0.0",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@7.0.0",
        "postcss-media-minmax@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-nesting@7.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        false,
        "postcss-nesting@8.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-overflow-shorthand@2.0.0",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@7.0.0",
        "postcss-overflow-shorthand@3.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-page-break@2.0.0",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        false,
        "postcss-page-break@3.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-place@4.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@7.0.0",
        "postcss-place@7.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-pseudo-class-any-link@6.0.0",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@7.0.0",
        "postcss-pseudo-class-any-link@7.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-replace-overflow-wrap@3.0.0",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@7.0.0",
        "postcss-replace-overflow-wrap@4.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-selector-matches@4.0.0",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        "postcss@8.4.31"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "postcss-preset-env@6.7.1",
        "postcss-selector-not@4.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "postcss-preset-env@7.0.0",
        "postcss-selector-not@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "css-declaration-sorter@4.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "css-declaration-sorter@6.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "cssnano-util-raw-cache@4.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        "postcss@8.4.31"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-calc@7.0.5",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-calc@8.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-colormin@4.0.3",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-colormin@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-convert-values@4.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-convert-values@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-discard-comments@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-discard-comments@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-discard-duplicates@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-discard-duplicates@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-discard-empty@4.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-discard-empty@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-discard-overridden@4.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-discard-overridden@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-merge-longhand@4.0.11",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-merge-longhand@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-merge-rules@4.0.3",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-merge-rules@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-minify-font-values@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-minify-font-values@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-minify-gradients@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-minify-gradients@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-minify-params@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-minify-params@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-minify-selectors@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-minify-selectors@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-normalize-charset@4.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-normalize-charset@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-normalize-display-values@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-normalize-display-values@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-normalize-positions@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-normalize-positions@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-normalize-repeat-style@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-normalize-repeat-style@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-normalize-string@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-normalize-string@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-normalize-timing-functions@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-normalize-timing-functions@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-normalize-unicode@4.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-normalize-unicode@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-normalize-url@4.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-normalize-url@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-normalize-whitespace@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-normalize-whitespace@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-ordered-values@4.1.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-ordered-values@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-reduce-initial@4.0.3",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-reduce-initial@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-reduce-transforms@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-reduce-transforms@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-svgo@4.0.3",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-svgo@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-unique-selectors@4.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-unique-selectors@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "css-declaration-sorter@4.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "css-declaration-sorter@6.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "cssnano-util-raw-cache@4.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        false,
        "postcss@8.4.31"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-calc@7.0.5",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-calc@8.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-colormin@4.0.3",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-colormin@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-convert-values@4.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-convert-values@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-discard-comments@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-discard-comments@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-discard-duplicates@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-discard-duplicates@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-discard-empty@4.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-discard-empty@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-discard-overridden@4.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-discard-overridden@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-merge-longhand@4.0.11",
        "stylehacks@4.0.3",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-merge-longhand@5.0.0",
        "stylehacks@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-merge-longhand@4.0.11",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-merge-longhand@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-merge-rules@4.0.3",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-merge-rules@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-minify-font-values@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-minify-font-values@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-minify-gradients@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-minify-gradients@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-minify-params@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-minify-params@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-minify-selectors@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-minify-selectors@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-normalize-charset@4.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-normalize-charset@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-normalize-display-values@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-normalize-display-values@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-normalize-positions@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-normalize-positions@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-normalize-repeat-style@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-normalize-repeat-style@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-normalize-string@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-normalize-string@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-normalize-timing-functions@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-normalize-timing-functions@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-normalize-unicode@4.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-normalize-unicode@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-normalize-url@4.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-normalize-url@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-normalize-whitespace@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-normalize-whitespace@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-ordered-values@4.1.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-ordered-values@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-reduce-initial@4.0.3",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-reduce-initial@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-reduce-transforms@4.0.2",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-reduce-transforms@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-svgo@4.0.3",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-svgo@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-unique-selectors@4.0.1",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-unique-selectors@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "cssnano@4.1.11",
        "cssnano-preset-default@4.0.8",
        "postcss-merge-longhand@4.0.11",
        "stylehacks@4.0.3",
        "postcss@7.0.39"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "cssnano@5.0.0",
        "cssnano-preset-default@5.0.0",
        "postcss-merge-longhand@5.0.0",
        "stylehacks@5.0.0"
      ],
      "version": "7.0.39",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "@vue/component-compiler@4.2.4",
        "postcss-modules-sync@1.0.0",
        "postcss@5.2.18"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        "postcss@8.4.31"
      ],
      "version": "5.2.18",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "@vue/component-compiler@4.2.4",
        "postcss-modules-sync@1.0.0",
        "postcss-modules-local-by-default@1.2.0",
        "postcss@6.0.23"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        "postcss-modules-local-by-default@4.0.0"
      ],
      "version": "6.0.23",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "@vue/component-compiler@4.2.4",
        "postcss-modules-sync@1.0.0",
        "postcss-modules-scope@1.1.0",
        "postcss@6.0.23"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        "postcss-modules-scope@3.0.0"
      ],
      "version": "6.0.23",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-POSTCSS-5926692",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<8.4.31"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "8.4.31"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "postcss",
      "references": [
        {
          "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/postcss/postcss/pull/1890",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
          "title": "GitHub Release"
        },
        {
          "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-10-11T01:10:59.257507Z"
        }
      ],
      "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
      "epssDetails": {
        "percentile": "0.12509",
        "probability": "0.00045",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-44270"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "postcss",
      "proprietary": false,
      "creationTime": "2023-10-01T10:42:55.486681Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-09-29T22:46:45Z",
      "packageManager": "npm",
      "publicationTime": "2023-10-01T11:23:35.354495Z",
      "modificationTime": "2023-10-11T08:35:34.664727Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "purgecss@2.3.0",
        "postcss@7.0.32"
      ],
      "upgradePath": [
        false,
        false,
        "htmlnano@1.0.0",
        "purgecss@4.0.0",
        "postcss@8.4.31"
      ],
      "version": "7.0.32",
      "name": "postcss",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-REQUEST-3361831",
      "title": "Server-side Request Forgery (SSRF)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
      "credit": [
        "SzymonDrosdzol"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "request",
      "references": [
        {
          "url": "https://github.com/request/request/commit/d42332182512e56ba68446f49c3e3711e04301a2",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/request/request/issues/3442",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/request/request/pull/3444",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "modificationTime": "2023-03-23T01:10:17.579856Z"
        }
      ],
      "description": "## Overview\n[request](https://www.npmjs.com/package/request) is a simplified http request client.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF) due to insufficient checks in the `lib/redirect.js` file by allowing insecure redirects in the default configuration, via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP).\r\n\r\n**NOTE:** `request` package has been deprecated, so a fix is not expected. See https://github.com/request/request/issues/3142.\n## Remediation\nA fix was pushed into the `master` branch but not yet published.\n## References\n- [GitHub Commit](https://github.com/request/request/commit/d42332182512e56ba68446f49c3e3711e04301a2)\n- [GitHub Issue](https://github.com/request/request/issues/3442)\n- [GitHub PR](https://github.com/request/request/pull/3444)\n",
      "epssDetails": {
        "percentile": "0.24986",
        "probability": "0.00063",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-28155"
        ],
        "CWE": [
          "CWE-918"
        ]
      },
      "packageName": "request",
      "proprietary": false,
      "creationTime": "2023-03-16T13:58:23.124636Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-03-16T13:49:16Z",
      "packageManager": "npm",
      "publicationTime": "2023-03-17T07:46:44.219769Z",
      "modificationTime": "2023-08-30T13:20:36.826459Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "node-sass@5.0.0",
        "request@2.88.2"
      ],
      "upgradePath": [],
      "version": "2.88.2",
      "name": "request",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-REQUEST-3361831",
      "title": "Server-side Request Forgery (SSRF)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
      "credit": [
        "SzymonDrosdzol"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "request",
      "references": [
        {
          "url": "https://github.com/request/request/commit/d42332182512e56ba68446f49c3e3711e04301a2",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/request/request/issues/3442",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/request/request/pull/3444",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "modificationTime": "2023-03-23T01:10:17.579856Z"
        }
      ],
      "description": "## Overview\n[request](https://www.npmjs.com/package/request) is a simplified http request client.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF) due to insufficient checks in the `lib/redirect.js` file by allowing insecure redirects in the default configuration, via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP).\r\n\r\n**NOTE:** `request` package has been deprecated, so a fix is not expected. See https://github.com/request/request/issues/3142.\n## Remediation\nA fix was pushed into the `master` branch but not yet published.\n## References\n- [GitHub Commit](https://github.com/request/request/commit/d42332182512e56ba68446f49c3e3711e04301a2)\n- [GitHub Issue](https://github.com/request/request/issues/3442)\n- [GitHub PR](https://github.com/request/request/pull/3444)\n",
      "epssDetails": {
        "percentile": "0.24986",
        "probability": "0.00063",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-28155"
        ],
        "CWE": [
          "CWE-918"
        ]
      },
      "packageName": "request",
      "proprietary": false,
      "creationTime": "2023-03-16T13:58:23.124636Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-03-16T13:49:16Z",
      "packageManager": "npm",
      "publicationTime": "2023-03-17T07:46:44.219769Z",
      "modificationTime": "2023-08-30T13:20:36.826459Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "uncss@0.17.3",
        "request@2.88.2"
      ],
      "upgradePath": [],
      "version": "2.88.2",
      "name": "request",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-REQUEST-3361831",
      "title": "Server-side Request Forgery (SSRF)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
      "credit": [
        "SzymonDrosdzol"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "request",
      "references": [
        {
          "url": "https://github.com/request/request/commit/d42332182512e56ba68446f49c3e3711e04301a2",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/request/request/issues/3442",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/request/request/pull/3444",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "modificationTime": "2023-03-23T01:10:17.579856Z"
        }
      ],
      "description": "## Overview\n[request](https://www.npmjs.com/package/request) is a simplified http request client.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF) due to insufficient checks in the `lib/redirect.js` file by allowing insecure redirects in the default configuration, via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP).\r\n\r\n**NOTE:** `request` package has been deprecated, so a fix is not expected. See https://github.com/request/request/issues/3142.\n## Remediation\nA fix was pushed into the `master` branch but not yet published.\n## References\n- [GitHub Commit](https://github.com/request/request/commit/d42332182512e56ba68446f49c3e3711e04301a2)\n- [GitHub Issue](https://github.com/request/request/issues/3442)\n- [GitHub PR](https://github.com/request/request/pull/3444)\n",
      "epssDetails": {
        "percentile": "0.24986",
        "probability": "0.00063",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-28155"
        ],
        "CWE": [
          "CWE-918"
        ]
      },
      "packageName": "request",
      "proprietary": false,
      "creationTime": "2023-03-16T13:58:23.124636Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-03-16T13:49:16Z",
      "packageManager": "npm",
      "publicationTime": "2023-03-17T07:46:44.219769Z",
      "modificationTime": "2023-08-30T13:20:36.826459Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "node-sass@5.0.0",
        "node-gyp@7.1.2",
        "request@2.88.2"
      ],
      "upgradePath": [],
      "version": "2.88.2",
      "name": "request",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-REQUEST-3361831",
      "title": "Server-side Request Forgery (SSRF)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
      "credit": [
        "SzymonDrosdzol"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "request",
      "references": [
        {
          "url": "https://github.com/request/request/commit/d42332182512e56ba68446f49c3e3711e04301a2",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/request/request/issues/3442",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/request/request/pull/3444",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "modificationTime": "2023-03-23T01:10:17.579856Z"
        }
      ],
      "description": "## Overview\n[request](https://www.npmjs.com/package/request) is a simplified http request client.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF) due to insufficient checks in the `lib/redirect.js` file by allowing insecure redirects in the default configuration, via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP).\r\n\r\n**NOTE:** `request` package has been deprecated, so a fix is not expected. See https://github.com/request/request/issues/3142.\n## Remediation\nA fix was pushed into the `master` branch but not yet published.\n## References\n- [GitHub Commit](https://github.com/request/request/commit/d42332182512e56ba68446f49c3e3711e04301a2)\n- [GitHub Issue](https://github.com/request/request/issues/3442)\n- [GitHub PR](https://github.com/request/request/pull/3444)\n",
      "epssDetails": {
        "percentile": "0.24986",
        "probability": "0.00063",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-28155"
        ],
        "CWE": [
          "CWE-918"
        ]
      },
      "packageName": "request",
      "proprietary": false,
      "creationTime": "2023-03-16T13:58:23.124636Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-03-16T13:49:16Z",
      "packageManager": "npm",
      "publicationTime": "2023-03-17T07:46:44.219769Z",
      "modificationTime": "2023-08-30T13:20:36.826459Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "uncss@0.17.3",
        "jsdom@14.1.0",
        "request@2.88.2"
      ],
      "upgradePath": [],
      "version": "2.88.2",
      "name": "request",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-SCSSTOKENIZER-2339884",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Paul Bastide"
      ],
      "semver": {
        "vulnerable": [
          "<0.4.3"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "0.4.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "scss-tokenizer",
      "references": [
        {
          "url": "https://github.com/sasstools/scss-tokenizer/pull/49/commits/08b4b0262478cf0951dc8cdb5554b6b523366914",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/sasstools/scss-tokenizer/issues/45",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/sasstools/scss-tokenizer/pull/49",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-07-13T01:10:36.082258Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-11-15T21:59:22.789532Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the ` loadAnnotation()` function, due to the usage of insecure regex.\r\n\r\n## PoC\r\n\r\n```js\r\nvar scss = require(\"scss-tokenizer\")\r\nfunction build_attack(n) {\r\n    var ret = \"a{}\"\r\n    for (var i = 0; i < n; i++) {\r\n        ret += \"/*# sourceMappingURL=\"\r\n    }\r\n    return ret + \"!\";\r\n}\r\n\r\n// postcss.parse('a{}/*# sourceMappingURL=a.css.map */')\r\nfor(var i = 1; i <= 500000; i++) {\r\n    if (i % 1000 == 0) {\r\n        var time = Date.now();\r\n        var attack_str = build_attack(i)\r\n        try{\r\n            scss.tokenize(attack_str)\r\n            var time_cost = Date.now() - time;\r\n            console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\");\r\n            }\r\n        catch(e){\r\n        var time_cost = Date.now() - time;\r\n        console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\");\r\n        }\r\n    }\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `scss-tokenizer` to version 0.4.3 or higher.\n## References\n- [GitHub Commit](https://github.com/sasstools/scss-tokenizer/pull/49/commits/08b4b0262478cf0951dc8cdb5554b6b523366914)\n- [GitHub Issue](https://github.com/sasstools/scss-tokenizer/issues/45)\n- [GitHub PR](https://github.com/sasstools/scss-tokenizer/pull/49)\n",
      "epssDetails": {
        "percentile": "0.21810",
        "probability": "0.00058",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-25758"
        ],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "scss-tokenizer",
      "proprietary": true,
      "creationTime": "2022-01-13T16:46:29.762019Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-01-13T16:29:34Z",
      "packageManager": "npm",
      "publicationTime": "2022-06-29T10:29:38Z",
      "modificationTime": "2022-11-15T21:59:22.789532Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "node-sass@5.0.0",
        "sass-graph@2.2.5",
        "scss-tokenizer@0.2.3"
      ],
      "upgradePath": [
        false,
        false,
        "node-sass@7.0.2",
        "sass-graph@4.0.1",
        "scss-tokenizer@0.4.3"
      ],
      "version": "0.2.3",
      "name": "scss-tokenizer",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-SEMVERREGEX-1047770",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Christoph Kern"
      ],
      "semver": {
        "vulnerable": [
          "<3.1.2"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.1.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 4.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "semver-regex",
      "references": [
        {
          "url": "https://github.com/sindresorhus/semver-regex/commit/6baf2cc1d470c2fb63666bdebeef06822be7ba8c",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n[semver-regex](https://www.npmjs.org/package/semver-regex) is a Regular expression for matching semver versions\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS).\n\n### PoC\r\n```\r\n\r\n// import of the vulnerable library\r\nconst semverRegex = require('semver-regex');\r\n// import of measurement tools\r\nconst { PerformanceObserver, performance } = require('perf_hooks');\r\n\r\n// config of measurements tools\r\nconst obs = new PerformanceObserver((items) => {\r\n console.log(items.getEntries()[0].duration);\r\n performance.clearMarks();\r\n});\r\nobs.observe({ entryTypes: ['measure'] });\r\n\r\n// base version string\r\nlet version = \"v1.1.3-0a\"\r\n\r\n// Adding the evil code, resulting in string\r\n// v1.1.3-0aa.aa.aa.aa.aa.aa.a…a.a\"\r\nfor(let i=0; i < 20; i++) {\r\n   version += \"a.a\"\r\n}\r\n\r\n// produce a good version\r\n// Parses well for the regex in milliseconds\r\nlet goodVersion = version + \"2\"\r\n\r\n// good version proof\r\nperformance.mark(\"good before\")\r\nconst goodresult = semverRegex().test(goodVersion);\r\nperformance.mark(\"good after\")\r\n\r\n\r\nconsole.log(`Good result: ${goodresult}`)\r\nperformance.measure('Good', 'good before', 'good after');\r\n\r\n// create a bad/exploit version that is invalid due to the last $ sign\r\n// will cause the nodejs engine to hang, if not, increase the a.a\r\n// additions above a bit.\r\nbadVersion = version + \"aaaaaaa$\"\r\n\r\n// exploit proof\r\nperformance.mark(\"bad before\")\r\nconst badresult = semverRegex().test(badVersion);\r\nperformance.mark(\"bad after\")\r\n\r\nconsole.log(`Bad result: ${badresult}`)\r\nperformance.measure('Bad', 'bad before', 'bad after');\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver-regex` to version 3.1.2 or higher.\n## References\n- [GitHub Commit](https://github.com/sindresorhus/semver-regex/commit/6baf2cc1d470c2fb63666bdebeef06822be7ba8c)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-185"
        ]
      },
      "packageName": "semver-regex",
      "proprietary": true,
      "creationTime": "2020-12-02T09:44:45.265703Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2020-11-22T09:43:39Z",
      "packageManager": "npm",
      "publicationTime": "2020-12-27T17:34:55.116003Z",
      "modificationTime": "2021-08-08T13:56:54.936096Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-gifsicle@7.0.0",
        "gifsicle@5.3.0",
        "bin-wrapper@4.1.0",
        "bin-version-check@4.0.0",
        "bin-version@3.1.0",
        "find-versions@3.2.0",
        "semver-regex@2.0.0"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        "bin-version-check@5.0.0",
        "bin-version@6.0.0",
        "find-versions@5.0.0",
        "semver-regex@4.0.0"
      ],
      "version": "2.0.0",
      "name": "semver-regex",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-SEMVERREGEX-1047770",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Christoph Kern"
      ],
      "semver": {
        "vulnerable": [
          "<3.1.2"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.1.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 4.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "semver-regex",
      "references": [
        {
          "url": "https://github.com/sindresorhus/semver-regex/commit/6baf2cc1d470c2fb63666bdebeef06822be7ba8c",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n[semver-regex](https://www.npmjs.org/package/semver-regex) is a Regular expression for matching semver versions\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS).\n\n### PoC\r\n```\r\n\r\n// import of the vulnerable library\r\nconst semverRegex = require('semver-regex');\r\n// import of measurement tools\r\nconst { PerformanceObserver, performance } = require('perf_hooks');\r\n\r\n// config of measurements tools\r\nconst obs = new PerformanceObserver((items) => {\r\n console.log(items.getEntries()[0].duration);\r\n performance.clearMarks();\r\n});\r\nobs.observe({ entryTypes: ['measure'] });\r\n\r\n// base version string\r\nlet version = \"v1.1.3-0a\"\r\n\r\n// Adding the evil code, resulting in string\r\n// v1.1.3-0aa.aa.aa.aa.aa.aa.a…a.a\"\r\nfor(let i=0; i < 20; i++) {\r\n   version += \"a.a\"\r\n}\r\n\r\n// produce a good version\r\n// Parses well for the regex in milliseconds\r\nlet goodVersion = version + \"2\"\r\n\r\n// good version proof\r\nperformance.mark(\"good before\")\r\nconst goodresult = semverRegex().test(goodVersion);\r\nperformance.mark(\"good after\")\r\n\r\n\r\nconsole.log(`Good result: ${goodresult}`)\r\nperformance.measure('Good', 'good before', 'good after');\r\n\r\n// create a bad/exploit version that is invalid due to the last $ sign\r\n// will cause the nodejs engine to hang, if not, increase the a.a\r\n// additions above a bit.\r\nbadVersion = version + \"aaaaaaa$\"\r\n\r\n// exploit proof\r\nperformance.mark(\"bad before\")\r\nconst badresult = semverRegex().test(badVersion);\r\nperformance.mark(\"bad after\")\r\n\r\nconsole.log(`Bad result: ${badresult}`)\r\nperformance.measure('Bad', 'bad before', 'bad after');\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver-regex` to version 3.1.2 or higher.\n## References\n- [GitHub Commit](https://github.com/sindresorhus/semver-regex/commit/6baf2cc1d470c2fb63666bdebeef06822be7ba8c)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-185"
        ]
      },
      "packageName": "semver-regex",
      "proprietary": true,
      "creationTime": "2020-12-02T09:44:45.265703Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2020-11-22T09:43:39Z",
      "packageManager": "npm",
      "publicationTime": "2020-12-27T17:34:55.116003Z",
      "modificationTime": "2021-08-08T13:56:54.936096Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-mozjpeg@9.0.0",
        "mozjpeg@7.1.1",
        "bin-wrapper@4.1.0",
        "bin-version-check@4.0.0",
        "bin-version@3.1.0",
        "find-versions@3.2.0",
        "semver-regex@2.0.0"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        "bin-version-check@5.0.0",
        "bin-version@6.0.0",
        "find-versions@5.0.0",
        "semver-regex@4.0.0"
      ],
      "version": "2.0.0",
      "name": "semver-regex",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-SEMVERREGEX-1047770",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Christoph Kern"
      ],
      "semver": {
        "vulnerable": [
          "<3.1.2"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.1.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 4.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "semver-regex",
      "references": [
        {
          "url": "https://github.com/sindresorhus/semver-regex/commit/6baf2cc1d470c2fb63666bdebeef06822be7ba8c",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n[semver-regex](https://www.npmjs.org/package/semver-regex) is a Regular expression for matching semver versions\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS).\n\n### PoC\r\n```\r\n\r\n// import of the vulnerable library\r\nconst semverRegex = require('semver-regex');\r\n// import of measurement tools\r\nconst { PerformanceObserver, performance } = require('perf_hooks');\r\n\r\n// config of measurements tools\r\nconst obs = new PerformanceObserver((items) => {\r\n console.log(items.getEntries()[0].duration);\r\n performance.clearMarks();\r\n});\r\nobs.observe({ entryTypes: ['measure'] });\r\n\r\n// base version string\r\nlet version = \"v1.1.3-0a\"\r\n\r\n// Adding the evil code, resulting in string\r\n// v1.1.3-0aa.aa.aa.aa.aa.aa.a…a.a\"\r\nfor(let i=0; i < 20; i++) {\r\n   version += \"a.a\"\r\n}\r\n\r\n// produce a good version\r\n// Parses well for the regex in milliseconds\r\nlet goodVersion = version + \"2\"\r\n\r\n// good version proof\r\nperformance.mark(\"good before\")\r\nconst goodresult = semverRegex().test(goodVersion);\r\nperformance.mark(\"good after\")\r\n\r\n\r\nconsole.log(`Good result: ${goodresult}`)\r\nperformance.measure('Good', 'good before', 'good after');\r\n\r\n// create a bad/exploit version that is invalid due to the last $ sign\r\n// will cause the nodejs engine to hang, if not, increase the a.a\r\n// additions above a bit.\r\nbadVersion = version + \"aaaaaaa$\"\r\n\r\n// exploit proof\r\nperformance.mark(\"bad before\")\r\nconst badresult = semverRegex().test(badVersion);\r\nperformance.mark(\"bad after\")\r\n\r\nconsole.log(`Bad result: ${badresult}`)\r\nperformance.measure('Bad', 'bad before', 'bad after');\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver-regex` to version 3.1.2 or higher.\n## References\n- [GitHub Commit](https://github.com/sindresorhus/semver-regex/commit/6baf2cc1d470c2fb63666bdebeef06822be7ba8c)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-185"
        ]
      },
      "packageName": "semver-regex",
      "proprietary": true,
      "creationTime": "2020-12-02T09:44:45.265703Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2020-11-22T09:43:39Z",
      "packageManager": "npm",
      "publicationTime": "2020-12-27T17:34:55.116003Z",
      "modificationTime": "2021-08-08T13:56:54.936096Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-pngquant@9.0.2",
        "pngquant-bin@6.0.1",
        "bin-wrapper@4.1.0",
        "bin-version-check@4.0.0",
        "bin-version@3.1.0",
        "find-versions@3.2.0",
        "semver-regex@2.0.0"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        "bin-version-check@5.0.0",
        "bin-version@6.0.0",
        "find-versions@5.0.0",
        "semver-regex@4.0.0"
      ],
      "version": "2.0.0",
      "name": "semver-regex",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-SEMVERREGEX-1584358",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          ">=4.0.0 <4.0.1",
          "<3.1.3"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "4.0.1",
        "3.1.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "semver-regex",
      "references": [
        {
          "url": "https://github.com/sindresorhus/semver-regex/commit/11c66245f4e1976dccc52977ed183696a21a3fd7",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n[semver-regex](https://www.npmjs.org/package/semver-regex) is a Regular expression for matching semver versions\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). This can occur when running the regex on untrusted user input in a server context.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver-regex` to version 4.0.1, 3.1.3 or higher.\n## References\n- [GitHub Commit](https://github.com/sindresorhus/semver-regex/commit/11c66245f4e1976dccc52977ed183696a21a3fd7)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "semver-regex",
      "proprietary": false,
      "creationTime": "2021-09-13T08:14:18.667146Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-13T08:10:35Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-13T13:53:34.972372Z",
      "modificationTime": "2021-09-13T13:53:34.974716Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-gifsicle@7.0.0",
        "gifsicle@5.3.0",
        "bin-wrapper@4.1.0",
        "bin-version-check@4.0.0",
        "bin-version@3.1.0",
        "find-versions@3.2.0",
        "semver-regex@2.0.0"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        "bin-version-check@5.0.0",
        "bin-version@6.0.0",
        "find-versions@5.0.0",
        "semver-regex@4.0.1"
      ],
      "version": "2.0.0",
      "name": "semver-regex",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-SEMVERREGEX-1584358",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          ">=4.0.0 <4.0.1",
          "<3.1.3"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "4.0.1",
        "3.1.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "semver-regex",
      "references": [
        {
          "url": "https://github.com/sindresorhus/semver-regex/commit/11c66245f4e1976dccc52977ed183696a21a3fd7",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n[semver-regex](https://www.npmjs.org/package/semver-regex) is a Regular expression for matching semver versions\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). This can occur when running the regex on untrusted user input in a server context.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver-regex` to version 4.0.1, 3.1.3 or higher.\n## References\n- [GitHub Commit](https://github.com/sindresorhus/semver-regex/commit/11c66245f4e1976dccc52977ed183696a21a3fd7)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "semver-regex",
      "proprietary": false,
      "creationTime": "2021-09-13T08:14:18.667146Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-13T08:10:35Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-13T13:53:34.972372Z",
      "modificationTime": "2021-09-13T13:53:34.974716Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-mozjpeg@9.0.0",
        "mozjpeg@7.1.1",
        "bin-wrapper@4.1.0",
        "bin-version-check@4.0.0",
        "bin-version@3.1.0",
        "find-versions@3.2.0",
        "semver-regex@2.0.0"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        "bin-version-check@5.0.0",
        "bin-version@6.0.0",
        "find-versions@5.0.0",
        "semver-regex@4.0.1"
      ],
      "version": "2.0.0",
      "name": "semver-regex",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-SEMVERREGEX-1584358",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          ">=4.0.0 <4.0.1",
          "<3.1.3"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "4.0.1",
        "3.1.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "semver-regex",
      "references": [
        {
          "url": "https://github.com/sindresorhus/semver-regex/commit/11c66245f4e1976dccc52977ed183696a21a3fd7",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n[semver-regex](https://www.npmjs.org/package/semver-regex) is a Regular expression for matching semver versions\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). This can occur when running the regex on untrusted user input in a server context.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver-regex` to version 4.0.1, 3.1.3 or higher.\n## References\n- [GitHub Commit](https://github.com/sindresorhus/semver-regex/commit/11c66245f4e1976dccc52977ed183696a21a3fd7)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "semver-regex",
      "proprietary": false,
      "creationTime": "2021-09-13T08:14:18.667146Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-13T08:10:35Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-13T13:53:34.972372Z",
      "modificationTime": "2021-09-13T13:53:34.974716Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-pngquant@9.0.2",
        "pngquant-bin@6.0.1",
        "bin-wrapper@4.1.0",
        "bin-version-check@4.0.0",
        "bin-version@3.1.0",
        "find-versions@3.2.0",
        "semver-regex@2.0.0"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        "bin-version-check@5.0.0",
        "bin-version@6.0.0",
        "find-versions@5.0.0",
        "semver-regex@4.0.1"
      ],
      "version": "2.0.0",
      "name": "semver-regex",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-SEMVERREGEX-1585624",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<3.1.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.1.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "semver-regex",
      "references": [
        {
          "url": "https://github.com/sindresorhus/semver-regex/commit/11c66245f4e1976dccc52977ed183696a21a3fd7",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-26T15:00:49.975650Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-07-30T01:10:54.326527Z"
        }
      ],
      "description": "## Overview\n[semver-regex](https://www.npmjs.org/package/semver-regex) is a Regular expression for matching semver versions\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). `semverRegex` function contains a regex that allows exponential backtracking.\r\n\r\n### PoC\r\n```\r\nimport semverRegex from 'semver-regex';\r\n\r\n// The following payload would take excessive CPU cycles\r\nvar payload = '0.0.0-0' + '.-------'.repeat(100000) + '@';\r\nsemverRegex().test(payload);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver-regex` to version 3.1.3 or higher.\n## References\n- [GitHub Commit](https://github.com/sindresorhus/semver-regex/commit/11c66245f4e1976dccc52977ed183696a21a3fd7)\n",
      "epssDetails": {
        "percentile": "0.36443",
        "probability": "0.00088",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-3795"
        ],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "semver-regex",
      "proprietary": false,
      "creationTime": "2021-09-16T11:38:34.266537Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-16T11:35:43Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-16T15:47:56.453794Z",
      "modificationTime": "2023-03-26T15:00:49.975650Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-gifsicle@7.0.0",
        "gifsicle@5.3.0",
        "bin-wrapper@4.1.0",
        "bin-version-check@4.0.0",
        "bin-version@3.1.0",
        "find-versions@3.2.0",
        "semver-regex@2.0.0"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        "bin-version-check@5.0.0",
        "bin-version@6.0.0",
        "find-versions@5.0.0",
        "semver-regex@4.0.0"
      ],
      "version": "2.0.0",
      "name": "semver-regex",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-SEMVERREGEX-1585624",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<3.1.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.1.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "semver-regex",
      "references": [
        {
          "url": "https://github.com/sindresorhus/semver-regex/commit/11c66245f4e1976dccc52977ed183696a21a3fd7",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-26T15:00:49.975650Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-07-30T01:10:54.326527Z"
        }
      ],
      "description": "## Overview\n[semver-regex](https://www.npmjs.org/package/semver-regex) is a Regular expression for matching semver versions\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). `semverRegex` function contains a regex that allows exponential backtracking.\r\n\r\n### PoC\r\n```\r\nimport semverRegex from 'semver-regex';\r\n\r\n// The following payload would take excessive CPU cycles\r\nvar payload = '0.0.0-0' + '.-------'.repeat(100000) + '@';\r\nsemverRegex().test(payload);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver-regex` to version 3.1.3 or higher.\n## References\n- [GitHub Commit](https://github.com/sindresorhus/semver-regex/commit/11c66245f4e1976dccc52977ed183696a21a3fd7)\n",
      "epssDetails": {
        "percentile": "0.36443",
        "probability": "0.00088",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-3795"
        ],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "semver-regex",
      "proprietary": false,
      "creationTime": "2021-09-16T11:38:34.266537Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-16T11:35:43Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-16T15:47:56.453794Z",
      "modificationTime": "2023-03-26T15:00:49.975650Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-mozjpeg@9.0.0",
        "mozjpeg@7.1.1",
        "bin-wrapper@4.1.0",
        "bin-version-check@4.0.0",
        "bin-version@3.1.0",
        "find-versions@3.2.0",
        "semver-regex@2.0.0"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        "bin-version-check@5.0.0",
        "bin-version@6.0.0",
        "find-versions@5.0.0",
        "semver-regex@4.0.0"
      ],
      "version": "2.0.0",
      "name": "semver-regex",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-SEMVERREGEX-1585624",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<3.1.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.1.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "semver-regex",
      "references": [
        {
          "url": "https://github.com/sindresorhus/semver-regex/commit/11c66245f4e1976dccc52977ed183696a21a3fd7",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-26T15:00:49.975650Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-07-30T01:10:54.326527Z"
        }
      ],
      "description": "## Overview\n[semver-regex](https://www.npmjs.org/package/semver-regex) is a Regular expression for matching semver versions\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). `semverRegex` function contains a regex that allows exponential backtracking.\r\n\r\n### PoC\r\n```\r\nimport semverRegex from 'semver-regex';\r\n\r\n// The following payload would take excessive CPU cycles\r\nvar payload = '0.0.0-0' + '.-------'.repeat(100000) + '@';\r\nsemverRegex().test(payload);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver-regex` to version 3.1.3 or higher.\n## References\n- [GitHub Commit](https://github.com/sindresorhus/semver-regex/commit/11c66245f4e1976dccc52977ed183696a21a3fd7)\n",
      "epssDetails": {
        "percentile": "0.36443",
        "probability": "0.00088",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-3795"
        ],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "semver-regex",
      "proprietary": false,
      "creationTime": "2021-09-16T11:38:34.266537Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-16T11:35:43Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-16T15:47:56.453794Z",
      "modificationTime": "2023-03-26T15:00:49.975650Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-pngquant@9.0.2",
        "pngquant-bin@6.0.1",
        "bin-wrapper@4.1.0",
        "bin-version-check@4.0.0",
        "bin-version@3.1.0",
        "find-versions@3.2.0",
        "semver-regex@2.0.0"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        "bin-version-check@5.0.0",
        "bin-version@6.0.0",
        "find-versions@5.0.0",
        "semver-regex@4.0.0"
      ],
      "version": "2.0.0",
      "name": "semver-regex",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-SEMVERREGEX-2824151",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<3.1.4",
          ">=4.0.0 <4.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.1.4",
        "4.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "semver-regex",
      "references": [
        {
          "url": "https://github.com/sindresorhus/semver-regex/commit/7712ba564d40da101cf2b2b33e6a910d9f2f57f4",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/sindresorhus/semver-regex/commit/d8ba39a528c1027c43ab23f12eec28ca4d40dd0c",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/sindresorhus/semver-regex/releases/tag/v3.1.4",
          "title": "GitHub Release 3.1.4"
        },
        {
          "url": "https://github.com/sindresorhus/semver-regex/releases/tag/v4.0.3",
          "title": "GitHub Release 4.0.3"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-06-10T01:11:11.391558Z"
        }
      ],
      "description": "## Overview\n[semver-regex](https://www.npmjs.org/package/semver-regex) is a Regular expression for matching semver versions\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper usage of regex in the `semverRegex()` function.\r\n\r\n## PoC\r\n\r\n`'0.0.1-' + '-.--'.repeat(i) + ' '`\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver-regex` to version 3.1.4, 4.0.3 or higher.\n## References\n- [GitHub Commit](https://github.com/sindresorhus/semver-regex/commit/7712ba564d40da101cf2b2b33e6a910d9f2f57f4)\n- [GitHub Commit](https://github.com/sindresorhus/semver-regex/commit/d8ba39a528c1027c43ab23f12eec28ca4d40dd0c)\n- [GitHub Release 3.1.4](https://github.com/sindresorhus/semver-regex/releases/tag/v3.1.4)\n- [GitHub Release 4.0.3](https://github.com/sindresorhus/semver-regex/releases/tag/v4.0.3)\n",
      "epssDetails": {
        "percentile": "0.30788",
        "probability": "0.00075",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-43307"
        ],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "semver-regex",
      "proprietary": false,
      "creationTime": "2022-05-13T12:21:02.208322Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-05-13T12:17:48Z",
      "packageManager": "npm",
      "publicationTime": "2022-05-13T13:26:34Z",
      "modificationTime": "2022-06-10T01:11:11.391558Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-gifsicle@7.0.0",
        "gifsicle@5.3.0",
        "bin-wrapper@4.1.0",
        "bin-version-check@4.0.0",
        "bin-version@3.1.0",
        "find-versions@3.2.0",
        "semver-regex@2.0.0"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        "bin-version-check@5.0.0",
        "bin-version@6.0.0",
        "find-versions@5.0.0",
        "semver-regex@4.0.3"
      ],
      "version": "2.0.0",
      "name": "semver-regex",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-SEMVERREGEX-2824151",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<3.1.4",
          ">=4.0.0 <4.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.1.4",
        "4.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "semver-regex",
      "references": [
        {
          "url": "https://github.com/sindresorhus/semver-regex/commit/7712ba564d40da101cf2b2b33e6a910d9f2f57f4",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/sindresorhus/semver-regex/commit/d8ba39a528c1027c43ab23f12eec28ca4d40dd0c",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/sindresorhus/semver-regex/releases/tag/v3.1.4",
          "title": "GitHub Release 3.1.4"
        },
        {
          "url": "https://github.com/sindresorhus/semver-regex/releases/tag/v4.0.3",
          "title": "GitHub Release 4.0.3"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-06-10T01:11:11.391558Z"
        }
      ],
      "description": "## Overview\n[semver-regex](https://www.npmjs.org/package/semver-regex) is a Regular expression for matching semver versions\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper usage of regex in the `semverRegex()` function.\r\n\r\n## PoC\r\n\r\n`'0.0.1-' + '-.--'.repeat(i) + ' '`\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver-regex` to version 3.1.4, 4.0.3 or higher.\n## References\n- [GitHub Commit](https://github.com/sindresorhus/semver-regex/commit/7712ba564d40da101cf2b2b33e6a910d9f2f57f4)\n- [GitHub Commit](https://github.com/sindresorhus/semver-regex/commit/d8ba39a528c1027c43ab23f12eec28ca4d40dd0c)\n- [GitHub Release 3.1.4](https://github.com/sindresorhus/semver-regex/releases/tag/v3.1.4)\n- [GitHub Release 4.0.3](https://github.com/sindresorhus/semver-regex/releases/tag/v4.0.3)\n",
      "epssDetails": {
        "percentile": "0.30788",
        "probability": "0.00075",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-43307"
        ],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "semver-regex",
      "proprietary": false,
      "creationTime": "2022-05-13T12:21:02.208322Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-05-13T12:17:48Z",
      "packageManager": "npm",
      "publicationTime": "2022-05-13T13:26:34Z",
      "modificationTime": "2022-06-10T01:11:11.391558Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-mozjpeg@9.0.0",
        "mozjpeg@7.1.1",
        "bin-wrapper@4.1.0",
        "bin-version-check@4.0.0",
        "bin-version@3.1.0",
        "find-versions@3.2.0",
        "semver-regex@2.0.0"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        "bin-version-check@5.0.0",
        "bin-version@6.0.0",
        "find-versions@5.0.0",
        "semver-regex@4.0.3"
      ],
      "version": "2.0.0",
      "name": "semver-regex",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-SEMVERREGEX-2824151",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<3.1.4",
          ">=4.0.0 <4.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.1.4",
        "4.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "semver-regex",
      "references": [
        {
          "url": "https://github.com/sindresorhus/semver-regex/commit/7712ba564d40da101cf2b2b33e6a910d9f2f57f4",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/sindresorhus/semver-regex/commit/d8ba39a528c1027c43ab23f12eec28ca4d40dd0c",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/sindresorhus/semver-regex/releases/tag/v3.1.4",
          "title": "GitHub Release 3.1.4"
        },
        {
          "url": "https://github.com/sindresorhus/semver-regex/releases/tag/v4.0.3",
          "title": "GitHub Release 4.0.3"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-06-10T01:11:11.391558Z"
        }
      ],
      "description": "## Overview\n[semver-regex](https://www.npmjs.org/package/semver-regex) is a Regular expression for matching semver versions\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper usage of regex in the `semverRegex()` function.\r\n\r\n## PoC\r\n\r\n`'0.0.1-' + '-.--'.repeat(i) + ' '`\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver-regex` to version 3.1.4, 4.0.3 or higher.\n## References\n- [GitHub Commit](https://github.com/sindresorhus/semver-regex/commit/7712ba564d40da101cf2b2b33e6a910d9f2f57f4)\n- [GitHub Commit](https://github.com/sindresorhus/semver-regex/commit/d8ba39a528c1027c43ab23f12eec28ca4d40dd0c)\n- [GitHub Release 3.1.4](https://github.com/sindresorhus/semver-regex/releases/tag/v3.1.4)\n- [GitHub Release 4.0.3](https://github.com/sindresorhus/semver-regex/releases/tag/v4.0.3)\n",
      "epssDetails": {
        "percentile": "0.30788",
        "probability": "0.00075",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-43307"
        ],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "semver-regex",
      "proprietary": false,
      "creationTime": "2022-05-13T12:21:02.208322Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-05-13T12:17:48Z",
      "packageManager": "npm",
      "publicationTime": "2022-05-13T13:26:34Z",
      "modificationTime": "2022-06-10T01:11:11.391558Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "imagemin-pngquant@9.0.2",
        "pngquant-bin@6.0.1",
        "bin-wrapper@4.1.0",
        "bin-version-check@4.0.0",
        "bin-version@3.1.0",
        "find-versions@3.2.0",
        "semver-regex@2.0.0"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        "bin-version-check@5.0.0",
        "bin-version@6.0.0",
        "find-versions@5.0.0",
        "semver-regex@4.0.3"
      ],
      "version": "2.0.0",
      "name": "semver-regex",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-TOUGHCOOKIE-5672873",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
      "credit": [
        "Kokorin Vsevolod"
      ],
      "semver": {
        "vulnerable": [
          "<4.1.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "4.1.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "tough-cookie",
      "references": [
        {
          "url": "https://github.com/salesforce/tough-cookie/commit/12d474791bb856004e858fdb1c47b7608d09cf6e",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/salesforce/tough-cookie/issues/282",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/salesforce/tough-cookie/releases/tag/v4.1.3",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2023-07-06T13:31:55.808983Z"
        },
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2023-07-08T01:12:36.395017Z"
        }
      ],
      "description": "## Overview\n[tough-cookie](https://www.npmjs.com/package/tough-cookie) is a RFC6265 Cookies and CookieJar module for Node.js.\n\nAffected versions of this package are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in `rejectPublicSuffixes=false` mode. Due to an issue with the manner in which the objects are initialized, an attacker can expose or modify a limited amount of property information on those objects. There is no impact to availability.\n## PoC\n```\r\n// PoC.js\r\nasync function main(){\r\nvar tough = require(\"tough-cookie\");\r\nvar cookiejar = new tough.CookieJar(undefined,{rejectPublicSuffixes:false});\r\n// Exploit cookie\r\nawait cookiejar.setCookie(\r\n  \"Slonser=polluted; Domain=__proto__; Path=/notauth\",\r\n  \"https://__proto__/admin\"\r\n);\r\n// normal cookie\r\nvar cookie = await cookiejar.setCookie(\r\n  \"Auth=Lol; Domain=google.com; Path=/notauth\",\r\n  \"https://google.com/\"\r\n);\r\n\r\n//Exploit cookie\r\nvar a = {};\r\nconsole.log(a[\"/notauth\"][\"Slonser\"])\r\n}\r\nmain();\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `tough-cookie` to version 4.1.3 or higher.\n## References\n- [GitHub Commit](https://github.com/salesforce/tough-cookie/commit/12d474791bb856004e858fdb1c47b7608d09cf6e)\n- [GitHub Issue](https://github.com/salesforce/tough-cookie/issues/282)\n- [GitHub Release](https://github.com/salesforce/tough-cookie/releases/tag/v4.1.3)\n",
      "epssDetails": {
        "percentile": "0.53347",
        "probability": "0.00173",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-26136"
        ],
        "CWE": [
          "CWE-1321"
        ]
      },
      "packageName": "tough-cookie",
      "proprietary": true,
      "creationTime": "2023-06-08T15:08:51.664280Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-06-08T14:45:59Z",
      "packageManager": "npm",
      "publicationTime": "2023-06-30T11:54:16.657348Z",
      "modificationTime": "2023-07-09T13:39:02.212708Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "node-sass@5.0.0",
        "request@2.88.2",
        "tough-cookie@2.5.0"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        "tough-cookie@4.1.3"
      ],
      "version": "2.5.0",
      "name": "tough-cookie",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-TOUGHCOOKIE-5672873",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
      "credit": [
        "Kokorin Vsevolod"
      ],
      "semver": {
        "vulnerable": [
          "<4.1.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "4.1.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "tough-cookie",
      "references": [
        {
          "url": "https://github.com/salesforce/tough-cookie/commit/12d474791bb856004e858fdb1c47b7608d09cf6e",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/salesforce/tough-cookie/issues/282",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/salesforce/tough-cookie/releases/tag/v4.1.3",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2023-07-06T13:31:55.808983Z"
        },
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2023-07-08T01:12:36.395017Z"
        }
      ],
      "description": "## Overview\n[tough-cookie](https://www.npmjs.com/package/tough-cookie) is a RFC6265 Cookies and CookieJar module for Node.js.\n\nAffected versions of this package are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in `rejectPublicSuffixes=false` mode. Due to an issue with the manner in which the objects are initialized, an attacker can expose or modify a limited amount of property information on those objects. There is no impact to availability.\n## PoC\n```\r\n// PoC.js\r\nasync function main(){\r\nvar tough = require(\"tough-cookie\");\r\nvar cookiejar = new tough.CookieJar(undefined,{rejectPublicSuffixes:false});\r\n// Exploit cookie\r\nawait cookiejar.setCookie(\r\n  \"Slonser=polluted; Domain=__proto__; Path=/notauth\",\r\n  \"https://__proto__/admin\"\r\n);\r\n// normal cookie\r\nvar cookie = await cookiejar.setCookie(\r\n  \"Auth=Lol; Domain=google.com; Path=/notauth\",\r\n  \"https://google.com/\"\r\n);\r\n\r\n//Exploit cookie\r\nvar a = {};\r\nconsole.log(a[\"/notauth\"][\"Slonser\"])\r\n}\r\nmain();\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `tough-cookie` to version 4.1.3 or higher.\n## References\n- [GitHub Commit](https://github.com/salesforce/tough-cookie/commit/12d474791bb856004e858fdb1c47b7608d09cf6e)\n- [GitHub Issue](https://github.com/salesforce/tough-cookie/issues/282)\n- [GitHub Release](https://github.com/salesforce/tough-cookie/releases/tag/v4.1.3)\n",
      "epssDetails": {
        "percentile": "0.53347",
        "probability": "0.00173",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-26136"
        ],
        "CWE": [
          "CWE-1321"
        ]
      },
      "packageName": "tough-cookie",
      "proprietary": true,
      "creationTime": "2023-06-08T15:08:51.664280Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-06-08T14:45:59Z",
      "packageManager": "npm",
      "publicationTime": "2023-06-30T11:54:16.657348Z",
      "modificationTime": "2023-07-09T13:39:02.212708Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "uncss@0.17.3",
        "request@2.88.2",
        "tough-cookie@2.5.0"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        "tough-cookie@4.1.3"
      ],
      "version": "2.5.0",
      "name": "tough-cookie",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-TOUGHCOOKIE-5672873",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
      "credit": [
        "Kokorin Vsevolod"
      ],
      "semver": {
        "vulnerable": [
          "<4.1.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "4.1.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "tough-cookie",
      "references": [
        {
          "url": "https://github.com/salesforce/tough-cookie/commit/12d474791bb856004e858fdb1c47b7608d09cf6e",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/salesforce/tough-cookie/issues/282",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/salesforce/tough-cookie/releases/tag/v4.1.3",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2023-07-06T13:31:55.808983Z"
        },
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2023-07-08T01:12:36.395017Z"
        }
      ],
      "description": "## Overview\n[tough-cookie](https://www.npmjs.com/package/tough-cookie) is a RFC6265 Cookies and CookieJar module for Node.js.\n\nAffected versions of this package are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in `rejectPublicSuffixes=false` mode. Due to an issue with the manner in which the objects are initialized, an attacker can expose or modify a limited amount of property information on those objects. There is no impact to availability.\n## PoC\n```\r\n// PoC.js\r\nasync function main(){\r\nvar tough = require(\"tough-cookie\");\r\nvar cookiejar = new tough.CookieJar(undefined,{rejectPublicSuffixes:false});\r\n// Exploit cookie\r\nawait cookiejar.setCookie(\r\n  \"Slonser=polluted; Domain=__proto__; Path=/notauth\",\r\n  \"https://__proto__/admin\"\r\n);\r\n// normal cookie\r\nvar cookie = await cookiejar.setCookie(\r\n  \"Auth=Lol; Domain=google.com; Path=/notauth\",\r\n  \"https://google.com/\"\r\n);\r\n\r\n//Exploit cookie\r\nvar a = {};\r\nconsole.log(a[\"/notauth\"][\"Slonser\"])\r\n}\r\nmain();\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `tough-cookie` to version 4.1.3 or higher.\n## References\n- [GitHub Commit](https://github.com/salesforce/tough-cookie/commit/12d474791bb856004e858fdb1c47b7608d09cf6e)\n- [GitHub Issue](https://github.com/salesforce/tough-cookie/issues/282)\n- [GitHub Release](https://github.com/salesforce/tough-cookie/releases/tag/v4.1.3)\n",
      "epssDetails": {
        "percentile": "0.53347",
        "probability": "0.00173",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-26136"
        ],
        "CWE": [
          "CWE-1321"
        ]
      },
      "packageName": "tough-cookie",
      "proprietary": true,
      "creationTime": "2023-06-08T15:08:51.664280Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-06-08T14:45:59Z",
      "packageManager": "npm",
      "publicationTime": "2023-06-30T11:54:16.657348Z",
      "modificationTime": "2023-07-09T13:39:02.212708Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "node-sass@5.0.0",
        "node-gyp@7.1.2",
        "request@2.88.2",
        "tough-cookie@2.5.0"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        "tough-cookie@4.1.3"
      ],
      "version": "2.5.0",
      "name": "tough-cookie",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-TOUGHCOOKIE-5672873",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
      "credit": [
        "Kokorin Vsevolod"
      ],
      "semver": {
        "vulnerable": [
          "<4.1.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "4.1.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "tough-cookie",
      "references": [
        {
          "url": "https://github.com/salesforce/tough-cookie/commit/12d474791bb856004e858fdb1c47b7608d09cf6e",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/salesforce/tough-cookie/issues/282",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/salesforce/tough-cookie/releases/tag/v4.1.3",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2023-07-06T13:31:55.808983Z"
        },
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2023-07-08T01:12:36.395017Z"
        }
      ],
      "description": "## Overview\n[tough-cookie](https://www.npmjs.com/package/tough-cookie) is a RFC6265 Cookies and CookieJar module for Node.js.\n\nAffected versions of this package are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in `rejectPublicSuffixes=false` mode. Due to an issue with the manner in which the objects are initialized, an attacker can expose or modify a limited amount of property information on those objects. There is no impact to availability.\n## PoC\n```\r\n// PoC.js\r\nasync function main(){\r\nvar tough = require(\"tough-cookie\");\r\nvar cookiejar = new tough.CookieJar(undefined,{rejectPublicSuffixes:false});\r\n// Exploit cookie\r\nawait cookiejar.setCookie(\r\n  \"Slonser=polluted; Domain=__proto__; Path=/notauth\",\r\n  \"https://__proto__/admin\"\r\n);\r\n// normal cookie\r\nvar cookie = await cookiejar.setCookie(\r\n  \"Auth=Lol; Domain=google.com; Path=/notauth\",\r\n  \"https://google.com/\"\r\n);\r\n\r\n//Exploit cookie\r\nvar a = {};\r\nconsole.log(a[\"/notauth\"][\"Slonser\"])\r\n}\r\nmain();\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `tough-cookie` to version 4.1.3 or higher.\n## References\n- [GitHub Commit](https://github.com/salesforce/tough-cookie/commit/12d474791bb856004e858fdb1c47b7608d09cf6e)\n- [GitHub Issue](https://github.com/salesforce/tough-cookie/issues/282)\n- [GitHub Release](https://github.com/salesforce/tough-cookie/releases/tag/v4.1.3)\n",
      "epssDetails": {
        "percentile": "0.53347",
        "probability": "0.00173",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-26136"
        ],
        "CWE": [
          "CWE-1321"
        ]
      },
      "packageName": "tough-cookie",
      "proprietary": true,
      "creationTime": "2023-06-08T15:08:51.664280Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-06-08T14:45:59Z",
      "packageManager": "npm",
      "publicationTime": "2023-06-30T11:54:16.657348Z",
      "modificationTime": "2023-07-09T13:39:02.212708Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "uncss@0.17.3",
        "jsdom@14.1.0",
        "tough-cookie@2.5.0"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        "jsdom@16.5.0",
        "tough-cookie@4.1.3"
      ],
      "version": "2.5.0",
      "name": "tough-cookie",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-TOUGHCOOKIE-5672873",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
      "credit": [
        "Kokorin Vsevolod"
      ],
      "semver": {
        "vulnerable": [
          "<4.1.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "4.1.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "tough-cookie",
      "references": [
        {
          "url": "https://github.com/salesforce/tough-cookie/commit/12d474791bb856004e858fdb1c47b7608d09cf6e",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/salesforce/tough-cookie/issues/282",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/salesforce/tough-cookie/releases/tag/v4.1.3",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2023-07-06T13:31:55.808983Z"
        },
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2023-07-08T01:12:36.395017Z"
        }
      ],
      "description": "## Overview\n[tough-cookie](https://www.npmjs.com/package/tough-cookie) is a RFC6265 Cookies and CookieJar module for Node.js.\n\nAffected versions of this package are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in `rejectPublicSuffixes=false` mode. Due to an issue with the manner in which the objects are initialized, an attacker can expose or modify a limited amount of property information on those objects. There is no impact to availability.\n## PoC\n```\r\n// PoC.js\r\nasync function main(){\r\nvar tough = require(\"tough-cookie\");\r\nvar cookiejar = new tough.CookieJar(undefined,{rejectPublicSuffixes:false});\r\n// Exploit cookie\r\nawait cookiejar.setCookie(\r\n  \"Slonser=polluted; Domain=__proto__; Path=/notauth\",\r\n  \"https://__proto__/admin\"\r\n);\r\n// normal cookie\r\nvar cookie = await cookiejar.setCookie(\r\n  \"Auth=Lol; Domain=google.com; Path=/notauth\",\r\n  \"https://google.com/\"\r\n);\r\n\r\n//Exploit cookie\r\nvar a = {};\r\nconsole.log(a[\"/notauth\"][\"Slonser\"])\r\n}\r\nmain();\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `tough-cookie` to version 4.1.3 or higher.\n## References\n- [GitHub Commit](https://github.com/salesforce/tough-cookie/commit/12d474791bb856004e858fdb1c47b7608d09cf6e)\n- [GitHub Issue](https://github.com/salesforce/tough-cookie/issues/282)\n- [GitHub Release](https://github.com/salesforce/tough-cookie/releases/tag/v4.1.3)\n",
      "epssDetails": {
        "percentile": "0.53347",
        "probability": "0.00173",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-26136"
        ],
        "CWE": [
          "CWE-1321"
        ]
      },
      "packageName": "tough-cookie",
      "proprietary": true,
      "creationTime": "2023-06-08T15:08:51.664280Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-06-08T14:45:59Z",
      "packageManager": "npm",
      "publicationTime": "2023-06-30T11:54:16.657348Z",
      "modificationTime": "2023-07-09T13:39:02.212708Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "uncss@0.17.3",
        "jsdom@14.1.0",
        "request@2.88.2",
        "tough-cookie@2.5.0"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        false,
        "tough-cookie@4.1.3"
      ],
      "version": "2.5.0",
      "name": "tough-cookie",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-TOUGHCOOKIE-5672873",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
      "credit": [
        "Kokorin Vsevolod"
      ],
      "semver": {
        "vulnerable": [
          "<4.1.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "4.1.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "tough-cookie",
      "references": [
        {
          "url": "https://github.com/salesforce/tough-cookie/commit/12d474791bb856004e858fdb1c47b7608d09cf6e",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/salesforce/tough-cookie/issues/282",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/salesforce/tough-cookie/releases/tag/v4.1.3",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2023-07-06T13:31:55.808983Z"
        },
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2023-07-08T01:12:36.395017Z"
        }
      ],
      "description": "## Overview\n[tough-cookie](https://www.npmjs.com/package/tough-cookie) is a RFC6265 Cookies and CookieJar module for Node.js.\n\nAffected versions of this package are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in `rejectPublicSuffixes=false` mode. Due to an issue with the manner in which the objects are initialized, an attacker can expose or modify a limited amount of property information on those objects. There is no impact to availability.\n## PoC\n```\r\n// PoC.js\r\nasync function main(){\r\nvar tough = require(\"tough-cookie\");\r\nvar cookiejar = new tough.CookieJar(undefined,{rejectPublicSuffixes:false});\r\n// Exploit cookie\r\nawait cookiejar.setCookie(\r\n  \"Slonser=polluted; Domain=__proto__; Path=/notauth\",\r\n  \"https://__proto__/admin\"\r\n);\r\n// normal cookie\r\nvar cookie = await cookiejar.setCookie(\r\n  \"Auth=Lol; Domain=google.com; Path=/notauth\",\r\n  \"https://google.com/\"\r\n);\r\n\r\n//Exploit cookie\r\nvar a = {};\r\nconsole.log(a[\"/notauth\"][\"Slonser\"])\r\n}\r\nmain();\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `tough-cookie` to version 4.1.3 or higher.\n## References\n- [GitHub Commit](https://github.com/salesforce/tough-cookie/commit/12d474791bb856004e858fdb1c47b7608d09cf6e)\n- [GitHub Issue](https://github.com/salesforce/tough-cookie/issues/282)\n- [GitHub Release](https://github.com/salesforce/tough-cookie/releases/tag/v4.1.3)\n",
      "epssDetails": {
        "percentile": "0.53347",
        "probability": "0.00173",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-26136"
        ],
        "CWE": [
          "CWE-1321"
        ]
      },
      "packageName": "tough-cookie",
      "proprietary": true,
      "creationTime": "2023-06-08T15:08:51.664280Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-06-08T14:45:59Z",
      "packageManager": "npm",
      "publicationTime": "2023-06-30T11:54:16.657348Z",
      "modificationTime": "2023-07-09T13:39:02.212708Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "htmlnano@0.2.9",
        "uncss@0.17.3",
        "jsdom@14.1.0",
        "request-promise-native@1.0.9",
        "tough-cookie@2.5.0"
      ],
      "upgradePath": [
        false,
        false,
        false,
        false,
        false,
        false,
        "tough-cookie@4.1.3"
      ],
      "version": "2.5.0",
      "name": "tough-cookie",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-TRIMNEWLINES-1298042",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<3.0.1",
          ">=4.0.0 <4.0.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "3.0.1",
        "4.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "trim-newlines",
      "references": [
        {
          "url": "https://github.com/sindresorhus/trim-newlines/commit/25246c6ce5eea1c82d448998733a6302a4350d91",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/sindresorhus/trim-newlines/releases/tag/v4.0.1",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-26T15:06:03.833734Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-05-04T13:11:11.861317Z"
        }
      ],
      "description": "## Overview\n[trim-newlines](https://www.npmjs.org/package/trim-newlines) is a Trim newlines from the start and/or end of a string\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) via the `end()` method.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `trim-newlines` to version 3.0.1, 4.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/sindresorhus/trim-newlines/commit/25246c6ce5eea1c82d448998733a6302a4350d91)\n- [GitHub Release](https://github.com/sindresorhus/trim-newlines/releases/tag/v4.0.1)\n",
      "epssDetails": {
        "percentile": "0.36518",
        "probability": "0.00088",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-33623"
        ],
        "CWE": [
          "CWE-400"
        ],
        "GHSA": [
          "GHSA-7p7h-4mm5-852v"
        ]
      },
      "packageName": "trim-newlines",
      "proprietary": false,
      "creationTime": "2021-05-30T12:45:07.317218Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-05-30T12:41:33Z",
      "packageManager": "npm",
      "publicationTime": "2021-05-30T13:11:03.409185Z",
      "modificationTime": "2023-03-26T15:06:03.833734Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "hq-live-server@hqjs/vscode-hq-live-server#73cb04426aad770d77a7a683f6432f06115bc956",
        "@hqjs/hq@0.0.31",
        "node-sass@5.0.0",
        "meow@3.7.0",
        "trim-newlines@1.0.0"
      ],
      "upgradePath": [
        false,
        false,
        "node-sass@6.0.1",
        "meow@9.0.0",
        "trim-newlines@3.0.1"
      ],
      "version": "1.0.0",
      "name": "trim-newlines",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    }
  ],
  "numDependencies": 1059,
  "severityMap": {
    "critical": 0,
    "high": 22,
    "medium": 178,
    "low": 0
  },
  "org": "bruswei",
  "packageManager": "npm",
  "summary": "200 vulnerable dependency paths",
  "filesystemPolicy": false,
  "filtered": {
    "ignore": [],
    "patch": []
  },
  "uniqueCount": 31,
  "hasUnknownVersions": false,
  "path": "https://github.com/hqjs/vscode-hq-live-server.git"
}
