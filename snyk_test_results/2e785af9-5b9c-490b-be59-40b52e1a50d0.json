{
  "ok": false,
  "vulnerabilities": [
    {
      "id": "SNYK-JS-ENGINEIO-1056749",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:R",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<4.0.0"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "4.0.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "engine.io",
      "references": [
        {
          "url": "https://github.com/socketio/engine.io/commit/734f9d1268840722c41219e69eb58318e0b2ac6b",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/bcaller/kill-engine-io",
          "title": "PoC"
        },
        {
          "url": "https://blog.caller.xyz/socketio-engineio-dos/",
          "title": "Research Blogpost"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T18:09:21.542175Z"
        }
      ],
      "description": "## Overview\n[engine.io](https://github.com/socketio/engine.io) is a realtime engine behind Socket.IO. It provides the foundation of a bidirectional connection between client and server\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) via a POST request to the long polling transport.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `engine.io` to version 4.0.0 or higher.\n## References\n- [GitHub Commit](https://github.com/socketio/engine.io/commit/734f9d1268840722c41219e69eb58318e0b2ac6b)\n- [PoC](https://github.com/bcaller/kill-engine-io)\n- [Research Blogpost](https://blog.caller.xyz/socketio-engineio-dos/)\n",
      "epssDetails": {
        "percentile": "0.54367",
        "probability": "0.00182",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-36048"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "engine.io",
      "proprietary": false,
      "creationTime": "2021-01-08T10:58:56.558133Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-01-08T10:54:39Z",
      "packageManager": "npm",
      "publicationTime": "2021-01-08T16:03:18.114498Z",
      "modificationTime": "2022-01-03T18:09:21.542175Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "engine.io@1.8.5"
      ],
      "upgradePath": [
        false,
        "socket.io@3.0.0",
        "engine.io@4.0.0"
      ],
      "version": "1.8.5",
      "name": "engine.io",
      "isUpgradable": true,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-ENGINEIO-3136336",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "Jonathan Neve"
      ],
      "semver": {
        "vulnerable": [
          "<3.6.1",
          ">=4.0.0 <6.2.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "3.6.1",
        "6.2.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "engine.io",
      "references": [
        {
          "url": "https://github.com/socketio/engine.io/commit/425e833ab13373edf1dd5a0706f07100db14e3c6",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/socketio/engine.io/commit/83c4071af871fc188298d7d591e95670bf9f9085",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/socketio/engine.io/pull/658",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2022-11-26T13:10:42.027902Z"
        }
      ],
      "description": "## Overview\n[engine.io](https://github.com/socketio/engine.io) is a realtime engine behind Socket.IO. It provides the foundation of a bidirectional connection between client and server\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). A malicious client could send a specially crafted HTTP request, triggering an uncaught exception and killing the `Node.js` process.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `engine.io` to version 3.6.1, 6.2.1 or higher.\n## References\n- [GitHub Commit](https://github.com/socketio/engine.io/commit/425e833ab13373edf1dd5a0706f07100db14e3c6)\n- [GitHub Commit](https://github.com/socketio/engine.io/commit/83c4071af871fc188298d7d591e95670bf9f9085)\n- [GitHub PR](https://github.com/socketio/engine.io/pull/658)\n",
      "epssDetails": {
        "percentile": "0.27319",
        "probability": "0.00066",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-41940"
        ],
        "CWE": [
          "CWE-400"
        ],
        "GHSA": [
          "GHSA-r7qp-cfhv-p84w"
        ]
      },
      "packageName": "engine.io",
      "proprietary": false,
      "creationTime": "2022-11-21T14:00:03.277453Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-11-21T13:55:28Z",
      "packageManager": "npm",
      "publicationTime": "2022-11-21T14:00:42.363779Z",
      "modificationTime": "2022-12-05T15:31:11.918126Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "engine.io@1.8.5"
      ],
      "upgradePath": [
        false,
        "socket.io@2.5.0",
        "engine.io@3.6.1"
      ],
      "version": "1.8.5",
      "name": "engine.io",
      "isUpgradable": true,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-SOCKETIO-1024859",
      "title": "Insecure Defaults",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "ni8walk3r"
      ],
      "semver": {
        "vulnerable": [
          "<2.4.0"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "2.4.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "socket.io",
      "references": [
        {
          "url": "https://github.com/socketio/socket.io/issues/3671",
          "title": "GitHub Issue"
        },
        {
          "url": "https://hackerone.com/reports/931197",
          "title": "HackerOne Report"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N",
          "cvssV3BaseScore": 4.3,
          "modificationTime": "2022-01-03T18:07:01.085376Z"
        }
      ],
      "description": "## Overview\n[socket.io](https://github.com/socketio/socket.io) is a node.js realtime framework server.\n\nAffected versions of this package are vulnerable to Insecure Defaults due to CORS Misconfiguration. All domains are whitelisted by default.\n## Remediation\nUpgrade `socket.io` to version 2.4.0 or higher.\n## References\n- [GitHub Issue](https://github.com/socketio/socket.io/issues/3671)\n- [HackerOne Report](https://hackerone.com/reports/931197)\n",
      "epssDetails": {
        "percentile": "0.51824",
        "probability": "0.00162",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-28481"
        ],
        "CWE": [
          "CWE-453"
        ],
        "GHSA": [
          "GHSA-fxwf-4rqh-v8g3"
        ]
      },
      "packageName": "socket.io",
      "proprietary": true,
      "creationTime": "2020-10-30T15:11:27.221896Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2020-10-30T14:01:53Z",
      "packageManager": "npm",
      "publicationTime": "2021-01-07T16:40:36Z",
      "modificationTime": "2022-01-03T18:07:01.085376Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4"
      ],
      "upgradePath": [
        false,
        "socket.io@2.4.0"
      ],
      "version": "1.7.4",
      "name": "socket.io",
      "isUpgradable": true,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-SOCKETIOPARSER-1056752",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:R",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<3.3.2",
          ">3.4.0 <3.4.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.3.2",
        "3.4.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "socket.io-parser",
      "references": [
        {
          "url": "https://github.com/socketio/socket.io-parser/commit/dcb942d24db97162ad16a67c2a0cf30875342d55",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/bcaller/kill-engine-io",
          "title": "PoC"
        },
        {
          "url": "https://blog.caller.xyz/socketio-engineio-dos/",
          "title": "Research Blogpost"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T18:09:22.337528Z"
        }
      ],
      "description": "## Overview\n[socket.io-parser](https://www.npmjs.org/package/socket.io-parser) is a socket.io protocol parser\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) via a large packet because a concatenation approach is used.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `socket.io-parser` to version 3.3.2, 3.4.1 or higher.\n## References\n- [GitHub Commit](https://github.com/socketio/socket.io-parser/commit/dcb942d24db97162ad16a67c2a0cf30875342d55)\n- [PoC](https://github.com/bcaller/kill-engine-io)\n- [Research Blogpost](https://blog.caller.xyz/socketio-engineio-dos/)\n",
      "epssDetails": {
        "percentile": "0.54367",
        "probability": "0.00182",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-36049"
        ],
        "CWE": [
          "CWE-400"
        ],
        "GHSA": [
          "GHSA-xfhh-g9f5-x4m4"
        ]
      },
      "packageName": "socket.io-parser",
      "proprietary": false,
      "creationTime": "2021-01-08T11:00:31.327189Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-01-08T10:59:22Z",
      "packageManager": "npm",
      "publicationTime": "2021-01-08T16:03:18Z",
      "modificationTime": "2022-01-03T18:09:22.337528Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "socket.io-parser@2.3.1"
      ],
      "upgradePath": [
        false,
        "socket.io@2.2.0",
        "socket.io-parser@3.3.2"
      ],
      "version": "2.3.1",
      "name": "socket.io-parser",
      "isUpgradable": true,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-SOCKETIOPARSER-1056752",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:R",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<3.3.2",
          ">3.4.0 <3.4.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.3.2",
        "3.4.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "socket.io-parser",
      "references": [
        {
          "url": "https://github.com/socketio/socket.io-parser/commit/dcb942d24db97162ad16a67c2a0cf30875342d55",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/bcaller/kill-engine-io",
          "title": "PoC"
        },
        {
          "url": "https://blog.caller.xyz/socketio-engineio-dos/",
          "title": "Research Blogpost"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T18:09:22.337528Z"
        }
      ],
      "description": "## Overview\n[socket.io-parser](https://www.npmjs.org/package/socket.io-parser) is a socket.io protocol parser\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) via a large packet because a concatenation approach is used.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `socket.io-parser` to version 3.3.2, 3.4.1 or higher.\n## References\n- [GitHub Commit](https://github.com/socketio/socket.io-parser/commit/dcb942d24db97162ad16a67c2a0cf30875342d55)\n- [PoC](https://github.com/bcaller/kill-engine-io)\n- [Research Blogpost](https://blog.caller.xyz/socketio-engineio-dos/)\n",
      "epssDetails": {
        "percentile": "0.54367",
        "probability": "0.00182",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-36049"
        ],
        "CWE": [
          "CWE-400"
        ],
        "GHSA": [
          "GHSA-xfhh-g9f5-x4m4"
        ]
      },
      "packageName": "socket.io-parser",
      "proprietary": false,
      "creationTime": "2021-01-08T11:00:31.327189Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-01-08T10:59:22Z",
      "packageManager": "npm",
      "publicationTime": "2021-01-08T16:03:18Z",
      "modificationTime": "2022-01-03T18:09:22.337528Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "socket.io-adapter@0.5.0",
        "socket.io-parser@2.3.1"
      ],
      "upgradePath": [
        false,
        false,
        "socket.io-adapter@1.0.0"
      ],
      "version": "2.3.1",
      "name": "socket.io-parser",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-SOCKETIOPARSER-1056752",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:R",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<3.3.2",
          ">3.4.0 <3.4.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.3.2",
        "3.4.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "socket.io-parser",
      "references": [
        {
          "url": "https://github.com/socketio/socket.io-parser/commit/dcb942d24db97162ad16a67c2a0cf30875342d55",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/bcaller/kill-engine-io",
          "title": "PoC"
        },
        {
          "url": "https://blog.caller.xyz/socketio-engineio-dos/",
          "title": "Research Blogpost"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T18:09:22.337528Z"
        }
      ],
      "description": "## Overview\n[socket.io-parser](https://www.npmjs.org/package/socket.io-parser) is a socket.io protocol parser\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) via a large packet because a concatenation approach is used.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `socket.io-parser` to version 3.3.2, 3.4.1 or higher.\n## References\n- [GitHub Commit](https://github.com/socketio/socket.io-parser/commit/dcb942d24db97162ad16a67c2a0cf30875342d55)\n- [PoC](https://github.com/bcaller/kill-engine-io)\n- [Research Blogpost](https://blog.caller.xyz/socketio-engineio-dos/)\n",
      "epssDetails": {
        "percentile": "0.54367",
        "probability": "0.00182",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-36049"
        ],
        "CWE": [
          "CWE-400"
        ],
        "GHSA": [
          "GHSA-xfhh-g9f5-x4m4"
        ]
      },
      "packageName": "socket.io-parser",
      "proprietary": false,
      "creationTime": "2021-01-08T11:00:31.327189Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-01-08T10:59:22Z",
      "packageManager": "npm",
      "publicationTime": "2021-01-08T16:03:18Z",
      "modificationTime": "2022-01-03T18:09:22.337528Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 99,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "socket.io-client@1.7.4",
        "socket.io-parser@2.3.1"
      ],
      "upgradePath": [
        false,
        "socket.io@2.2.0",
        "socket.io-client@2.2.0",
        "socket.io-parser@3.3.2"
      ],
      "version": "2.3.1",
      "name": "socket.io-parser",
      "isUpgradable": true,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-SOCKETIOPARSER-3091012",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "credit": [
        "Thomas Rinsma"
      ],
      "semver": {
        "vulnerable": [
          "<3.3.3",
          ">=3.4.0 <3.4.2",
          ">=4.0.0 <4.0.5",
          ">=4.1.0 <4.2.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "3.3.3",
        "3.4.2",
        "4.0.5",
        "4.2.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "critical",
      "cvssScore": 9.8,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "socket.io-parser",
      "references": [
        {
          "url": "https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050",
          "title": "GitHub Commit"
        },
        {
          "url": "https://csirt.divd.nl/cases/DIVD-2022-00045",
          "title": "Vulnerability Report"
        },
        {
          "url": "https://csirt.divd.nl/cves/CVE-2022-2421",
          "title": "Vulnerability Report"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-11-03T01:10:50.144673Z"
        }
      ],
      "description": "## Overview\n\n[socket.io-parser](https://www.npmjs.org/package/socket.io-parser) is a socket.io protocol parser\n\n\nAffected versions of this package are vulnerable to Improper Input Validation.\nwhen parsing attachments containing untrusted user input. Attackers can overwrite the `_placeholder` object to place references to functions in query objects.\r\n\r\n## PoC\r\n\r\n```js\r\nconst decoder = new Decoder();\r\n\r\ndecoder.on(\"decoded\", (packet) => {\r\n  console.log(packet.data); // prints [ 'hello', [Function: splice] ]\r\n})\r\n\r\ndecoder.add('51-[\"hello\",{\"_placeholder\":true,\"num\":\"splice\"}]');\r\ndecoder.add(Buffer.from(\"world\"));\r\n```\n\n## Remediation\n\nUpgrade `socket.io-parser` to version 3.3.3, 3.4.2, 4.0.5, 4.2.1 or higher.\n\n\n## References\n\n- [GitHub Commit](https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4)\n\n- [GitHub Commit](https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050)\n\n- [Vulnerability Report](https://csirt.divd.nl/cases/DIVD-2022-00045)\n\n- [Vulnerability Report](https://csirt.divd.nl/cves/CVE-2022-2421)\n",
      "epssDetails": {
        "percentile": "0.47027",
        "probability": "0.00132",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-2421"
        ],
        "CWE": [
          "CWE-89"
        ],
        "GHSA": [
          "GHSA-qm95-pgcg-qqfq"
        ]
      },
      "packageName": "socket.io-parser",
      "proprietary": false,
      "creationTime": "2022-10-30T11:44:09.888401Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-10-26T12:57:39Z",
      "packageManager": "npm",
      "publicationTime": "2022-10-30T12:46:06.853890Z",
      "modificationTime": "2022-11-15T14:07:51.338748Z",
      "socialTrendAlert": false,
      "severityWithCritical": "critical",
      "packagePopularityRank": 99,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "socket.io-parser@2.3.1"
      ],
      "upgradePath": [
        false,
        "socket.io@2.2.0",
        "socket.io-parser@3.3.3"
      ],
      "version": "2.3.1",
      "name": "socket.io-parser",
      "isUpgradable": true,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-SOCKETIOPARSER-3091012",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "credit": [
        "Thomas Rinsma"
      ],
      "semver": {
        "vulnerable": [
          "<3.3.3",
          ">=3.4.0 <3.4.2",
          ">=4.0.0 <4.0.5",
          ">=4.1.0 <4.2.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "3.3.3",
        "3.4.2",
        "4.0.5",
        "4.2.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "critical",
      "cvssScore": 9.8,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "socket.io-parser",
      "references": [
        {
          "url": "https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050",
          "title": "GitHub Commit"
        },
        {
          "url": "https://csirt.divd.nl/cases/DIVD-2022-00045",
          "title": "Vulnerability Report"
        },
        {
          "url": "https://csirt.divd.nl/cves/CVE-2022-2421",
          "title": "Vulnerability Report"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-11-03T01:10:50.144673Z"
        }
      ],
      "description": "## Overview\n\n[socket.io-parser](https://www.npmjs.org/package/socket.io-parser) is a socket.io protocol parser\n\n\nAffected versions of this package are vulnerable to Improper Input Validation.\nwhen parsing attachments containing untrusted user input. Attackers can overwrite the `_placeholder` object to place references to functions in query objects.\r\n\r\n## PoC\r\n\r\n```js\r\nconst decoder = new Decoder();\r\n\r\ndecoder.on(\"decoded\", (packet) => {\r\n  console.log(packet.data); // prints [ 'hello', [Function: splice] ]\r\n})\r\n\r\ndecoder.add('51-[\"hello\",{\"_placeholder\":true,\"num\":\"splice\"}]');\r\ndecoder.add(Buffer.from(\"world\"));\r\n```\n\n## Remediation\n\nUpgrade `socket.io-parser` to version 3.3.3, 3.4.2, 4.0.5, 4.2.1 or higher.\n\n\n## References\n\n- [GitHub Commit](https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4)\n\n- [GitHub Commit](https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050)\n\n- [Vulnerability Report](https://csirt.divd.nl/cases/DIVD-2022-00045)\n\n- [Vulnerability Report](https://csirt.divd.nl/cves/CVE-2022-2421)\n",
      "epssDetails": {
        "percentile": "0.47027",
        "probability": "0.00132",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-2421"
        ],
        "CWE": [
          "CWE-89"
        ],
        "GHSA": [
          "GHSA-qm95-pgcg-qqfq"
        ]
      },
      "packageName": "socket.io-parser",
      "proprietary": false,
      "creationTime": "2022-10-30T11:44:09.888401Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-10-26T12:57:39Z",
      "packageManager": "npm",
      "publicationTime": "2022-10-30T12:46:06.853890Z",
      "modificationTime": "2022-11-15T14:07:51.338748Z",
      "socialTrendAlert": false,
      "severityWithCritical": "critical",
      "packagePopularityRank": 99,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "socket.io-adapter@0.5.0",
        "socket.io-parser@2.3.1"
      ],
      "upgradePath": [
        false,
        false,
        "socket.io-adapter@1.0.0"
      ],
      "version": "2.3.1",
      "name": "socket.io-parser",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-SOCKETIOPARSER-3091012",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "credit": [
        "Thomas Rinsma"
      ],
      "semver": {
        "vulnerable": [
          "<3.3.3",
          ">=3.4.0 <3.4.2",
          ">=4.0.0 <4.0.5",
          ">=4.1.0 <4.2.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "3.3.3",
        "3.4.2",
        "4.0.5",
        "4.2.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "critical",
      "cvssScore": 9.8,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "socket.io-parser",
      "references": [
        {
          "url": "https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050",
          "title": "GitHub Commit"
        },
        {
          "url": "https://csirt.divd.nl/cases/DIVD-2022-00045",
          "title": "Vulnerability Report"
        },
        {
          "url": "https://csirt.divd.nl/cves/CVE-2022-2421",
          "title": "Vulnerability Report"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-11-03T01:10:50.144673Z"
        }
      ],
      "description": "## Overview\n\n[socket.io-parser](https://www.npmjs.org/package/socket.io-parser) is a socket.io protocol parser\n\n\nAffected versions of this package are vulnerable to Improper Input Validation.\nwhen parsing attachments containing untrusted user input. Attackers can overwrite the `_placeholder` object to place references to functions in query objects.\r\n\r\n## PoC\r\n\r\n```js\r\nconst decoder = new Decoder();\r\n\r\ndecoder.on(\"decoded\", (packet) => {\r\n  console.log(packet.data); // prints [ 'hello', [Function: splice] ]\r\n})\r\n\r\ndecoder.add('51-[\"hello\",{\"_placeholder\":true,\"num\":\"splice\"}]');\r\ndecoder.add(Buffer.from(\"world\"));\r\n```\n\n## Remediation\n\nUpgrade `socket.io-parser` to version 3.3.3, 3.4.2, 4.0.5, 4.2.1 or higher.\n\n\n## References\n\n- [GitHub Commit](https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4)\n\n- [GitHub Commit](https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050)\n\n- [Vulnerability Report](https://csirt.divd.nl/cases/DIVD-2022-00045)\n\n- [Vulnerability Report](https://csirt.divd.nl/cves/CVE-2022-2421)\n",
      "epssDetails": {
        "percentile": "0.47027",
        "probability": "0.00132",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-2421"
        ],
        "CWE": [
          "CWE-89"
        ],
        "GHSA": [
          "GHSA-qm95-pgcg-qqfq"
        ]
      },
      "packageName": "socket.io-parser",
      "proprietary": false,
      "creationTime": "2022-10-30T11:44:09.888401Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-10-26T12:57:39Z",
      "packageManager": "npm",
      "publicationTime": "2022-10-30T12:46:06.853890Z",
      "modificationTime": "2022-11-15T14:07:51.338748Z",
      "socialTrendAlert": false,
      "severityWithCritical": "critical",
      "packagePopularityRank": 99,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "socket.io-client@1.7.4",
        "socket.io-parser@2.3.1"
      ],
      "upgradePath": [
        false,
        "socket.io@2.2.0",
        "socket.io-client@2.2.0",
        "socket.io-parser@3.3.3"
      ],
      "version": "2.3.1",
      "name": "socket.io-parser",
      "isUpgradable": true,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-WS-1296835",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Robert McLaughlin"
      ],
      "semver": {
        "vulnerable": [
          ">=7.0.0 <7.4.6",
          ">=6.0.0 <6.2.2",
          "<5.2.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "7.4.6",
        "6.2.2",
        "5.2.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ws",
      "references": [
        {
          "url": "https://github.com/websockets/ws/commit/00c425ec77993773d823f018f64a5c44e17023ff",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-03-26T20:28:35.669501Z"
        },
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-06-04T13:11:32.609379Z"
        }
      ],
      "description": "## Overview\n[ws](https://www.npmjs.com/package/ws) is a simple to use websocket client, server and console for node.js.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). A specially crafted value of the `Sec-Websocket-Protocol` header can be used to significantly slow down a `ws` server.\r\n\r\n##PoC\r\n```\r\nfor (const length of [1000, 2000, 4000, 8000, 16000, 32000]) {\r\n  const value = 'b' + ' '.repeat(length) + 'x';\r\n  const start = process.hrtime.bigint();\r\n\r\n  value.trim().split(/ *, */);\r\n\r\n  const end = process.hrtime.bigint();\r\n\r\n  console.log('length = %d, time = %f ns', length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `ws` to version 7.4.6, 6.2.2, 5.2.3 or higher.\n## References\n- [GitHub Commit](https://github.com/websockets/ws/commit/00c425ec77993773d823f018f64a5c44e17023ff)\n",
      "epssDetails": {
        "percentile": "0.44291",
        "probability": "0.00116",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-32640"
        ],
        "CWE": [
          "CWE-400"
        ],
        "GHSA": [
          "GHSA-6fc8-4gx4-v693"
        ]
      },
      "packageName": "ws",
      "proprietary": false,
      "creationTime": "2021-05-26T08:37:36.519338Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-05-26T08:34:58Z",
      "packageManager": "npm",
      "publicationTime": "2021-05-26T11:57:43Z",
      "modificationTime": "2023-03-26T20:28:35.669501Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "engine.io@1.8.5",
        "ws@1.1.5"
      ],
      "upgradePath": [
        false,
        "socket.io@2.3.0",
        "engine.io@3.4.0",
        "ws@7.4.6"
      ],
      "version": "1.1.5",
      "name": "ws",
      "isUpgradable": true,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "SNYK-JS-WS-1296835",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Robert McLaughlin"
      ],
      "semver": {
        "vulnerable": [
          ">=7.0.0 <7.4.6",
          ">=6.0.0 <6.2.2",
          "<5.2.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "7.4.6",
        "6.2.2",
        "5.2.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ws",
      "references": [
        {
          "url": "https://github.com/websockets/ws/commit/00c425ec77993773d823f018f64a5c44e17023ff",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-03-26T20:28:35.669501Z"
        },
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-06-04T13:11:32.609379Z"
        }
      ],
      "description": "## Overview\n[ws](https://www.npmjs.com/package/ws) is a simple to use websocket client, server and console for node.js.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). A specially crafted value of the `Sec-Websocket-Protocol` header can be used to significantly slow down a `ws` server.\r\n\r\n##PoC\r\n```\r\nfor (const length of [1000, 2000, 4000, 8000, 16000, 32000]) {\r\n  const value = 'b' + ' '.repeat(length) + 'x';\r\n  const start = process.hrtime.bigint();\r\n\r\n  value.trim().split(/ *, */);\r\n\r\n  const end = process.hrtime.bigint();\r\n\r\n  console.log('length = %d, time = %f ns', length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `ws` to version 7.4.6, 6.2.2, 5.2.3 or higher.\n## References\n- [GitHub Commit](https://github.com/websockets/ws/commit/00c425ec77993773d823f018f64a5c44e17023ff)\n",
      "epssDetails": {
        "percentile": "0.44291",
        "probability": "0.00116",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-32640"
        ],
        "CWE": [
          "CWE-400"
        ],
        "GHSA": [
          "GHSA-6fc8-4gx4-v693"
        ]
      },
      "packageName": "ws",
      "proprietary": false,
      "creationTime": "2021-05-26T08:37:36.519338Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-05-26T08:34:58Z",
      "packageManager": "npm",
      "publicationTime": "2021-05-26T11:57:43Z",
      "modificationTime": "2023-03-26T20:28:35.669501Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "packagePopularityRank": 99,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "socket.io-client@1.7.4",
        "engine.io-client@1.8.6",
        "ws@1.1.5"
      ],
      "upgradePath": [
        false,
        "socket.io@2.4.0",
        "socket.io-client@2.4.0",
        "engine.io-client@3.5.0",
        "ws@7.4.6"
      ],
      "version": "1.1.5",
      "name": "ws",
      "isUpgradable": true,
      "isPatchable": false,
      "isPinnable": false
    },
    {
      "id": "npm:debug:20170905",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Cristian-Alexandru Staicu"
      ],
      "semver": {
        "vulnerable": [
          ">=1.0.0 <2.6.9",
          ">=3.0.0 <3.1.0"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "2.6.9",
        "3.1.0"
      ],
      "patches": [
        {
          "id": "patch:npm:debug:20170905:0",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
          ],
          "version": ">= 3.0.0 <=3.0.1",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.872397Z"
        },
        {
          "id": "patch:npm:debug:20170905:1",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.5.1 <2.6.9",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.873422Z"
        },
        {
          "id": "patch:npm:debug:20170905:2",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.4.0 <2.5.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.874399Z"
        },
        {
          "id": "patch:npm:debug:20170905:3",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.0.0 <2.4.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.875363Z"
        }
      ],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">= 2.5.0 <2.6.9",
            ">=3.0.0 <3.1.0"
          ],
          "functionId": {
            "filePath": "src/node.js",
            "className": null,
            "functionName": "exports.formatters.o"
          }
        },
        {
          "version": [
            ">=1.0.0 <2.5.0"
          ],
          "functionId": {
            "filePath": "node.js",
            "className": null,
            "functionName": "exports.formatters.o"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "debug",
      "references": [
        {
          "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/visionmedia/debug/issues/501",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/visionmedia/debug/pull/504",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
          "title": "GitHub Release Notes 2.6.9"
        },
        {
          "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
          "title": "GitHub Release Notes 3.1.0"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-01-03T16:21:42.477572Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-03-26T15:00:55.919669Z"
        }
      ],
      "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0 or higher.\n## References\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
      "epssDetails": {
        "percentile": "0.59547",
        "probability": "0.00225",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2017-16137"
        ],
        "CWE": [
          "CWE-400"
        ],
        "NSP": [
          "534"
        ],
        "GHSA": [
          "GHSA-gxpj-cx7g-858c"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-DEBUG-10762"
        ]
      },
      "packageName": "debug",
      "proprietary": false,
      "creationTime": "2017-09-13T07:55:05.106000Z",
      "functions_new": [
        {
          "version": [
            ">= 2.5.0 <2.6.9",
            ">=3.0.0 <3.1.0"
          ],
          "functionId": {
            "filePath": "src/node.js",
            "functionName": "exports.formatters.o"
          }
        },
        {
          "version": [
            ">=1.0.0 <2.5.0"
          ],
          "functionId": {
            "filePath": "node.js",
            "functionName": "exports.formatters.o"
          }
        }
      ],
      "alternativeIds": [
        "SNYK-JS-DEBUG-10762"
      ],
      "disclosureTime": "2017-09-05T21:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2017-09-26T03:55:05Z",
      "modificationTime": "2023-03-26T15:00:55.919669Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "packagePopularityRank": 99,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "debug@2.3.3"
      ],
      "upgradePath": [
        false,
        "socket.io@2.0.0",
        "debug@2.6.9"
      ],
      "version": "2.3.3",
      "name": "debug",
      "isUpgradable": true,
      "isPatchable": true,
      "isPinnable": false
    },
    {
      "id": "npm:debug:20170905",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Cristian-Alexandru Staicu"
      ],
      "semver": {
        "vulnerable": [
          ">=1.0.0 <2.6.9",
          ">=3.0.0 <3.1.0"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "2.6.9",
        "3.1.0"
      ],
      "patches": [
        {
          "id": "patch:npm:debug:20170905:0",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
          ],
          "version": ">= 3.0.0 <=3.0.1",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.872397Z"
        },
        {
          "id": "patch:npm:debug:20170905:1",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.5.1 <2.6.9",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.873422Z"
        },
        {
          "id": "patch:npm:debug:20170905:2",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.4.0 <2.5.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.874399Z"
        },
        {
          "id": "patch:npm:debug:20170905:3",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.0.0 <2.4.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.875363Z"
        }
      ],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">= 2.5.0 <2.6.9",
            ">=3.0.0 <3.1.0"
          ],
          "functionId": {
            "filePath": "src/node.js",
            "className": null,
            "functionName": "exports.formatters.o"
          }
        },
        {
          "version": [
            ">=1.0.0 <2.5.0"
          ],
          "functionId": {
            "filePath": "node.js",
            "className": null,
            "functionName": "exports.formatters.o"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "debug",
      "references": [
        {
          "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/visionmedia/debug/issues/501",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/visionmedia/debug/pull/504",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
          "title": "GitHub Release Notes 2.6.9"
        },
        {
          "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
          "title": "GitHub Release Notes 3.1.0"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-01-03T16:21:42.477572Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-03-26T15:00:55.919669Z"
        }
      ],
      "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0 or higher.\n## References\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
      "epssDetails": {
        "percentile": "0.59547",
        "probability": "0.00225",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2017-16137"
        ],
        "CWE": [
          "CWE-400"
        ],
        "NSP": [
          "534"
        ],
        "GHSA": [
          "GHSA-gxpj-cx7g-858c"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-DEBUG-10762"
        ]
      },
      "packageName": "debug",
      "proprietary": false,
      "creationTime": "2017-09-13T07:55:05.106000Z",
      "functions_new": [
        {
          "version": [
            ">= 2.5.0 <2.6.9",
            ">=3.0.0 <3.1.0"
          ],
          "functionId": {
            "filePath": "src/node.js",
            "functionName": "exports.formatters.o"
          }
        },
        {
          "version": [
            ">=1.0.0 <2.5.0"
          ],
          "functionId": {
            "filePath": "node.js",
            "functionName": "exports.formatters.o"
          }
        }
      ],
      "alternativeIds": [
        "SNYK-JS-DEBUG-10762"
      ],
      "disclosureTime": "2017-09-05T21:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2017-09-26T03:55:05Z",
      "modificationTime": "2023-03-26T15:00:55.919669Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "packagePopularityRank": 99,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "engine.io@1.8.5",
        "debug@2.3.3"
      ],
      "upgradePath": [
        false,
        "socket.io@2.0.0",
        "engine.io@3.1.0",
        "debug@2.6.9"
      ],
      "version": "2.3.3",
      "name": "debug",
      "isUpgradable": true,
      "isPatchable": true,
      "isPinnable": false
    },
    {
      "id": "npm:debug:20170905",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Cristian-Alexandru Staicu"
      ],
      "semver": {
        "vulnerable": [
          ">=1.0.0 <2.6.9",
          ">=3.0.0 <3.1.0"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "2.6.9",
        "3.1.0"
      ],
      "patches": [
        {
          "id": "patch:npm:debug:20170905:0",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
          ],
          "version": ">= 3.0.0 <=3.0.1",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.872397Z"
        },
        {
          "id": "patch:npm:debug:20170905:1",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.5.1 <2.6.9",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.873422Z"
        },
        {
          "id": "patch:npm:debug:20170905:2",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.4.0 <2.5.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.874399Z"
        },
        {
          "id": "patch:npm:debug:20170905:3",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.0.0 <2.4.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.875363Z"
        }
      ],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">= 2.5.0 <2.6.9",
            ">=3.0.0 <3.1.0"
          ],
          "functionId": {
            "filePath": "src/node.js",
            "className": null,
            "functionName": "exports.formatters.o"
          }
        },
        {
          "version": [
            ">=1.0.0 <2.5.0"
          ],
          "functionId": {
            "filePath": "node.js",
            "className": null,
            "functionName": "exports.formatters.o"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "debug",
      "references": [
        {
          "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/visionmedia/debug/issues/501",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/visionmedia/debug/pull/504",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
          "title": "GitHub Release Notes 2.6.9"
        },
        {
          "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
          "title": "GitHub Release Notes 3.1.0"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-01-03T16:21:42.477572Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-03-26T15:00:55.919669Z"
        }
      ],
      "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0 or higher.\n## References\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
      "epssDetails": {
        "percentile": "0.59547",
        "probability": "0.00225",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2017-16137"
        ],
        "CWE": [
          "CWE-400"
        ],
        "NSP": [
          "534"
        ],
        "GHSA": [
          "GHSA-gxpj-cx7g-858c"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-DEBUG-10762"
        ]
      },
      "packageName": "debug",
      "proprietary": false,
      "creationTime": "2017-09-13T07:55:05.106000Z",
      "functions_new": [
        {
          "version": [
            ">= 2.5.0 <2.6.9",
            ">=3.0.0 <3.1.0"
          ],
          "functionId": {
            "filePath": "src/node.js",
            "functionName": "exports.formatters.o"
          }
        },
        {
          "version": [
            ">=1.0.0 <2.5.0"
          ],
          "functionId": {
            "filePath": "node.js",
            "functionName": "exports.formatters.o"
          }
        }
      ],
      "alternativeIds": [
        "SNYK-JS-DEBUG-10762"
      ],
      "disclosureTime": "2017-09-05T21:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2017-09-26T03:55:05Z",
      "modificationTime": "2023-03-26T15:00:55.919669Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "packagePopularityRank": 99,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "socket.io-adapter@0.5.0",
        "debug@2.3.3"
      ],
      "upgradePath": [
        false,
        "socket.io@2.0.0",
        "socket.io-adapter@1.1.1"
      ],
      "version": "2.3.3",
      "name": "debug",
      "isUpgradable": true,
      "isPatchable": true,
      "isPinnable": false
    },
    {
      "id": "npm:debug:20170905",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Cristian-Alexandru Staicu"
      ],
      "semver": {
        "vulnerable": [
          ">=1.0.0 <2.6.9",
          ">=3.0.0 <3.1.0"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "2.6.9",
        "3.1.0"
      ],
      "patches": [
        {
          "id": "patch:npm:debug:20170905:0",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
          ],
          "version": ">= 3.0.0 <=3.0.1",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.872397Z"
        },
        {
          "id": "patch:npm:debug:20170905:1",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.5.1 <2.6.9",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.873422Z"
        },
        {
          "id": "patch:npm:debug:20170905:2",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.4.0 <2.5.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.874399Z"
        },
        {
          "id": "patch:npm:debug:20170905:3",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.0.0 <2.4.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.875363Z"
        }
      ],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">= 2.5.0 <2.6.9",
            ">=3.0.0 <3.1.0"
          ],
          "functionId": {
            "filePath": "src/node.js",
            "className": null,
            "functionName": "exports.formatters.o"
          }
        },
        {
          "version": [
            ">=1.0.0 <2.5.0"
          ],
          "functionId": {
            "filePath": "node.js",
            "className": null,
            "functionName": "exports.formatters.o"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "debug",
      "references": [
        {
          "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/visionmedia/debug/issues/501",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/visionmedia/debug/pull/504",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
          "title": "GitHub Release Notes 2.6.9"
        },
        {
          "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
          "title": "GitHub Release Notes 3.1.0"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-01-03T16:21:42.477572Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-03-26T15:00:55.919669Z"
        }
      ],
      "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0 or higher.\n## References\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
      "epssDetails": {
        "percentile": "0.59547",
        "probability": "0.00225",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2017-16137"
        ],
        "CWE": [
          "CWE-400"
        ],
        "NSP": [
          "534"
        ],
        "GHSA": [
          "GHSA-gxpj-cx7g-858c"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-DEBUG-10762"
        ]
      },
      "packageName": "debug",
      "proprietary": false,
      "creationTime": "2017-09-13T07:55:05.106000Z",
      "functions_new": [
        {
          "version": [
            ">= 2.5.0 <2.6.9",
            ">=3.0.0 <3.1.0"
          ],
          "functionId": {
            "filePath": "src/node.js",
            "functionName": "exports.formatters.o"
          }
        },
        {
          "version": [
            ">=1.0.0 <2.5.0"
          ],
          "functionId": {
            "filePath": "node.js",
            "functionName": "exports.formatters.o"
          }
        }
      ],
      "alternativeIds": [
        "SNYK-JS-DEBUG-10762"
      ],
      "disclosureTime": "2017-09-05T21:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2017-09-26T03:55:05Z",
      "modificationTime": "2023-03-26T15:00:55.919669Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "packagePopularityRank": 99,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "socket.io-client@1.7.4",
        "debug@2.3.3"
      ],
      "upgradePath": [
        false,
        "socket.io@2.0.2",
        "socket.io-client@2.0.2",
        "debug@2.6.9"
      ],
      "version": "2.3.3",
      "name": "debug",
      "isUpgradable": true,
      "isPatchable": true,
      "isPinnable": false
    },
    {
      "id": "npm:debug:20170905",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Cristian-Alexandru Staicu"
      ],
      "semver": {
        "vulnerable": [
          ">=1.0.0 <2.6.9",
          ">=3.0.0 <3.1.0"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "2.6.9",
        "3.1.0"
      ],
      "patches": [
        {
          "id": "patch:npm:debug:20170905:0",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
          ],
          "version": ">= 3.0.0 <=3.0.1",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.872397Z"
        },
        {
          "id": "patch:npm:debug:20170905:1",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.5.1 <2.6.9",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.873422Z"
        },
        {
          "id": "patch:npm:debug:20170905:2",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.4.0 <2.5.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.874399Z"
        },
        {
          "id": "patch:npm:debug:20170905:3",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.0.0 <2.4.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.875363Z"
        }
      ],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">= 2.5.0 <2.6.9",
            ">=3.0.0 <3.1.0"
          ],
          "functionId": {
            "filePath": "src/node.js",
            "className": null,
            "functionName": "exports.formatters.o"
          }
        },
        {
          "version": [
            ">=1.0.0 <2.5.0"
          ],
          "functionId": {
            "filePath": "node.js",
            "className": null,
            "functionName": "exports.formatters.o"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "debug",
      "references": [
        {
          "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/visionmedia/debug/issues/501",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/visionmedia/debug/pull/504",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
          "title": "GitHub Release Notes 2.6.9"
        },
        {
          "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
          "title": "GitHub Release Notes 3.1.0"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-01-03T16:21:42.477572Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-03-26T15:00:55.919669Z"
        }
      ],
      "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0 or higher.\n## References\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
      "epssDetails": {
        "percentile": "0.59547",
        "probability": "0.00225",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2017-16137"
        ],
        "CWE": [
          "CWE-400"
        ],
        "NSP": [
          "534"
        ],
        "GHSA": [
          "GHSA-gxpj-cx7g-858c"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-DEBUG-10762"
        ]
      },
      "packageName": "debug",
      "proprietary": false,
      "creationTime": "2017-09-13T07:55:05.106000Z",
      "functions_new": [
        {
          "version": [
            ">= 2.5.0 <2.6.9",
            ">=3.0.0 <3.1.0"
          ],
          "functionId": {
            "filePath": "src/node.js",
            "functionName": "exports.formatters.o"
          }
        },
        {
          "version": [
            ">=1.0.0 <2.5.0"
          ],
          "functionId": {
            "filePath": "node.js",
            "functionName": "exports.formatters.o"
          }
        }
      ],
      "alternativeIds": [
        "SNYK-JS-DEBUG-10762"
      ],
      "disclosureTime": "2017-09-05T21:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2017-09-26T03:55:05Z",
      "modificationTime": "2023-03-26T15:00:55.919669Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "packagePopularityRank": 99,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "socket.io-client@1.7.4",
        "engine.io-client@1.8.6",
        "debug@2.3.3"
      ],
      "upgradePath": [
        false,
        "socket.io@2.0.0",
        "socket.io-client@2.0.0",
        "engine.io-client@3.1.1",
        "debug@2.6.9"
      ],
      "version": "2.3.3",
      "name": "debug",
      "isUpgradable": true,
      "isPatchable": true,
      "isPinnable": false
    },
    {
      "id": "npm:debug:20170905",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Cristian-Alexandru Staicu"
      ],
      "semver": {
        "vulnerable": [
          ">=1.0.0 <2.6.9",
          ">=3.0.0 <3.1.0"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "2.6.9",
        "3.1.0"
      ],
      "patches": [
        {
          "id": "patch:npm:debug:20170905:0",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
          ],
          "version": ">= 3.0.0 <=3.0.1",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.872397Z"
        },
        {
          "id": "patch:npm:debug:20170905:1",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.5.1 <2.6.9",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.873422Z"
        },
        {
          "id": "patch:npm:debug:20170905:2",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.4.0 <2.5.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.874399Z"
        },
        {
          "id": "patch:npm:debug:20170905:3",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.0.0 <2.4.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.875363Z"
        }
      ],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">= 2.5.0 <2.6.9",
            ">=3.0.0 <3.1.0"
          ],
          "functionId": {
            "filePath": "src/node.js",
            "className": null,
            "functionName": "exports.formatters.o"
          }
        },
        {
          "version": [
            ">=1.0.0 <2.5.0"
          ],
          "functionId": {
            "filePath": "node.js",
            "className": null,
            "functionName": "exports.formatters.o"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "debug",
      "references": [
        {
          "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/visionmedia/debug/issues/501",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/visionmedia/debug/pull/504",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
          "title": "GitHub Release Notes 2.6.9"
        },
        {
          "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
          "title": "GitHub Release Notes 3.1.0"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-01-03T16:21:42.477572Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-03-26T15:00:55.919669Z"
        }
      ],
      "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0 or higher.\n## References\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
      "epssDetails": {
        "percentile": "0.59547",
        "probability": "0.00225",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2017-16137"
        ],
        "CWE": [
          "CWE-400"
        ],
        "NSP": [
          "534"
        ],
        "GHSA": [
          "GHSA-gxpj-cx7g-858c"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-DEBUG-10762"
        ]
      },
      "packageName": "debug",
      "proprietary": false,
      "creationTime": "2017-09-13T07:55:05.106000Z",
      "functions_new": [
        {
          "version": [
            ">= 2.5.0 <2.6.9",
            ">=3.0.0 <3.1.0"
          ],
          "functionId": {
            "filePath": "src/node.js",
            "functionName": "exports.formatters.o"
          }
        },
        {
          "version": [
            ">=1.0.0 <2.5.0"
          ],
          "functionId": {
            "filePath": "node.js",
            "functionName": "exports.formatters.o"
          }
        }
      ],
      "alternativeIds": [
        "SNYK-JS-DEBUG-10762"
      ],
      "disclosureTime": "2017-09-05T21:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2017-09-26T03:55:05Z",
      "modificationTime": "2023-03-26T15:00:55.919669Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "packagePopularityRank": 99,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "socket.io-parser@2.3.1",
        "debug@2.2.0"
      ],
      "upgradePath": [
        false,
        "socket.io@2.0.0",
        "socket.io-parser@3.1.1",
        "debug@2.6.9"
      ],
      "version": "2.2.0",
      "name": "debug",
      "isUpgradable": true,
      "isPatchable": true,
      "isPinnable": false
    },
    {
      "id": "npm:debug:20170905",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Cristian-Alexandru Staicu"
      ],
      "semver": {
        "vulnerable": [
          ">=1.0.0 <2.6.9",
          ">=3.0.0 <3.1.0"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "2.6.9",
        "3.1.0"
      ],
      "patches": [
        {
          "id": "patch:npm:debug:20170905:0",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
          ],
          "version": ">= 3.0.0 <=3.0.1",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.872397Z"
        },
        {
          "id": "patch:npm:debug:20170905:1",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.5.1 <2.6.9",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.873422Z"
        },
        {
          "id": "patch:npm:debug:20170905:2",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.4.0 <2.5.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.874399Z"
        },
        {
          "id": "patch:npm:debug:20170905:3",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.0.0 <2.4.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.875363Z"
        }
      ],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">= 2.5.0 <2.6.9",
            ">=3.0.0 <3.1.0"
          ],
          "functionId": {
            "filePath": "src/node.js",
            "className": null,
            "functionName": "exports.formatters.o"
          }
        },
        {
          "version": [
            ">=1.0.0 <2.5.0"
          ],
          "functionId": {
            "filePath": "node.js",
            "className": null,
            "functionName": "exports.formatters.o"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "debug",
      "references": [
        {
          "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/visionmedia/debug/issues/501",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/visionmedia/debug/pull/504",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
          "title": "GitHub Release Notes 2.6.9"
        },
        {
          "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
          "title": "GitHub Release Notes 3.1.0"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-01-03T16:21:42.477572Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-03-26T15:00:55.919669Z"
        }
      ],
      "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0 or higher.\n## References\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
      "epssDetails": {
        "percentile": "0.59547",
        "probability": "0.00225",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2017-16137"
        ],
        "CWE": [
          "CWE-400"
        ],
        "NSP": [
          "534"
        ],
        "GHSA": [
          "GHSA-gxpj-cx7g-858c"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-DEBUG-10762"
        ]
      },
      "packageName": "debug",
      "proprietary": false,
      "creationTime": "2017-09-13T07:55:05.106000Z",
      "functions_new": [
        {
          "version": [
            ">= 2.5.0 <2.6.9",
            ">=3.0.0 <3.1.0"
          ],
          "functionId": {
            "filePath": "src/node.js",
            "functionName": "exports.formatters.o"
          }
        },
        {
          "version": [
            ">=1.0.0 <2.5.0"
          ],
          "functionId": {
            "filePath": "node.js",
            "functionName": "exports.formatters.o"
          }
        }
      ],
      "alternativeIds": [
        "SNYK-JS-DEBUG-10762"
      ],
      "disclosureTime": "2017-09-05T21:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2017-09-26T03:55:05Z",
      "modificationTime": "2023-03-26T15:00:55.919669Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "packagePopularityRank": 99,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "socket.io-adapter@0.5.0",
        "socket.io-parser@2.3.1",
        "debug@2.2.0"
      ],
      "upgradePath": [
        false,
        false,
        "socket.io-adapter@1.0.0"
      ],
      "version": "2.2.0",
      "name": "debug",
      "isUpgradable": false,
      "isPatchable": true,
      "isPinnable": false
    },
    {
      "id": "npm:debug:20170905",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Cristian-Alexandru Staicu"
      ],
      "semver": {
        "vulnerable": [
          ">=1.0.0 <2.6.9",
          ">=3.0.0 <3.1.0"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "2.6.9",
        "3.1.0"
      ],
      "patches": [
        {
          "id": "patch:npm:debug:20170905:0",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
          ],
          "version": ">= 3.0.0 <=3.0.1",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.872397Z"
        },
        {
          "id": "patch:npm:debug:20170905:1",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.5.1 <2.6.9",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.873422Z"
        },
        {
          "id": "patch:npm:debug:20170905:2",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.4.0 <2.5.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.874399Z"
        },
        {
          "id": "patch:npm:debug:20170905:3",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
          ],
          "version": ">=2.0.0 <2.4.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.875363Z"
        }
      ],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">= 2.5.0 <2.6.9",
            ">=3.0.0 <3.1.0"
          ],
          "functionId": {
            "filePath": "src/node.js",
            "className": null,
            "functionName": "exports.formatters.o"
          }
        },
        {
          "version": [
            ">=1.0.0 <2.5.0"
          ],
          "functionId": {
            "filePath": "node.js",
            "className": null,
            "functionName": "exports.formatters.o"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "debug",
      "references": [
        {
          "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/visionmedia/debug/issues/501",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/visionmedia/debug/pull/504",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
          "title": "GitHub Release Notes 2.6.9"
        },
        {
          "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
          "title": "GitHub Release Notes 3.1.0"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-01-03T16:21:42.477572Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-03-26T15:00:55.919669Z"
        }
      ],
      "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0 or higher.\n## References\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
      "epssDetails": {
        "percentile": "0.59547",
        "probability": "0.00225",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2017-16137"
        ],
        "CWE": [
          "CWE-400"
        ],
        "NSP": [
          "534"
        ],
        "GHSA": [
          "GHSA-gxpj-cx7g-858c"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-DEBUG-10762"
        ]
      },
      "packageName": "debug",
      "proprietary": false,
      "creationTime": "2017-09-13T07:55:05.106000Z",
      "functions_new": [
        {
          "version": [
            ">= 2.5.0 <2.6.9",
            ">=3.0.0 <3.1.0"
          ],
          "functionId": {
            "filePath": "src/node.js",
            "functionName": "exports.formatters.o"
          }
        },
        {
          "version": [
            ">=1.0.0 <2.5.0"
          ],
          "functionId": {
            "filePath": "node.js",
            "functionName": "exports.formatters.o"
          }
        }
      ],
      "alternativeIds": [
        "SNYK-JS-DEBUG-10762"
      ],
      "disclosureTime": "2017-09-05T21:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2017-09-26T03:55:05Z",
      "modificationTime": "2023-03-26T15:00:55.919669Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "packagePopularityRank": 99,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "socket.io-client@1.7.4",
        "socket.io-parser@2.3.1",
        "debug@2.2.0"
      ],
      "upgradePath": [
        false,
        "socket.io@2.0.0",
        "socket.io-client@2.0.0",
        "socket.io-parser@3.1.1",
        "debug@2.6.9"
      ],
      "version": "2.2.0",
      "name": "debug",
      "isUpgradable": true,
      "isPatchable": true,
      "isPinnable": false
    },
    {
      "id": "npm:ms:20170412",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Snyk Security Research Team"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.0"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.0.0"
      ],
      "patches": [
        {
          "id": "patch:npm:ms:20170412:0",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_100.patch"
          ],
          "version": "=1.0.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.863964Z"
        },
        {
          "id": "patch:npm:ms:20170412:1",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_072-073.patch"
          ],
          "version": "=0.7.2 || =0.7.3",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.865081Z"
        },
        {
          "id": "patch:npm:ms:20170412:2",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_071.patch"
          ],
          "version": "=0.7.1",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.866206Z"
        }
      ],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=0.7.3 <2.0.0"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "parse"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ms",
      "references": [
        {
          "url": "https://github.com/zeit/ms/pull/89/commits/305f2ddcd4eff7cc7c518aca6bb2b2d2daad8fef",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/zeit/ms/pull/89",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-01-12T01:10:37.311435Z"
        }
      ],
      "description": "## Overview\r\n[`ms`](https://www.npmjs.com/package/ms) is a tiny millisecond conversion utility.\r\n\r\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to an incomplete fix for previously reported vulnerability [npm:ms:20151024](https://snyk.io/vuln/npm:ms:20151024). The fix limited the length of accepted input string to 10,000 characters, and turned to be insufficient making it possible to block the event loop for 0.3 seconds (on a typical laptop) with a specially crafted string passed to `ms()` function.\r\n\r\n*Proof of concept*\r\n```js\r\nms = require('ms');\r\nms('1'.repeat(9998) + 'Q') // Takes about ~0.3s\r\n```\r\n\r\n**Note:** Snyk's patch for this vulnerability limits input length to 100 characters. This new limit was deemed to be a breaking change by the author.\r\nBased on user feedback, we believe the risk of breakage is _very_ low, while the value to your security is much greater, and therefore opted to still capture this change in a patch for earlier versions as well.  Whenever patching security issues, we always suggest to run tests on your code to validate that nothing has been broken.\r\n\r\nFor more information on `Regular Expression Denial of Service (ReDoS)` attacks, go to our [blog](https://snyk.io/blog/redos-and-catastrophic-backtracking/).\r\n\r\n## Disclosure Timeline\r\n- Feb 9th, 2017 - Reported the issue to package owner.\r\n- Feb 11th, 2017 - Issue acknowledged by package owner.\r\n- April 12th, 2017 - Fix PR opened by Snyk Security Team.\r\n- May 15th, 2017 - Vulnerability published.\r\n- May 16th, 2017 - Issue fixed and version `2.0.0` released.\r\n- May 21th, 2017 - Patches released for versions `>=0.7.1, <=1.0.0`.\r\n\r\n## Details\r\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\r\n\r\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\r\n\r\nLet’s take the following regular expression as an example:\r\n```js\r\nregex = /A(B|C+)+D/\r\n```\r\n\r\nThis regular expression accomplishes the following:\r\n- `A` The string must start with the letter 'A'\r\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\r\n- `D` Finally, we ensure this section of the string ends with a 'D'\r\n\r\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\r\n\r\nIt most cases, it doesn't take very long for a regex engine to find a match:\r\n\r\n```bash\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\r\n0.04s user 0.01s system 95% cpu 0.052 total\r\n\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\r\n1.79s user 0.02s system 99% cpu 1.812 total\r\n```\r\n\r\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\r\n\r\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\r\n\r\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\r\n1. CCC\r\n2. CC+C\r\n3. C+CC\r\n4. C+C+C.\r\n\r\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\r\n\r\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\r\n\r\n| String | Number of C's | Number of steps |\r\n| -------|-------------:| -----:|\r\n| ACCCX | 3 | 38\r\n| ACCCCX | 4 | 71\r\n| ACCCCCX | 5 | 136\r\n| ACCCCCCCCCCCCCCX | 14 | 65,553\r\n\r\n\r\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\r\n\r\n\r\n## Remediation\r\nUpgrade `ms` to version 2.0.0 or higher.\r\n\r\n## References\r\n- [GitHub PR](https://github.com/zeit/ms/pull/89)\r\n- [GitHub Commit](https://github.com/zeit/ms/pull/89/commits/305f2ddcd4eff7cc7c518aca6bb2b2d2daad8fef)",
      "epssDetails": {
        "percentile": "0.18110",
        "probability": "0.00052",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2017-20162"
        ],
        "CWE": [
          "CWE-400"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-MS-10509"
        ]
      },
      "packageName": "ms",
      "proprietary": true,
      "creationTime": "2017-04-12T10:02:45.497000Z",
      "functions_new": [
        {
          "version": [
            ">=0.7.3 <2.0.0"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "parse"
          }
        }
      ],
      "alternativeIds": [
        "SNYK-JS-MS-10509"
      ],
      "disclosureTime": "2017-04-11T21:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2017-05-15T06:02:45Z",
      "modificationTime": "2023-01-12T01:10:37.311435Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "packagePopularityRank": 100,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "debug@2.3.3",
        "ms@0.7.2"
      ],
      "upgradePath": [
        false,
        "socket.io@2.0.0",
        "debug@2.6.7",
        "ms@2.0.0"
      ],
      "version": "0.7.2",
      "name": "ms",
      "isUpgradable": true,
      "isPatchable": true,
      "isPinnable": false
    },
    {
      "id": "npm:ms:20170412",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Snyk Security Research Team"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.0"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.0.0"
      ],
      "patches": [
        {
          "id": "patch:npm:ms:20170412:0",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_100.patch"
          ],
          "version": "=1.0.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.863964Z"
        },
        {
          "id": "patch:npm:ms:20170412:1",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_072-073.patch"
          ],
          "version": "=0.7.2 || =0.7.3",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.865081Z"
        },
        {
          "id": "patch:npm:ms:20170412:2",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_071.patch"
          ],
          "version": "=0.7.1",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.866206Z"
        }
      ],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=0.7.3 <2.0.0"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "parse"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ms",
      "references": [
        {
          "url": "https://github.com/zeit/ms/pull/89/commits/305f2ddcd4eff7cc7c518aca6bb2b2d2daad8fef",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/zeit/ms/pull/89",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-01-12T01:10:37.311435Z"
        }
      ],
      "description": "## Overview\r\n[`ms`](https://www.npmjs.com/package/ms) is a tiny millisecond conversion utility.\r\n\r\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to an incomplete fix for previously reported vulnerability [npm:ms:20151024](https://snyk.io/vuln/npm:ms:20151024). The fix limited the length of accepted input string to 10,000 characters, and turned to be insufficient making it possible to block the event loop for 0.3 seconds (on a typical laptop) with a specially crafted string passed to `ms()` function.\r\n\r\n*Proof of concept*\r\n```js\r\nms = require('ms');\r\nms('1'.repeat(9998) + 'Q') // Takes about ~0.3s\r\n```\r\n\r\n**Note:** Snyk's patch for this vulnerability limits input length to 100 characters. This new limit was deemed to be a breaking change by the author.\r\nBased on user feedback, we believe the risk of breakage is _very_ low, while the value to your security is much greater, and therefore opted to still capture this change in a patch for earlier versions as well.  Whenever patching security issues, we always suggest to run tests on your code to validate that nothing has been broken.\r\n\r\nFor more information on `Regular Expression Denial of Service (ReDoS)` attacks, go to our [blog](https://snyk.io/blog/redos-and-catastrophic-backtracking/).\r\n\r\n## Disclosure Timeline\r\n- Feb 9th, 2017 - Reported the issue to package owner.\r\n- Feb 11th, 2017 - Issue acknowledged by package owner.\r\n- April 12th, 2017 - Fix PR opened by Snyk Security Team.\r\n- May 15th, 2017 - Vulnerability published.\r\n- May 16th, 2017 - Issue fixed and version `2.0.0` released.\r\n- May 21th, 2017 - Patches released for versions `>=0.7.1, <=1.0.0`.\r\n\r\n## Details\r\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\r\n\r\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\r\n\r\nLet’s take the following regular expression as an example:\r\n```js\r\nregex = /A(B|C+)+D/\r\n```\r\n\r\nThis regular expression accomplishes the following:\r\n- `A` The string must start with the letter 'A'\r\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\r\n- `D` Finally, we ensure this section of the string ends with a 'D'\r\n\r\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\r\n\r\nIt most cases, it doesn't take very long for a regex engine to find a match:\r\n\r\n```bash\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\r\n0.04s user 0.01s system 95% cpu 0.052 total\r\n\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\r\n1.79s user 0.02s system 99% cpu 1.812 total\r\n```\r\n\r\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\r\n\r\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\r\n\r\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\r\n1. CCC\r\n2. CC+C\r\n3. C+CC\r\n4. C+C+C.\r\n\r\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\r\n\r\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\r\n\r\n| String | Number of C's | Number of steps |\r\n| -------|-------------:| -----:|\r\n| ACCCX | 3 | 38\r\n| ACCCCX | 4 | 71\r\n| ACCCCCX | 5 | 136\r\n| ACCCCCCCCCCCCCCX | 14 | 65,553\r\n\r\n\r\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\r\n\r\n\r\n## Remediation\r\nUpgrade `ms` to version 2.0.0 or higher.\r\n\r\n## References\r\n- [GitHub PR](https://github.com/zeit/ms/pull/89)\r\n- [GitHub Commit](https://github.com/zeit/ms/pull/89/commits/305f2ddcd4eff7cc7c518aca6bb2b2d2daad8fef)",
      "epssDetails": {
        "percentile": "0.18110",
        "probability": "0.00052",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2017-20162"
        ],
        "CWE": [
          "CWE-400"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-MS-10509"
        ]
      },
      "packageName": "ms",
      "proprietary": true,
      "creationTime": "2017-04-12T10:02:45.497000Z",
      "functions_new": [
        {
          "version": [
            ">=0.7.3 <2.0.0"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "parse"
          }
        }
      ],
      "alternativeIds": [
        "SNYK-JS-MS-10509"
      ],
      "disclosureTime": "2017-04-11T21:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2017-05-15T06:02:45Z",
      "modificationTime": "2023-01-12T01:10:37.311435Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "packagePopularityRank": 100,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "engine.io@1.8.5",
        "debug@2.3.3",
        "ms@0.7.2"
      ],
      "upgradePath": [
        false,
        "socket.io@2.0.0",
        "engine.io@3.1.0",
        "debug@2.6.7",
        "ms@2.0.0"
      ],
      "version": "0.7.2",
      "name": "ms",
      "isUpgradable": true,
      "isPatchable": true,
      "isPinnable": false
    },
    {
      "id": "npm:ms:20170412",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Snyk Security Research Team"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.0"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.0.0"
      ],
      "patches": [
        {
          "id": "patch:npm:ms:20170412:0",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_100.patch"
          ],
          "version": "=1.0.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.863964Z"
        },
        {
          "id": "patch:npm:ms:20170412:1",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_072-073.patch"
          ],
          "version": "=0.7.2 || =0.7.3",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.865081Z"
        },
        {
          "id": "patch:npm:ms:20170412:2",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_071.patch"
          ],
          "version": "=0.7.1",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.866206Z"
        }
      ],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=0.7.3 <2.0.0"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "parse"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ms",
      "references": [
        {
          "url": "https://github.com/zeit/ms/pull/89/commits/305f2ddcd4eff7cc7c518aca6bb2b2d2daad8fef",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/zeit/ms/pull/89",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-01-12T01:10:37.311435Z"
        }
      ],
      "description": "## Overview\r\n[`ms`](https://www.npmjs.com/package/ms) is a tiny millisecond conversion utility.\r\n\r\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to an incomplete fix for previously reported vulnerability [npm:ms:20151024](https://snyk.io/vuln/npm:ms:20151024). The fix limited the length of accepted input string to 10,000 characters, and turned to be insufficient making it possible to block the event loop for 0.3 seconds (on a typical laptop) with a specially crafted string passed to `ms()` function.\r\n\r\n*Proof of concept*\r\n```js\r\nms = require('ms');\r\nms('1'.repeat(9998) + 'Q') // Takes about ~0.3s\r\n```\r\n\r\n**Note:** Snyk's patch for this vulnerability limits input length to 100 characters. This new limit was deemed to be a breaking change by the author.\r\nBased on user feedback, we believe the risk of breakage is _very_ low, while the value to your security is much greater, and therefore opted to still capture this change in a patch for earlier versions as well.  Whenever patching security issues, we always suggest to run tests on your code to validate that nothing has been broken.\r\n\r\nFor more information on `Regular Expression Denial of Service (ReDoS)` attacks, go to our [blog](https://snyk.io/blog/redos-and-catastrophic-backtracking/).\r\n\r\n## Disclosure Timeline\r\n- Feb 9th, 2017 - Reported the issue to package owner.\r\n- Feb 11th, 2017 - Issue acknowledged by package owner.\r\n- April 12th, 2017 - Fix PR opened by Snyk Security Team.\r\n- May 15th, 2017 - Vulnerability published.\r\n- May 16th, 2017 - Issue fixed and version `2.0.0` released.\r\n- May 21th, 2017 - Patches released for versions `>=0.7.1, <=1.0.0`.\r\n\r\n## Details\r\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\r\n\r\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\r\n\r\nLet’s take the following regular expression as an example:\r\n```js\r\nregex = /A(B|C+)+D/\r\n```\r\n\r\nThis regular expression accomplishes the following:\r\n- `A` The string must start with the letter 'A'\r\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\r\n- `D` Finally, we ensure this section of the string ends with a 'D'\r\n\r\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\r\n\r\nIt most cases, it doesn't take very long for a regex engine to find a match:\r\n\r\n```bash\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\r\n0.04s user 0.01s system 95% cpu 0.052 total\r\n\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\r\n1.79s user 0.02s system 99% cpu 1.812 total\r\n```\r\n\r\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\r\n\r\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\r\n\r\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\r\n1. CCC\r\n2. CC+C\r\n3. C+CC\r\n4. C+C+C.\r\n\r\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\r\n\r\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\r\n\r\n| String | Number of C's | Number of steps |\r\n| -------|-------------:| -----:|\r\n| ACCCX | 3 | 38\r\n| ACCCCX | 4 | 71\r\n| ACCCCCX | 5 | 136\r\n| ACCCCCCCCCCCCCCX | 14 | 65,553\r\n\r\n\r\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\r\n\r\n\r\n## Remediation\r\nUpgrade `ms` to version 2.0.0 or higher.\r\n\r\n## References\r\n- [GitHub PR](https://github.com/zeit/ms/pull/89)\r\n- [GitHub Commit](https://github.com/zeit/ms/pull/89/commits/305f2ddcd4eff7cc7c518aca6bb2b2d2daad8fef)",
      "epssDetails": {
        "percentile": "0.18110",
        "probability": "0.00052",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2017-20162"
        ],
        "CWE": [
          "CWE-400"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-MS-10509"
        ]
      },
      "packageName": "ms",
      "proprietary": true,
      "creationTime": "2017-04-12T10:02:45.497000Z",
      "functions_new": [
        {
          "version": [
            ">=0.7.3 <2.0.0"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "parse"
          }
        }
      ],
      "alternativeIds": [
        "SNYK-JS-MS-10509"
      ],
      "disclosureTime": "2017-04-11T21:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2017-05-15T06:02:45Z",
      "modificationTime": "2023-01-12T01:10:37.311435Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "packagePopularityRank": 100,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "socket.io-adapter@0.5.0",
        "debug@2.3.3",
        "ms@0.7.2"
      ],
      "upgradePath": [
        false,
        "socket.io@2.0.0",
        "socket.io-adapter@1.1.1"
      ],
      "version": "0.7.2",
      "name": "ms",
      "isUpgradable": true,
      "isPatchable": true,
      "isPinnable": false
    },
    {
      "id": "npm:ms:20170412",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Snyk Security Research Team"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.0"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.0.0"
      ],
      "patches": [
        {
          "id": "patch:npm:ms:20170412:0",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_100.patch"
          ],
          "version": "=1.0.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.863964Z"
        },
        {
          "id": "patch:npm:ms:20170412:1",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_072-073.patch"
          ],
          "version": "=0.7.2 || =0.7.3",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.865081Z"
        },
        {
          "id": "patch:npm:ms:20170412:2",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_071.patch"
          ],
          "version": "=0.7.1",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.866206Z"
        }
      ],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=0.7.3 <2.0.0"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "parse"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ms",
      "references": [
        {
          "url": "https://github.com/zeit/ms/pull/89/commits/305f2ddcd4eff7cc7c518aca6bb2b2d2daad8fef",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/zeit/ms/pull/89",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-01-12T01:10:37.311435Z"
        }
      ],
      "description": "## Overview\r\n[`ms`](https://www.npmjs.com/package/ms) is a tiny millisecond conversion utility.\r\n\r\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to an incomplete fix for previously reported vulnerability [npm:ms:20151024](https://snyk.io/vuln/npm:ms:20151024). The fix limited the length of accepted input string to 10,000 characters, and turned to be insufficient making it possible to block the event loop for 0.3 seconds (on a typical laptop) with a specially crafted string passed to `ms()` function.\r\n\r\n*Proof of concept*\r\n```js\r\nms = require('ms');\r\nms('1'.repeat(9998) + 'Q') // Takes about ~0.3s\r\n```\r\n\r\n**Note:** Snyk's patch for this vulnerability limits input length to 100 characters. This new limit was deemed to be a breaking change by the author.\r\nBased on user feedback, we believe the risk of breakage is _very_ low, while the value to your security is much greater, and therefore opted to still capture this change in a patch for earlier versions as well.  Whenever patching security issues, we always suggest to run tests on your code to validate that nothing has been broken.\r\n\r\nFor more information on `Regular Expression Denial of Service (ReDoS)` attacks, go to our [blog](https://snyk.io/blog/redos-and-catastrophic-backtracking/).\r\n\r\n## Disclosure Timeline\r\n- Feb 9th, 2017 - Reported the issue to package owner.\r\n- Feb 11th, 2017 - Issue acknowledged by package owner.\r\n- April 12th, 2017 - Fix PR opened by Snyk Security Team.\r\n- May 15th, 2017 - Vulnerability published.\r\n- May 16th, 2017 - Issue fixed and version `2.0.0` released.\r\n- May 21th, 2017 - Patches released for versions `>=0.7.1, <=1.0.0`.\r\n\r\n## Details\r\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\r\n\r\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\r\n\r\nLet’s take the following regular expression as an example:\r\n```js\r\nregex = /A(B|C+)+D/\r\n```\r\n\r\nThis regular expression accomplishes the following:\r\n- `A` The string must start with the letter 'A'\r\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\r\n- `D` Finally, we ensure this section of the string ends with a 'D'\r\n\r\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\r\n\r\nIt most cases, it doesn't take very long for a regex engine to find a match:\r\n\r\n```bash\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\r\n0.04s user 0.01s system 95% cpu 0.052 total\r\n\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\r\n1.79s user 0.02s system 99% cpu 1.812 total\r\n```\r\n\r\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\r\n\r\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\r\n\r\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\r\n1. CCC\r\n2. CC+C\r\n3. C+CC\r\n4. C+C+C.\r\n\r\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\r\n\r\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\r\n\r\n| String | Number of C's | Number of steps |\r\n| -------|-------------:| -----:|\r\n| ACCCX | 3 | 38\r\n| ACCCCX | 4 | 71\r\n| ACCCCCX | 5 | 136\r\n| ACCCCCCCCCCCCCCX | 14 | 65,553\r\n\r\n\r\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\r\n\r\n\r\n## Remediation\r\nUpgrade `ms` to version 2.0.0 or higher.\r\n\r\n## References\r\n- [GitHub PR](https://github.com/zeit/ms/pull/89)\r\n- [GitHub Commit](https://github.com/zeit/ms/pull/89/commits/305f2ddcd4eff7cc7c518aca6bb2b2d2daad8fef)",
      "epssDetails": {
        "percentile": "0.18110",
        "probability": "0.00052",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2017-20162"
        ],
        "CWE": [
          "CWE-400"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-MS-10509"
        ]
      },
      "packageName": "ms",
      "proprietary": true,
      "creationTime": "2017-04-12T10:02:45.497000Z",
      "functions_new": [
        {
          "version": [
            ">=0.7.3 <2.0.0"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "parse"
          }
        }
      ],
      "alternativeIds": [
        "SNYK-JS-MS-10509"
      ],
      "disclosureTime": "2017-04-11T21:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2017-05-15T06:02:45Z",
      "modificationTime": "2023-01-12T01:10:37.311435Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "packagePopularityRank": 100,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "socket.io-client@1.7.4",
        "debug@2.3.3",
        "ms@0.7.2"
      ],
      "upgradePath": [
        false,
        "socket.io@2.0.2",
        "socket.io-client@2.0.2",
        "debug@2.6.7",
        "ms@2.0.0"
      ],
      "version": "0.7.2",
      "name": "ms",
      "isUpgradable": true,
      "isPatchable": true,
      "isPinnable": false
    },
    {
      "id": "npm:ms:20170412",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Snyk Security Research Team"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.0"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.0.0"
      ],
      "patches": [
        {
          "id": "patch:npm:ms:20170412:0",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_100.patch"
          ],
          "version": "=1.0.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.863964Z"
        },
        {
          "id": "patch:npm:ms:20170412:1",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_072-073.patch"
          ],
          "version": "=0.7.2 || =0.7.3",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.865081Z"
        },
        {
          "id": "patch:npm:ms:20170412:2",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_071.patch"
          ],
          "version": "=0.7.1",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.866206Z"
        }
      ],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=0.7.3 <2.0.0"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "parse"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ms",
      "references": [
        {
          "url": "https://github.com/zeit/ms/pull/89/commits/305f2ddcd4eff7cc7c518aca6bb2b2d2daad8fef",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/zeit/ms/pull/89",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-01-12T01:10:37.311435Z"
        }
      ],
      "description": "## Overview\r\n[`ms`](https://www.npmjs.com/package/ms) is a tiny millisecond conversion utility.\r\n\r\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to an incomplete fix for previously reported vulnerability [npm:ms:20151024](https://snyk.io/vuln/npm:ms:20151024). The fix limited the length of accepted input string to 10,000 characters, and turned to be insufficient making it possible to block the event loop for 0.3 seconds (on a typical laptop) with a specially crafted string passed to `ms()` function.\r\n\r\n*Proof of concept*\r\n```js\r\nms = require('ms');\r\nms('1'.repeat(9998) + 'Q') // Takes about ~0.3s\r\n```\r\n\r\n**Note:** Snyk's patch for this vulnerability limits input length to 100 characters. This new limit was deemed to be a breaking change by the author.\r\nBased on user feedback, we believe the risk of breakage is _very_ low, while the value to your security is much greater, and therefore opted to still capture this change in a patch for earlier versions as well.  Whenever patching security issues, we always suggest to run tests on your code to validate that nothing has been broken.\r\n\r\nFor more information on `Regular Expression Denial of Service (ReDoS)` attacks, go to our [blog](https://snyk.io/blog/redos-and-catastrophic-backtracking/).\r\n\r\n## Disclosure Timeline\r\n- Feb 9th, 2017 - Reported the issue to package owner.\r\n- Feb 11th, 2017 - Issue acknowledged by package owner.\r\n- April 12th, 2017 - Fix PR opened by Snyk Security Team.\r\n- May 15th, 2017 - Vulnerability published.\r\n- May 16th, 2017 - Issue fixed and version `2.0.0` released.\r\n- May 21th, 2017 - Patches released for versions `>=0.7.1, <=1.0.0`.\r\n\r\n## Details\r\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\r\n\r\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\r\n\r\nLet’s take the following regular expression as an example:\r\n```js\r\nregex = /A(B|C+)+D/\r\n```\r\n\r\nThis regular expression accomplishes the following:\r\n- `A` The string must start with the letter 'A'\r\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\r\n- `D` Finally, we ensure this section of the string ends with a 'D'\r\n\r\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\r\n\r\nIt most cases, it doesn't take very long for a regex engine to find a match:\r\n\r\n```bash\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\r\n0.04s user 0.01s system 95% cpu 0.052 total\r\n\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\r\n1.79s user 0.02s system 99% cpu 1.812 total\r\n```\r\n\r\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\r\n\r\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\r\n\r\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\r\n1. CCC\r\n2. CC+C\r\n3. C+CC\r\n4. C+C+C.\r\n\r\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\r\n\r\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\r\n\r\n| String | Number of C's | Number of steps |\r\n| -------|-------------:| -----:|\r\n| ACCCX | 3 | 38\r\n| ACCCCX | 4 | 71\r\n| ACCCCCX | 5 | 136\r\n| ACCCCCCCCCCCCCCX | 14 | 65,553\r\n\r\n\r\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\r\n\r\n\r\n## Remediation\r\nUpgrade `ms` to version 2.0.0 or higher.\r\n\r\n## References\r\n- [GitHub PR](https://github.com/zeit/ms/pull/89)\r\n- [GitHub Commit](https://github.com/zeit/ms/pull/89/commits/305f2ddcd4eff7cc7c518aca6bb2b2d2daad8fef)",
      "epssDetails": {
        "percentile": "0.18110",
        "probability": "0.00052",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2017-20162"
        ],
        "CWE": [
          "CWE-400"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-MS-10509"
        ]
      },
      "packageName": "ms",
      "proprietary": true,
      "creationTime": "2017-04-12T10:02:45.497000Z",
      "functions_new": [
        {
          "version": [
            ">=0.7.3 <2.0.0"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "parse"
          }
        }
      ],
      "alternativeIds": [
        "SNYK-JS-MS-10509"
      ],
      "disclosureTime": "2017-04-11T21:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2017-05-15T06:02:45Z",
      "modificationTime": "2023-01-12T01:10:37.311435Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "packagePopularityRank": 100,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "socket.io-client@1.7.4",
        "engine.io-client@1.8.6",
        "debug@2.3.3",
        "ms@0.7.2"
      ],
      "upgradePath": [
        false,
        "socket.io@2.0.0",
        "socket.io-client@2.0.0",
        "engine.io-client@3.1.1",
        "debug@2.6.7",
        "ms@2.0.0"
      ],
      "version": "0.7.2",
      "name": "ms",
      "isUpgradable": true,
      "isPatchable": true,
      "isPinnable": false
    },
    {
      "id": "npm:ms:20170412",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Snyk Security Research Team"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.0"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.0.0"
      ],
      "patches": [
        {
          "id": "patch:npm:ms:20170412:0",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_100.patch"
          ],
          "version": "=1.0.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.863964Z"
        },
        {
          "id": "patch:npm:ms:20170412:1",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_072-073.patch"
          ],
          "version": "=0.7.2 || =0.7.3",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.865081Z"
        },
        {
          "id": "patch:npm:ms:20170412:2",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_071.patch"
          ],
          "version": "=0.7.1",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.866206Z"
        }
      ],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=0.7.3 <2.0.0"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "parse"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ms",
      "references": [
        {
          "url": "https://github.com/zeit/ms/pull/89/commits/305f2ddcd4eff7cc7c518aca6bb2b2d2daad8fef",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/zeit/ms/pull/89",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-01-12T01:10:37.311435Z"
        }
      ],
      "description": "## Overview\r\n[`ms`](https://www.npmjs.com/package/ms) is a tiny millisecond conversion utility.\r\n\r\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to an incomplete fix for previously reported vulnerability [npm:ms:20151024](https://snyk.io/vuln/npm:ms:20151024). The fix limited the length of accepted input string to 10,000 characters, and turned to be insufficient making it possible to block the event loop for 0.3 seconds (on a typical laptop) with a specially crafted string passed to `ms()` function.\r\n\r\n*Proof of concept*\r\n```js\r\nms = require('ms');\r\nms('1'.repeat(9998) + 'Q') // Takes about ~0.3s\r\n```\r\n\r\n**Note:** Snyk's patch for this vulnerability limits input length to 100 characters. This new limit was deemed to be a breaking change by the author.\r\nBased on user feedback, we believe the risk of breakage is _very_ low, while the value to your security is much greater, and therefore opted to still capture this change in a patch for earlier versions as well.  Whenever patching security issues, we always suggest to run tests on your code to validate that nothing has been broken.\r\n\r\nFor more information on `Regular Expression Denial of Service (ReDoS)` attacks, go to our [blog](https://snyk.io/blog/redos-and-catastrophic-backtracking/).\r\n\r\n## Disclosure Timeline\r\n- Feb 9th, 2017 - Reported the issue to package owner.\r\n- Feb 11th, 2017 - Issue acknowledged by package owner.\r\n- April 12th, 2017 - Fix PR opened by Snyk Security Team.\r\n- May 15th, 2017 - Vulnerability published.\r\n- May 16th, 2017 - Issue fixed and version `2.0.0` released.\r\n- May 21th, 2017 - Patches released for versions `>=0.7.1, <=1.0.0`.\r\n\r\n## Details\r\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\r\n\r\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\r\n\r\nLet’s take the following regular expression as an example:\r\n```js\r\nregex = /A(B|C+)+D/\r\n```\r\n\r\nThis regular expression accomplishes the following:\r\n- `A` The string must start with the letter 'A'\r\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\r\n- `D` Finally, we ensure this section of the string ends with a 'D'\r\n\r\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\r\n\r\nIt most cases, it doesn't take very long for a regex engine to find a match:\r\n\r\n```bash\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\r\n0.04s user 0.01s system 95% cpu 0.052 total\r\n\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\r\n1.79s user 0.02s system 99% cpu 1.812 total\r\n```\r\n\r\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\r\n\r\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\r\n\r\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\r\n1. CCC\r\n2. CC+C\r\n3. C+CC\r\n4. C+C+C.\r\n\r\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\r\n\r\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\r\n\r\n| String | Number of C's | Number of steps |\r\n| -------|-------------:| -----:|\r\n| ACCCX | 3 | 38\r\n| ACCCCX | 4 | 71\r\n| ACCCCCX | 5 | 136\r\n| ACCCCCCCCCCCCCCX | 14 | 65,553\r\n\r\n\r\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\r\n\r\n\r\n## Remediation\r\nUpgrade `ms` to version 2.0.0 or higher.\r\n\r\n## References\r\n- [GitHub PR](https://github.com/zeit/ms/pull/89)\r\n- [GitHub Commit](https://github.com/zeit/ms/pull/89/commits/305f2ddcd4eff7cc7c518aca6bb2b2d2daad8fef)",
      "epssDetails": {
        "percentile": "0.18110",
        "probability": "0.00052",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2017-20162"
        ],
        "CWE": [
          "CWE-400"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-MS-10509"
        ]
      },
      "packageName": "ms",
      "proprietary": true,
      "creationTime": "2017-04-12T10:02:45.497000Z",
      "functions_new": [
        {
          "version": [
            ">=0.7.3 <2.0.0"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "parse"
          }
        }
      ],
      "alternativeIds": [
        "SNYK-JS-MS-10509"
      ],
      "disclosureTime": "2017-04-11T21:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2017-05-15T06:02:45Z",
      "modificationTime": "2023-01-12T01:10:37.311435Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "packagePopularityRank": 100,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "socket.io-parser@2.3.1",
        "debug@2.2.0",
        "ms@0.7.1"
      ],
      "upgradePath": [
        false,
        "socket.io@2.0.0",
        "socket.io-parser@3.1.1",
        "debug@2.6.7",
        "ms@2.0.0"
      ],
      "version": "0.7.1",
      "name": "ms",
      "isUpgradable": true,
      "isPatchable": true,
      "isPinnable": false
    },
    {
      "id": "npm:ms:20170412",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Snyk Security Research Team"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.0"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.0.0"
      ],
      "patches": [
        {
          "id": "patch:npm:ms:20170412:0",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_100.patch"
          ],
          "version": "=1.0.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.863964Z"
        },
        {
          "id": "patch:npm:ms:20170412:1",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_072-073.patch"
          ],
          "version": "=0.7.2 || =0.7.3",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.865081Z"
        },
        {
          "id": "patch:npm:ms:20170412:2",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_071.patch"
          ],
          "version": "=0.7.1",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.866206Z"
        }
      ],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=0.7.3 <2.0.0"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "parse"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ms",
      "references": [
        {
          "url": "https://github.com/zeit/ms/pull/89/commits/305f2ddcd4eff7cc7c518aca6bb2b2d2daad8fef",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/zeit/ms/pull/89",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-01-12T01:10:37.311435Z"
        }
      ],
      "description": "## Overview\r\n[`ms`](https://www.npmjs.com/package/ms) is a tiny millisecond conversion utility.\r\n\r\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to an incomplete fix for previously reported vulnerability [npm:ms:20151024](https://snyk.io/vuln/npm:ms:20151024). The fix limited the length of accepted input string to 10,000 characters, and turned to be insufficient making it possible to block the event loop for 0.3 seconds (on a typical laptop) with a specially crafted string passed to `ms()` function.\r\n\r\n*Proof of concept*\r\n```js\r\nms = require('ms');\r\nms('1'.repeat(9998) + 'Q') // Takes about ~0.3s\r\n```\r\n\r\n**Note:** Snyk's patch for this vulnerability limits input length to 100 characters. This new limit was deemed to be a breaking change by the author.\r\nBased on user feedback, we believe the risk of breakage is _very_ low, while the value to your security is much greater, and therefore opted to still capture this change in a patch for earlier versions as well.  Whenever patching security issues, we always suggest to run tests on your code to validate that nothing has been broken.\r\n\r\nFor more information on `Regular Expression Denial of Service (ReDoS)` attacks, go to our [blog](https://snyk.io/blog/redos-and-catastrophic-backtracking/).\r\n\r\n## Disclosure Timeline\r\n- Feb 9th, 2017 - Reported the issue to package owner.\r\n- Feb 11th, 2017 - Issue acknowledged by package owner.\r\n- April 12th, 2017 - Fix PR opened by Snyk Security Team.\r\n- May 15th, 2017 - Vulnerability published.\r\n- May 16th, 2017 - Issue fixed and version `2.0.0` released.\r\n- May 21th, 2017 - Patches released for versions `>=0.7.1, <=1.0.0`.\r\n\r\n## Details\r\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\r\n\r\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\r\n\r\nLet’s take the following regular expression as an example:\r\n```js\r\nregex = /A(B|C+)+D/\r\n```\r\n\r\nThis regular expression accomplishes the following:\r\n- `A` The string must start with the letter 'A'\r\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\r\n- `D` Finally, we ensure this section of the string ends with a 'D'\r\n\r\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\r\n\r\nIt most cases, it doesn't take very long for a regex engine to find a match:\r\n\r\n```bash\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\r\n0.04s user 0.01s system 95% cpu 0.052 total\r\n\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\r\n1.79s user 0.02s system 99% cpu 1.812 total\r\n```\r\n\r\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\r\n\r\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\r\n\r\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\r\n1. CCC\r\n2. CC+C\r\n3. C+CC\r\n4. C+C+C.\r\n\r\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\r\n\r\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\r\n\r\n| String | Number of C's | Number of steps |\r\n| -------|-------------:| -----:|\r\n| ACCCX | 3 | 38\r\n| ACCCCX | 4 | 71\r\n| ACCCCCX | 5 | 136\r\n| ACCCCCCCCCCCCCCX | 14 | 65,553\r\n\r\n\r\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\r\n\r\n\r\n## Remediation\r\nUpgrade `ms` to version 2.0.0 or higher.\r\n\r\n## References\r\n- [GitHub PR](https://github.com/zeit/ms/pull/89)\r\n- [GitHub Commit](https://github.com/zeit/ms/pull/89/commits/305f2ddcd4eff7cc7c518aca6bb2b2d2daad8fef)",
      "epssDetails": {
        "percentile": "0.18110",
        "probability": "0.00052",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2017-20162"
        ],
        "CWE": [
          "CWE-400"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-MS-10509"
        ]
      },
      "packageName": "ms",
      "proprietary": true,
      "creationTime": "2017-04-12T10:02:45.497000Z",
      "functions_new": [
        {
          "version": [
            ">=0.7.3 <2.0.0"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "parse"
          }
        }
      ],
      "alternativeIds": [
        "SNYK-JS-MS-10509"
      ],
      "disclosureTime": "2017-04-11T21:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2017-05-15T06:02:45Z",
      "modificationTime": "2023-01-12T01:10:37.311435Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "packagePopularityRank": 100,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "socket.io-adapter@0.5.0",
        "socket.io-parser@2.3.1",
        "debug@2.2.0",
        "ms@0.7.1"
      ],
      "upgradePath": [
        false,
        false,
        "socket.io-adapter@1.0.0"
      ],
      "version": "0.7.1",
      "name": "ms",
      "isUpgradable": false,
      "isPatchable": true,
      "isPinnable": false
    },
    {
      "id": "npm:ms:20170412",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Snyk Security Research Team"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.0"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.0.0"
      ],
      "patches": [
        {
          "id": "patch:npm:ms:20170412:0",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_100.patch"
          ],
          "version": "=1.0.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.863964Z"
        },
        {
          "id": "patch:npm:ms:20170412:1",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_072-073.patch"
          ],
          "version": "=0.7.2 || =0.7.3",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.865081Z"
        },
        {
          "id": "patch:npm:ms:20170412:2",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/ms/20170412/ms_071.patch"
          ],
          "version": "=0.7.1",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.866206Z"
        }
      ],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=0.7.3 <2.0.0"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "parse"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ms",
      "references": [
        {
          "url": "https://github.com/zeit/ms/pull/89/commits/305f2ddcd4eff7cc7c518aca6bb2b2d2daad8fef",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/zeit/ms/pull/89",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-01-12T01:10:37.311435Z"
        }
      ],
      "description": "## Overview\r\n[`ms`](https://www.npmjs.com/package/ms) is a tiny millisecond conversion utility.\r\n\r\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to an incomplete fix for previously reported vulnerability [npm:ms:20151024](https://snyk.io/vuln/npm:ms:20151024). The fix limited the length of accepted input string to 10,000 characters, and turned to be insufficient making it possible to block the event loop for 0.3 seconds (on a typical laptop) with a specially crafted string passed to `ms()` function.\r\n\r\n*Proof of concept*\r\n```js\r\nms = require('ms');\r\nms('1'.repeat(9998) + 'Q') // Takes about ~0.3s\r\n```\r\n\r\n**Note:** Snyk's patch for this vulnerability limits input length to 100 characters. This new limit was deemed to be a breaking change by the author.\r\nBased on user feedback, we believe the risk of breakage is _very_ low, while the value to your security is much greater, and therefore opted to still capture this change in a patch for earlier versions as well.  Whenever patching security issues, we always suggest to run tests on your code to validate that nothing has been broken.\r\n\r\nFor more information on `Regular Expression Denial of Service (ReDoS)` attacks, go to our [blog](https://snyk.io/blog/redos-and-catastrophic-backtracking/).\r\n\r\n## Disclosure Timeline\r\n- Feb 9th, 2017 - Reported the issue to package owner.\r\n- Feb 11th, 2017 - Issue acknowledged by package owner.\r\n- April 12th, 2017 - Fix PR opened by Snyk Security Team.\r\n- May 15th, 2017 - Vulnerability published.\r\n- May 16th, 2017 - Issue fixed and version `2.0.0` released.\r\n- May 21th, 2017 - Patches released for versions `>=0.7.1, <=1.0.0`.\r\n\r\n## Details\r\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\r\n\r\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\r\n\r\nLet’s take the following regular expression as an example:\r\n```js\r\nregex = /A(B|C+)+D/\r\n```\r\n\r\nThis regular expression accomplishes the following:\r\n- `A` The string must start with the letter 'A'\r\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\r\n- `D` Finally, we ensure this section of the string ends with a 'D'\r\n\r\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\r\n\r\nIt most cases, it doesn't take very long for a regex engine to find a match:\r\n\r\n```bash\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\r\n0.04s user 0.01s system 95% cpu 0.052 total\r\n\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\r\n1.79s user 0.02s system 99% cpu 1.812 total\r\n```\r\n\r\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\r\n\r\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\r\n\r\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\r\n1. CCC\r\n2. CC+C\r\n3. C+CC\r\n4. C+C+C.\r\n\r\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\r\n\r\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\r\n\r\n| String | Number of C's | Number of steps |\r\n| -------|-------------:| -----:|\r\n| ACCCX | 3 | 38\r\n| ACCCCX | 4 | 71\r\n| ACCCCCX | 5 | 136\r\n| ACCCCCCCCCCCCCCX | 14 | 65,553\r\n\r\n\r\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\r\n\r\n\r\n## Remediation\r\nUpgrade `ms` to version 2.0.0 or higher.\r\n\r\n## References\r\n- [GitHub PR](https://github.com/zeit/ms/pull/89)\r\n- [GitHub Commit](https://github.com/zeit/ms/pull/89/commits/305f2ddcd4eff7cc7c518aca6bb2b2d2daad8fef)",
      "epssDetails": {
        "percentile": "0.18110",
        "probability": "0.00052",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2017-20162"
        ],
        "CWE": [
          "CWE-400"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-MS-10509"
        ]
      },
      "packageName": "ms",
      "proprietary": true,
      "creationTime": "2017-04-12T10:02:45.497000Z",
      "functions_new": [
        {
          "version": [
            ">=0.7.3 <2.0.0"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "parse"
          }
        }
      ],
      "alternativeIds": [
        "SNYK-JS-MS-10509"
      ],
      "disclosureTime": "2017-04-11T21:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2017-05-15T06:02:45Z",
      "modificationTime": "2023-01-12T01:10:37.311435Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "packagePopularityRank": 100,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "socket.io-client@1.7.4",
        "socket.io-parser@2.3.1",
        "debug@2.2.0",
        "ms@0.7.1"
      ],
      "upgradePath": [
        false,
        "socket.io@2.0.0",
        "socket.io-client@2.0.0",
        "socket.io-parser@3.1.1",
        "debug@2.6.7",
        "ms@2.0.0"
      ],
      "version": "0.7.1",
      "name": "ms",
      "isUpgradable": true,
      "isPatchable": true,
      "isPinnable": false
    },
    {
      "id": "npm:parsejson:20170908",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "Cristian-Alexandru Staicu"
      ],
      "semver": {
        "vulnerable": [
          "*"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "parsejson",
      "references": [
        {
          "url": "https://github.com/get/parsejson/issues/4",
          "title": "GitHub Issue"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T16:21:11.835443Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-26T21:36:38.438919Z"
        }
      ],
      "description": "## Overview\n\n[parsejson](https://www.npmjs.com/package/parsejson) is a method that parses a JSON string and returns a JSON object.\n\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks.\nAn attacker may pass a specially crafted JSON data, causing the server to hang.\n\n## Details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\r\n\r\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\r\n\r\nLet’s take the following regular expression as an example:\r\n```js\r\nregex = /A(B|C+)+D/\r\n```\r\n\r\nThis regular expression accomplishes the following:\r\n- `A` The string must start with the letter 'A'\r\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\r\n- `D` Finally, we ensure this section of the string ends with a 'D'\r\n\r\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\r\n\r\nIt most cases, it doesn't take very long for a regex engine to find a match:\r\n\r\n```bash\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\r\n0.04s user 0.01s system 95% cpu 0.052 total\r\n\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\r\n1.79s user 0.02s system 99% cpu 1.812 total\r\n```\r\n\r\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\r\n\r\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\r\n\r\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\r\n1. CCC\r\n2. CC+C\r\n3. C+CC\r\n4. C+C+C.\r\n\r\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\r\n\r\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\r\n\r\n| String | Number of C's | Number of steps |\r\n| -------|-------------:| -----:|\r\n| ACCCX | 3 | 38\r\n| ACCCCX | 4 | 71\r\n| ACCCCCX | 5 | 136\r\n| ACCCCCCCCCCCCCCX | 14 | 65,553\r\n\r\n\r\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\n\nThere is no fixed version for `parsejson`.\n\n\n## References\n\n- [GitHub Issue](https://github.com/get/parsejson/issues/4)\n",
      "epssDetails": {
        "percentile": "0.43420",
        "probability": "0.00112",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2017-16113"
        ],
        "CWE": [
          "CWE-400"
        ],
        "NSP": [
          "528"
        ],
        "GHSA": [
          "GHSA-q75g-2496-mxpp"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-PARSEJSON-10780"
        ]
      },
      "packageName": "parsejson",
      "proprietary": false,
      "creationTime": "2017-09-21T08:04:21.338000Z",
      "functions_new": [],
      "alternativeIds": [
        "SNYK-JS-PARSEJSON-10780"
      ],
      "disclosureTime": "2017-09-07T21:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2017-09-21T08:04:21Z",
      "modificationTime": "2023-03-26T21:36:38.438919Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "packagePopularityRank": 98,
      "from": [
        "swagger-doc-viewer@mimarec/swagger-doc-viewer",
        "socket.io@1.7.4",
        "socket.io-client@1.7.4",
        "engine.io-client@1.8.6",
        "parsejson@0.0.3"
      ],
      "upgradePath": [],
      "version": "0.0.3",
      "name": "parsejson",
      "isUpgradable": false,
      "isPatchable": false,
      "isPinnable": false
    }
  ],
  "numDependencies": 105,
  "severityMap": {
    "critical": 3,
    "high": 6,
    "medium": 3,
    "low": 16
  },
  "org": "bruswei",
  "packageManager": "npm",
  "summary": "28 vulnerable dependency paths",
  "filesystemPolicy": false,
  "filtered": {
    "ignore": [],
    "patch": []
  },
  "uniqueCount": 9,
  "hasUnknownVersions": false,
  "path": "git+https://github.com/mimarec/swagger-doc-viewer.git"
}
